//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KSI.Cobranza.DataLayer.EFModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LoansEntities : DbContext
    {
        public LoansEntities()
            : base("name=LoansEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SP_GET_CLIENT_INFORMATIONS_Result> SP_GET_CLIENT_INFORMATIONS(Nullable<long> clientId, string identificationNumber)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(long));
    
            var identificationNumberParameter = identificationNumber != null ?
                new ObjectParameter("IdentificationNumber", identificationNumber) :
                new ObjectParameter("IdentificationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLIENT_INFORMATIONS_Result>("SP_GET_CLIENT_INFORMATIONS", clientIdParameter, identificationNumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_CONTACT_PHONE_Result> SP_GET_CONTACT_PHONE(Nullable<long> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CONTACT_PHONE_Result>("SP_GET_CONTACT_PHONE", clientIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_CONTACT_EMAIL_Result> SP_GET_CONTACT_EMAIL(Nullable<long> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CONTACT_EMAIL_Result>("SP_GET_CONTACT_EMAIL", clientIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_INFORMATIONS_DETAIL_Result> SP_GET_LOANS_INFORMATIONS_DETAIL(Nullable<long> quotationId, Nullable<int> loanNumber, Nullable<long> accountId)
        {
            var quotationIdParameter = quotationId.HasValue ?
                new ObjectParameter("quotationId", quotationId) :
                new ObjectParameter("quotationId", typeof(long));
    
            var loanNumberParameter = loanNumber.HasValue ?
                new ObjectParameter("LoanNumber", loanNumber) :
                new ObjectParameter("LoanNumber", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_INFORMATIONS_DETAIL_Result>("SP_GET_LOANS_INFORMATIONS_DETAIL", quotationIdParameter, loanNumberParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_COLLATERAL_INFORMATIONS_RESUMEN_Result> SP_GET_LOANS_COLLATERAL_INFORMATIONS_RESUMEN(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_COLLATERAL_INFORMATIONS_RESUMEN_Result>("SP_GET_LOANS_COLLATERAL_INFORMATIONS_RESUMEN", accountIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_COLLATERAL_INFORMATIONS_DETAIL_Result> SP_GET_LOANS_COLLATERAL_INFORMATIONS_DETAIL(Nullable<long> collateralId)
        {
            var collateralIdParameter = collateralId.HasValue ?
                new ObjectParameter("collateralId", collateralId) :
                new ObjectParameter("collateralId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_COLLATERAL_INFORMATIONS_DETAIL_Result>("SP_GET_LOANS_COLLATERAL_INFORMATIONS_DETAIL", collateralIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_CODEBTOR_INFORMATIONS_DETAIL_Result> SP_GET_LOANS_CODEBTOR_INFORMATIONS_DETAIL(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_CODEBTOR_INFORMATIONS_DETAIL_Result>("SP_GET_LOANS_CODEBTOR_INFORMATIONS_DETAIL", accountIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_PAYMENT_PLAN_Result> SP_GET_LOANS_PAYMENT_PLAN(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_PAYMENT_PLAN_Result>("SP_GET_LOANS_PAYMENT_PLAN", accountIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_ENDORSE_COLLATERAL_INFORMATIONS_DETAIL_Result> SP_GET_LOANS_ENDORSE_COLLATERAL_INFORMATIONS_DETAIL(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_ENDORSE_COLLATERAL_INFORMATIONS_DETAIL_Result>("SP_GET_LOANS_ENDORSE_COLLATERAL_INFORMATIONS_DETAIL", accountIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_QUOTA_HEADER_Result> SP_GET_LOANS_QUOTA_HEADER(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_QUOTA_HEADER_Result>("SP_GET_LOANS_QUOTA_HEADER", accountIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_INFORMATIONS_Result> SP_GET_LOANS_INFORMATIONS(string clienteName, string identificationNumber, Nullable<long> quotationId, Nullable<long> accountId, string collateralReference, string chassis)
        {
            var clienteNameParameter = clienteName != null ?
                new ObjectParameter("clienteName", clienteName) :
                new ObjectParameter("clienteName", typeof(string));
    
            var identificationNumberParameter = identificationNumber != null ?
                new ObjectParameter("identificationNumber", identificationNumber) :
                new ObjectParameter("identificationNumber", typeof(string));
    
            var quotationIdParameter = quotationId.HasValue ?
                new ObjectParameter("quotationId", quotationId) :
                new ObjectParameter("quotationId", typeof(long));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(long));
    
            var collateralReferenceParameter = collateralReference != null ?
                new ObjectParameter("collateralReference", collateralReference) :
                new ObjectParameter("collateralReference", typeof(string));
    
            var chassisParameter = chassis != null ?
                new ObjectParameter("Chassis", chassis) :
                new ObjectParameter("Chassis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_INFORMATIONS_Result>("SP_GET_LOANS_INFORMATIONS", clienteNameParameter, identificationNumberParameter, quotationIdParameter, accountIdParameter, collateralReferenceParameter, chassisParameter);
        }
    
        public virtual ObjectResult<FILL_DROP_DOWN_Result> FILL_DROP_DOWN(string dropDownName)
        {
            var dropDownNameParameter = dropDownName != null ?
                new ObjectParameter("DropDownName", dropDownName) :
                new ObjectParameter("DropDownName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FILL_DROP_DOWN_Result>("FILL_DROP_DOWN", dropDownNameParameter);
        }
    
        public virtual ObjectResult<SP_SET_CONTACT_PHONES_Result> SP_SET_CONTACT_PHONES(Nullable<long> contactPhoneId, Nullable<long> relatedContactId, Nullable<int> countryID, string areaCode, string phone, string phoneType, string comments, Nullable<bool> isPrimary, Nullable<bool> isActive, Nullable<int> userId)
        {
            var contactPhoneIdParameter = contactPhoneId.HasValue ?
                new ObjectParameter("contactPhoneId", contactPhoneId) :
                new ObjectParameter("contactPhoneId", typeof(long));
    
            var relatedContactIdParameter = relatedContactId.HasValue ?
                new ObjectParameter("relatedContactId", relatedContactId) :
                new ObjectParameter("relatedContactId", typeof(long));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var areaCodeParameter = areaCode != null ?
                new ObjectParameter("AreaCode", areaCode) :
                new ObjectParameter("AreaCode", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var phoneTypeParameter = phoneType != null ?
                new ObjectParameter("PhoneType", phoneType) :
                new ObjectParameter("PhoneType", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_CONTACT_PHONES_Result>("SP_SET_CONTACT_PHONES", contactPhoneIdParameter, relatedContactIdParameter, countryIDParameter, areaCodeParameter, phoneParameter, phoneTypeParameter, commentsParameter, isPrimaryParameter, isActiveParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_CONTACT_EMAIL_Result> SP_SET_CONTACT_EMAIL(Nullable<long> contactEmailId, Nullable<long> relatedContactId, string email, string emailType, string comments, Nullable<bool> isPrimary, Nullable<bool> isActive, Nullable<int> userId)
        {
            var contactEmailIdParameter = contactEmailId.HasValue ?
                new ObjectParameter("contactEmailId", contactEmailId) :
                new ObjectParameter("contactEmailId", typeof(long));
    
            var relatedContactIdParameter = relatedContactId.HasValue ?
                new ObjectParameter("relatedContactId", relatedContactId) :
                new ObjectParameter("relatedContactId", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var emailTypeParameter = emailType != null ?
                new ObjectParameter("emailType", emailType) :
                new ObjectParameter("emailType", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var isPrimaryParameter = isPrimary.HasValue ?
                new ObjectParameter("IsPrimary", isPrimary) :
                new ObjectParameter("IsPrimary", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_CONTACT_EMAIL_Result>("SP_SET_CONTACT_EMAIL", contactEmailIdParameter, relatedContactIdParameter, emailParameter, emailTypeParameter, commentsParameter, isPrimaryParameter, isActiveParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_LOANS_PAYMENT_PLAN_PROYECTIONS_Result> SP_GET_LOANS_PAYMENT_PLAN_PROYECTIONS(Nullable<long> accountId, Nullable<System.DateTime> dateStatement, Nullable<int> idTipo, Nullable<decimal> montoPago)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            var dateStatementParameter = dateStatement.HasValue ?
                new ObjectParameter("DateStatement", dateStatement) :
                new ObjectParameter("DateStatement", typeof(System.DateTime));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("IdTipo", idTipo) :
                new ObjectParameter("IdTipo", typeof(int));
    
            var montoPagoParameter = montoPago.HasValue ?
                new ObjectParameter("MontoPago", montoPago) :
                new ObjectParameter("MontoPago", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANS_PAYMENT_PLAN_PROYECTIONS_Result>("SP_GET_LOANS_PAYMENT_PLAN_PROYECTIONS", accountIdParameter, dateStatementParameter, idTipoParameter, montoPagoParameter);
        }
    }
}
