using DevExpress.Web;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using WEB.NewBusiness.Common;

namespace WEB.NewBusiness.NewBusiness.UserControls.AddNewClient.Payment
{
    public partial class UCUploadDocumentOfPayments : UC, IUC
    {
        public delegate void EditCreditCard(Entity.UnderWriting.Entities.Payment.ApplyPaymentDetail datos);
        public event EditCreditCard EditCreditCardEvent;

        public delegate void RefreshDocuments();
        public event RefreshDocuments RefreshDocumentsEvent;

        public delegate void RefreshDocumentPath2(string Path);
        public event RefreshDocumentPath2 RefreshDocumentPath2Event;

        public class item
        {
            public string PaymentDocumentation { get; set; }
            public string PaymentDescription { get; set; }
            public string Amount { get; set; }
            public string ResultCode { get; set; }
        }

        protected override void OnPreRender(EventArgs e)
        {
            base.OnPreRender(e);
            Translator();
        }

        public void Translator()
        {
            if (isChangingLang)
                FillData();
        }

        public void save() { }
        public void edit() { }
        public void Initialize() {
            FillData();
        }
        public void ClearData() { }
        protected void gvFormOfPayment_DataBound(object sender, EventArgs e) { }
        public void ReadOnlyControls(bool isReadOnly) { }

        protected void Page_Load(object sender, EventArgs e)
        {
            UCUploadPaymentDocumentPopUp.RefreshDocumentPathEvent += new UCUploadPaymentDocumentPopUp.RefreshDocumentPath(RefreshDocumentPath);
            gvFormOfPayment.Columns[3].Visible = !(ObjServices.IsDataReviewMode);
        }

        public void hideColumn()
        {
            if (ObjServices.IsDataReviewMode && getisView)
            {
                gvFormOfPayment.Enabled = true;
                gvFormOfPayment.Columns[2].Visible = false;
            }

           udpForOfPayment.Update();
        }

        public void RefreshDocumentPath(string Path)
        {
            RefreshDocumentPath2Event(Path);
        }
        public void FillData()
        {
            if (ObjServices.PaymentId.HasValue)
            {
                gvFormOfPayment.DataSource = ObjServices.oPaymentManager.GetAllApplyPaymentDetail
                   (
                         ObjServices.Corp_Id
                       , ObjServices.Region_Id
                       , ObjServices.Country_Id
                       , ObjServices.Domesticreg_Id
                       , ObjServices.State_Prov_Id
                       , ObjServices.City_Id
                       , ObjServices.Office_Id
                       , ObjServices.Case_Seq_No
                       , ObjServices.Hist_Seq_No
                       , ObjServices.PaymentId.Value
                       , ObjServices.Language.ToInt()
                   );
                gvFormOfPayment.DataBind();
            }

            udpForOfPayment.Update();
        }

        protected void gvFormOfPayment_RowCommand(object sender, DevExpress.Web.ASPxGridViewRowCommandEventArgs e)
        {
            var Commando = e.CommandArgs.CommandName;

            var RowIndex = e.VisibleIndex;

            var PaymentDetId = int.Parse(gvFormOfPayment.GetKeyFromAspxGridView("PaymentDetId", RowIndex).ToString());
            var PaymentId = int.Parse(gvFormOfPayment.GetKeyFromAspxGridView("PaymentId", RowIndex).ToString());
            var DocumentId = gvFormOfPayment.GetKeyFromAspxGridView("DocumentId", RowIndex).ToInt() == -1 ? (int?)null :
                              int.Parse(gvFormOfPayment.GetKeyFromAspxGridView("DocumentId", RowIndex).ToString());

            var DocumentTypeId = gvFormOfPayment.GetKeyFromAspxGridView("DocumentTypeId", RowIndex).isNullReferenceObject() ? (int?)null :
                               int.Parse(gvFormOfPayment.GetKeyFromAspxGridView("DocumentTypeId", RowIndex).ToString());

            var DocumentCategoryId = gvFormOfPayment.GetKeyFromAspxGridView("DocumentCategoryId").isNullReferenceObject() ? (int?)null :
                   int.Parse(gvFormOfPayment.GetKeyFromAspxGridView("DocumentCategoryId").ToString());


            switch (Commando)
            {
                case "Modify":
                    var datos = ObjServices.oPaymentManager.GetApplyPaymentDetail
                          (
                                  ObjServices.Corp_Id
                                , ObjServices.Region_Id
                                , ObjServices.Country_Id
                                , ObjServices.Domesticreg_Id
                                , ObjServices.State_Prov_Id
                                , ObjServices.City_Id
                                , ObjServices.Office_Id
                                , ObjServices.Case_Seq_No
                                , ObjServices.Hist_Seq_No
                                , ObjServices.PaymentId.Value
                                , PaymentDetId
                                , ObjServices.Language.ToInt()
                          );

                    if (datos != null)
                    {
                        if (datos.Count() > 0)
                        {
                            EditCreditCardEvent(datos.FirstOrDefault());
                            this.ExcecuteJScript("$('#bodyContent_PaymentContainer_WUCFormOfPayment_txtPath').removeAttr('validation')");
                        }
                    }
                    break;
                case "Delete":
                    var data = ObjServices.oPaymentManager.GetApplyPaymentDetail
                          (
                                  ObjServices.Corp_Id
                                , ObjServices.Region_Id
                                , ObjServices.Country_Id
                                , ObjServices.Domesticreg_Id
                                , ObjServices.State_Prov_Id
                                , ObjServices.City_Id
                                , ObjServices.Office_Id
                                , ObjServices.Case_Seq_No
                                , ObjServices.Hist_Seq_No
                                , ObjServices.PaymentId.Value
                                , PaymentDetId
                                , ObjServices.Language.ToInt()
                          );

                    if (data != null && data.Any())
                    {
                        var PaymentDetail = data.FirstOrDefault();
                        PaymentDetail.UserId = ObjServices.UserID.Value;

                        ObjServices.oPaymentManager.DeletePaymentDetail(PaymentDetail);

                        var payHeader = ObjServices.oPaymentManager.GetPayment
                                          (
                                              ObjServices.Corp_Id
                                            , ObjServices.Region_Id
                                            , ObjServices.Country_Id
                                            , ObjServices.Domesticreg_Id
                                            , ObjServices.State_Prov_Id
                                            , ObjServices.City_Id
                                            , ObjServices.Office_Id
                                            , ObjServices.Case_Seq_No
                                            , ObjServices.Hist_Seq_No
                                            , ObjServices.PaymentId.Value
                                          );

                        payHeader.UserId = ObjServices.UserID.Value;

                        if (payHeader != null)
                        {
                            payHeader.PaymentStatusId = 2;
                            ObjServices.oPaymentManager.UpdatePayment(payHeader);
                        }
                        FillData();
                        RefreshDocumentsEvent();

                    }
                    break;
                case "Upload":

                    hdfPaymentDetailId.Value = PaymentDetId.ToString();

                    if (DocumentId.HasValue)
                    {
                        var DocumentBinary = ObjServices.oPaymentManager.GetDocument(
                                              ObjServices.Corp_Id
                                            , ObjServices.Region_Id
                                            , ObjServices.Country_Id
                                            , ObjServices.Domesticreg_Id
                                            , ObjServices.State_Prov_Id
                                            , ObjServices.City_Id
                                            , ObjServices.Office_Id
                                            , ObjServices.Case_Seq_No
                                            , ObjServices.Hist_Seq_No
                                            , int.Parse(DocumentCategoryId.ToString())
                                            , int.Parse(DocumentTypeId.ToString())
                                            , int.Parse(DocumentId.ToString()));


                        var UCShowPDFPopup1 = (NewBusiness.UserControls.Common.WUCShowPDFPopup)this.Page.Master.FindControl("WUCShowPDFPopup1");
                        var ModalPopUp = (AjaxControlToolkit.ModalPopupExtender)this.Page.Master.FindControl("ModalPopupPDFViewer");
                        //var PdfTitle = (Literal)UCShowPDFPopup1.FindControl("ltTypeDoc");
                        UCShowPDFPopup1.LoadPDFPreview(DocumentBinary.DocumentBinary);
                        //PdfTitle.Text = "View Document";
                        ModalPopUp.Show();
                        this.ExcecuteJScript("$('#pnModalPopupPDFViewer').find('div:first').prepend(CreateNewPopFrame());");

                    }
                    else
                        UCUploadPaymentDocumentPopUp.UploadFileView();
                    break;
            }
        }

        public void showPopup()
        {
            UCUploadPaymentDocumentPopUp.UploadFileView();
            ModalPopupExtender1.Show();
        }

        public void saveDocument(int PaymentDetId)
        {
            UCUploadPaymentDocumentPopUp.saveDocument(PaymentDetId);
        }

        protected void gvFormOfPayment_PageIndexChanged(object sender, EventArgs e)
        {
            FillData();
        }

        protected void gvFormOfPayment_PreRender(object sender, EventArgs e)
        {
            ((ASPxGridView)sender).TranslateColumnsAspxGrid();
        }

        public void Translator(string Lang)
        {
            throw new NotImplementedException();
        }
    }
}
