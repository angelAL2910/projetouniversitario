//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB.NewBusiness.ServicesApi.ContactService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessageData", Namespace="http://schemas.datacontract.org/2004/07/ServicesApi.UnderWriting.Common.Model")]
    [System.SerializableAttribute()]
    public partial class ReturnMessageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ListMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData.StatusProcess StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ListMessage {
            get {
                return this.ListMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMessageField, value) != true)) {
                    this.ListMessageField = value;
                    this.RaisePropertyChanged("ListMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData.StatusProcess Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessageData.StatusProcess", Namespace="http://schemas.datacontract.org/2004/07/ServicesApi.UnderWriting.Common.Model")]
        public enum StatusProcess : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Error = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Success = 1,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicesApi.ContactService.IContactService")]
    public interface IContactService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactInformation", ReplyAction="http://tempuri.org/IContactService/SetContactInformationResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactInformation(string corpId, string contactId, string companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactInformation", ReplyAction="http://tempuri.org/IContactService/SetContactInformationResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactInformationAsync(string corpId, string contactId, string companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactAllInformation", ReplyAction="http://tempuri.org/IContactService/SetContactAllInformationResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactAllInformation(string corpId, string contactId, string companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactAllInformation", ReplyAction="http://tempuri.org/IContactService/SetContactAllInformationResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactAllInformationAsync(string corpId, string contactId, string companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmail", ReplyAction="http://tempuri.org/IContactService/SetContactEmailResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmail(string corpId, string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmail", ReplyAction="http://tempuri.org/IContactService/SetContactEmailResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailAsync(string corpId, string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactPhone", ReplyAction="http://tempuri.org/IContactService/SetContactPhoneResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactPhone(string corpId, string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactPhone", ReplyAction="http://tempuri.org/IContactService/SetContactPhoneResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactPhoneAsync(string corpId, string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentification", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentification(string corpId, string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentification", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationAsync(string corpId, string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactInformationWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactInformationWithCustomerNoResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactInformationWithCustomerNo(string corpId, string contactId, string companyId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactInformationWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactInformationWithCustomerNoResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactInformationWithCustomerNoAsync(string corpId, string contactId, string companyId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactAllInformationWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactAllInformationWithCustomerNoResponse" +
            "")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactAllInformationWithCustomerNo(string corpId, string contactId, string companyId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactAllInformationWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactAllInformationWithCustomerNoResponse" +
            "")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactAllInformationWithCustomerNoAsync(string corpId, string contactId, string companyId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmailWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactEmailWithCustomerNoResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmailWithCustomerNo(string corpId, string contactId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmailWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactEmailWithCustomerNoResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailWithCustomerNoAsync(string corpId, string contactId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactPhoneWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactPhoneWithCustomerNoResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactPhoneWithCustomerNo(string corpId, string contactId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactPhoneWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactPhoneWithCustomerNoResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactPhoneWithCustomerNoAsync(string corpId, string contactId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentificationWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationWithCustomerNoResponse" +
            "")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentificationWithCustomerNo(string corpId, string contactId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentificationWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationWithCustomerNoResponse" +
            "")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationWithCustomerNoAsync(string corpId, string contactId, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmailJuridico", ReplyAction="http://tempuri.org/IContactService/SetContactEmailJuridicoResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmailJuridico(string corpId, string Agent_Legal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmailJuridico", ReplyAction="http://tempuri.org/IContactService/SetContactEmailJuridicoResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailJuridicoAsync(string corpId, string Agent_Legal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentificationJuridico", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationJuridicoResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentificationJuridico(string corpId, string Agent_Legal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentificationJuridico", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationJuridicoResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationJuridicoAsync(string corpId, string Agent_Legal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentificationJuridicoWithCustomerNo" +
            "", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationJuridicoWithCustomerNo" +
            "Response")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentificationJuridicoWithCustomerNo(string corpId, string Agent_Legal, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactIdentificationJuridicoWithCustomerNo" +
            "", ReplyAction="http://tempuri.org/IContactService/SetContactIdentificationJuridicoWithCustomerNo" +
            "Response")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationJuridicoWithCustomerNoAsync(string corpId, string Agent_Legal, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmailJuridicoWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactEmailJuridicoWithCustomerNoResponse")]
        WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmailJuridicoWithCustomerNo(string corpId, string Agent_Legal, string customerNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContactService/SetContactEmailJuridicoWithCustomerNo", ReplyAction="http://tempuri.org/IContactService/SetContactEmailJuridicoWithCustomerNoResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailJuridicoWithCustomerNoAsync(string corpId, string Agent_Legal, string customerNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactServiceChannel : WEB.NewBusiness.ServicesApi.ContactService.IContactService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactServiceClient : System.ServiceModel.ClientBase<WEB.NewBusiness.ServicesApi.ContactService.IContactService>, WEB.NewBusiness.ServicesApi.ContactService.IContactService {
        
        public ContactServiceClient() {
        }
        
        public ContactServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactInformation(string corpId, string contactId, string companyId) {
            return base.Channel.SetContactInformation(corpId, contactId, companyId);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactInformationAsync(string corpId, string contactId, string companyId) {
            return base.Channel.SetContactInformationAsync(corpId, contactId, companyId);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactAllInformation(string corpId, string contactId, string companyId) {
            return base.Channel.SetContactAllInformation(corpId, contactId, companyId);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactAllInformationAsync(string corpId, string contactId, string companyId) {
            return base.Channel.SetContactAllInformationAsync(corpId, contactId, companyId);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmail(string corpId, string contactId) {
            return base.Channel.SetContactEmail(corpId, contactId);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailAsync(string corpId, string contactId) {
            return base.Channel.SetContactEmailAsync(corpId, contactId);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactPhone(string corpId, string contactId) {
            return base.Channel.SetContactPhone(corpId, contactId);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactPhoneAsync(string corpId, string contactId) {
            return base.Channel.SetContactPhoneAsync(corpId, contactId);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentification(string corpId, string contactId) {
            return base.Channel.SetContactIdentification(corpId, contactId);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationAsync(string corpId, string contactId) {
            return base.Channel.SetContactIdentificationAsync(corpId, contactId);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactInformationWithCustomerNo(string corpId, string contactId, string companyId, string customerNo) {
            return base.Channel.SetContactInformationWithCustomerNo(corpId, contactId, companyId, customerNo);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactInformationWithCustomerNoAsync(string corpId, string contactId, string companyId, string customerNo) {
            return base.Channel.SetContactInformationWithCustomerNoAsync(corpId, contactId, companyId, customerNo);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactAllInformationWithCustomerNo(string corpId, string contactId, string companyId, string customerNo) {
            return base.Channel.SetContactAllInformationWithCustomerNo(corpId, contactId, companyId, customerNo);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactAllInformationWithCustomerNoAsync(string corpId, string contactId, string companyId, string customerNo) {
            return base.Channel.SetContactAllInformationWithCustomerNoAsync(corpId, contactId, companyId, customerNo);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmailWithCustomerNo(string corpId, string contactId, string customerNo) {
            return base.Channel.SetContactEmailWithCustomerNo(corpId, contactId, customerNo);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailWithCustomerNoAsync(string corpId, string contactId, string customerNo) {
            return base.Channel.SetContactEmailWithCustomerNoAsync(corpId, contactId, customerNo);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactPhoneWithCustomerNo(string corpId, string contactId, string customerNo) {
            return base.Channel.SetContactPhoneWithCustomerNo(corpId, contactId, customerNo);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactPhoneWithCustomerNoAsync(string corpId, string contactId, string customerNo) {
            return base.Channel.SetContactPhoneWithCustomerNoAsync(corpId, contactId, customerNo);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentificationWithCustomerNo(string corpId, string contactId, string customerNo) {
            return base.Channel.SetContactIdentificationWithCustomerNo(corpId, contactId, customerNo);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationWithCustomerNoAsync(string corpId, string contactId, string customerNo) {
            return base.Channel.SetContactIdentificationWithCustomerNoAsync(corpId, contactId, customerNo);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmailJuridico(string corpId, string Agent_Legal) {
            return base.Channel.SetContactEmailJuridico(corpId, Agent_Legal);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailJuridicoAsync(string corpId, string Agent_Legal) {
            return base.Channel.SetContactEmailJuridicoAsync(corpId, Agent_Legal);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentificationJuridico(string corpId, string Agent_Legal) {
            return base.Channel.SetContactIdentificationJuridico(corpId, Agent_Legal);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationJuridicoAsync(string corpId, string Agent_Legal) {
            return base.Channel.SetContactIdentificationJuridicoAsync(corpId, Agent_Legal);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactIdentificationJuridicoWithCustomerNo(string corpId, string Agent_Legal, string customerNo) {
            return base.Channel.SetContactIdentificationJuridicoWithCustomerNo(corpId, Agent_Legal, customerNo);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactIdentificationJuridicoWithCustomerNoAsync(string corpId, string Agent_Legal, string customerNo) {
            return base.Channel.SetContactIdentificationJuridicoWithCustomerNoAsync(corpId, Agent_Legal, customerNo);
        }
        
        public WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData SetContactEmailJuridicoWithCustomerNo(string corpId, string Agent_Legal, string customerNo) {
            return base.Channel.SetContactEmailJuridicoWithCustomerNo(corpId, Agent_Legal, customerNo);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.ContactService.ReturnMessageData> SetContactEmailJuridicoWithCustomerNoAsync(string corpId, string Agent_Legal, string customerNo) {
            return base.Channel.SetContactEmailJuridicoWithCustomerNoAsync(corpId, Agent_Legal, customerNo);
        }
    }
}
