//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallRex.UnderWriting.CallRexClientService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralSettings", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class GeneralSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AuditSettings AuditSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EmailSettings EmailSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RetentionSettings RetentionSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.VolumeFactor[] VolumeFactorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AuditSettings AuditSettings {
            get {
                return this.AuditSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditSettingsField, value) != true)) {
                    this.AuditSettingsField = value;
                    this.RaisePropertyChanged("AuditSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EmailSettings EmailSettings {
            get {
                return this.EmailSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailSettingsField, value) != true)) {
                    this.EmailSettingsField = value;
                    this.RaisePropertyChanged("EmailSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RetentionSettings RetentionSettings {
            get {
                return this.RetentionSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RetentionSettingsField, value) != true)) {
                    this.RetentionSettingsField = value;
                    this.RaisePropertyChanged("RetentionSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.VolumeFactor[] VolumeFactors {
            get {
                return this.VolumeFactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeFactorsField, value) != true)) {
                    this.VolumeFactorsField = value;
                    this.RaisePropertyChanged("VolumeFactors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditSettings", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class AuditSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuditRetentionMaximumAgeDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuditTrackingEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAuditRetentionMaximumAgeDaysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuditRetentionMaximumAgeDays {
            get {
                return this.AuditRetentionMaximumAgeDaysField;
            }
            set {
                if ((this.AuditRetentionMaximumAgeDaysField.Equals(value) != true)) {
                    this.AuditRetentionMaximumAgeDaysField = value;
                    this.RaisePropertyChanged("AuditRetentionMaximumAgeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuditTrackingEnabled {
            get {
                return this.IsAuditTrackingEnabledField;
            }
            set {
                if ((this.IsAuditTrackingEnabledField.Equals(value) != true)) {
                    this.IsAuditTrackingEnabledField = value;
                    this.RaisePropertyChanged("IsAuditTrackingEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAuditRetentionMaximumAgeDays {
            get {
                return this.UseAuditRetentionMaximumAgeDaysField;
            }
            set {
                if ((this.UseAuditRetentionMaximumAgeDaysField.Equals(value) != true)) {
                    this.UseAuditRetentionMaximumAgeDaysField = value;
                    this.RaisePropertyChanged("UseAuditRetentionMaximumAgeDays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailSettings", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EmailSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlertLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEventLogAlertsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSmtpAlertsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmtpPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmtpPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SmtpRequiresAuthenticationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmtpServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmtpUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlertLanguage {
            get {
                return this.AlertLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertLanguageField, value) != true)) {
                    this.AlertLanguageField = value;
                    this.RaisePropertyChanged("AlertLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmailAddress {
            get {
                return this.FromEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailAddressField, value) != true)) {
                    this.FromEmailAddressField = value;
                    this.RaisePropertyChanged("FromEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEventLogAlertsEnabled {
            get {
                return this.IsEventLogAlertsEnabledField;
            }
            set {
                if ((this.IsEventLogAlertsEnabledField.Equals(value) != true)) {
                    this.IsEventLogAlertsEnabledField = value;
                    this.RaisePropertyChanged("IsEventLogAlertsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSmtpAlertsEnabled {
            get {
                return this.IsSmtpAlertsEnabledField;
            }
            set {
                if ((this.IsSmtpAlertsEnabledField.Equals(value) != true)) {
                    this.IsSmtpAlertsEnabledField = value;
                    this.RaisePropertyChanged("IsSmtpAlertsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpPassword {
            get {
                return this.SmtpPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.SmtpPasswordField, value) != true)) {
                    this.SmtpPasswordField = value;
                    this.RaisePropertyChanged("SmtpPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpPort {
            get {
                return this.SmtpPortField;
            }
            set {
                if ((object.ReferenceEquals(this.SmtpPortField, value) != true)) {
                    this.SmtpPortField = value;
                    this.RaisePropertyChanged("SmtpPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmtpRequiresAuthentication {
            get {
                return this.SmtpRequiresAuthenticationField;
            }
            set {
                if ((this.SmtpRequiresAuthenticationField.Equals(value) != true)) {
                    this.SmtpRequiresAuthenticationField = value;
                    this.RaisePropertyChanged("SmtpRequiresAuthentication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpServer {
            get {
                return this.SmtpServerField;
            }
            set {
                if ((object.ReferenceEquals(this.SmtpServerField, value) != true)) {
                    this.SmtpServerField = value;
                    this.RaisePropertyChanged("SmtpServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpUserName {
            get {
                return this.SmtpUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SmtpUserNameField, value) != true)) {
                    this.SmtpUserNameField = value;
                    this.RaisePropertyChanged("SmtpUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetentionSettings", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class RetentionSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowAECallDeletionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RetentionMaximumAgeDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RetentionMinimumDurationSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseRetentionMaximumAgeDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseRetentionMinimumDurationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAECallDeletion {
            get {
                return this.AllowAECallDeletionField;
            }
            set {
                if ((this.AllowAECallDeletionField.Equals(value) != true)) {
                    this.AllowAECallDeletionField = value;
                    this.RaisePropertyChanged("AllowAECallDeletion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RetentionMaximumAgeDays {
            get {
                return this.RetentionMaximumAgeDaysField;
            }
            set {
                if ((this.RetentionMaximumAgeDaysField.Equals(value) != true)) {
                    this.RetentionMaximumAgeDaysField = value;
                    this.RaisePropertyChanged("RetentionMaximumAgeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RetentionMinimumDurationSeconds {
            get {
                return this.RetentionMinimumDurationSecondsField;
            }
            set {
                if ((this.RetentionMinimumDurationSecondsField.Equals(value) != true)) {
                    this.RetentionMinimumDurationSecondsField = value;
                    this.RaisePropertyChanged("RetentionMinimumDurationSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseRetentionMaximumAgeDays {
            get {
                return this.UseRetentionMaximumAgeDaysField;
            }
            set {
                if ((this.UseRetentionMaximumAgeDaysField.Equals(value) != true)) {
                    this.UseRetentionMaximumAgeDaysField = value;
                    this.RaisePropertyChanged("UseRetentionMaximumAgeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseRetentionMinimumDuration {
            get {
                return this.UseRetentionMinimumDurationField;
            }
            set {
                if ((this.UseRetentionMinimumDurationField.Equals(value) != true)) {
                    this.UseRetentionMinimumDurationField = value;
                    this.RaisePropertyChanged("UseRetentionMinimumDuration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VolumeFactor", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class VolumeFactor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VolumeFactorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VolumeFactorID {
            get {
                return this.VolumeFactorIDField;
            }
            set {
                if ((this.VolumeFactorIDField.Equals(value) != true)) {
                    this.VolumeFactorIDField = value;
                    this.RaisePropertyChanged("VolumeFactorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseInfo", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class LicenseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvailableCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTimeLimitedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.LicenseType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvailableCount {
            get {
                return this.AvailableCountField;
            }
            set {
                if ((this.AvailableCountField.Equals(value) != true)) {
                    this.AvailableCountField = value;
                    this.RaisePropertyChanged("AvailableCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExpired {
            get {
                return this.IsExpiredField;
            }
            set {
                if ((this.IsExpiredField.Equals(value) != true)) {
                    this.IsExpiredField = value;
                    this.RaisePropertyChanged("IsExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTimeLimited {
            get {
                return this.IsTimeLimitedField;
            }
            set {
                if ((this.IsTimeLimitedField.Equals(value) != true)) {
                    this.IsTimeLimitedField = value;
                    this.RaisePropertyChanged("IsTimeLimited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.LicenseType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum LicenseType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallRecording = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallRecording_OD = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerRecording = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgentEvaluation = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QualityManagementSuite = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordingType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum RecordingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallRecording = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScreenRecording = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTransferReason", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum FileTransferReason : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Export = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Playback = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Api = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTransferInfo", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class FileTransferInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchiveNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.XferFileType TransferFileTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArchiveName {
            get {
                return this.ArchiveNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveNameField, value) != true)) {
                    this.ArchiveNameField = value;
                    this.RaisePropertyChanged("ArchiveName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArchived {
            get {
                return this.IsArchivedField;
            }
            set {
                if ((this.IsArchivedField.Equals(value) != true)) {
                    this.IsArchivedField = value;
                    this.RaisePropertyChanged("IsArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.XferFileType TransferFileType {
            get {
                return this.TransferFileTypeField;
            }
            set {
                if ((this.TransferFileTypeField.Equals(value) != true)) {
                    this.TransferFileTypeField = value;
                    this.RaisePropertyChanged("TransferFileType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XferFileType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum XferFileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallRecording = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScreenRecording = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zip = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordedCallContainer", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class RecordedCallContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan CallDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CallLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CallStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CallStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerIDNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNISField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DialedNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FromCallLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecordingChainSegmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordingFlagValue[] RecordingFlagValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ToCallLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.UserListItem UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XferFromField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan CallDuration {
            get {
                return this.CallDurationField;
            }
            set {
                if ((this.CallDurationField.Equals(value) != true)) {
                    this.CallDurationField = value;
                    this.RaisePropertyChanged("CallDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallID {
            get {
                return this.CallIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CallIDField, value) != true)) {
                    this.CallIDField = value;
                    this.RaisePropertyChanged("CallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CallLogID {
            get {
                return this.CallLogIDField;
            }
            set {
                if ((this.CallLogIDField.Equals(value) != true)) {
                    this.CallLogIDField = value;
                    this.RaisePropertyChanged("CallLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CallStart {
            get {
                return this.CallStartField;
            }
            set {
                if ((this.CallStartField.Equals(value) != true)) {
                    this.CallStartField = value;
                    this.RaisePropertyChanged("CallStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CallStop {
            get {
                return this.CallStopField;
            }
            set {
                if ((this.CallStopField.Equals(value) != true)) {
                    this.CallStopField = value;
                    this.RaisePropertyChanged("CallStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerIDName {
            get {
                return this.CallerIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerIDNameField, value) != true)) {
                    this.CallerIDNameField = value;
                    this.RaisePropertyChanged("CallerIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerIDNo {
            get {
                return this.CallerIDNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerIDNoField, value) != true)) {
                    this.CallerIDNoField = value;
                    this.RaisePropertyChanged("CallerIDNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNIS {
            get {
                return this.DNISField;
            }
            set {
                if ((object.ReferenceEquals(this.DNISField, value) != true)) {
                    this.DNISField = value;
                    this.RaisePropertyChanged("DNIS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DialedNumber {
            get {
                return this.DialedNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DialedNumberField, value) != true)) {
                    this.DialedNumberField = value;
                    this.RaisePropertyChanged("DialedNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileHash {
            get {
                return this.FileHashField;
            }
            set {
                if ((object.ReferenceEquals(this.FileHashField, value) != true)) {
                    this.FileHashField = value;
                    this.RaisePropertyChanged("FileHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileLocation {
            get {
                return this.FileLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FileLocationField, value) != true)) {
                    this.FileLocationField = value;
                    this.RaisePropertyChanged("FileLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FromCallLogID {
            get {
                return this.FromCallLogIDField;
            }
            set {
                if ((this.FromCallLogIDField.Equals(value) != true)) {
                    this.FromCallLogIDField = value;
                    this.RaisePropertyChanged("FromCallLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecordingChainSegment {
            get {
                return this.IsRecordingChainSegmentField;
            }
            set {
                if ((this.IsRecordingChainSegmentField.Equals(value) != true)) {
                    this.IsRecordingChainSegmentField = value;
                    this.RaisePropertyChanged("IsRecordingChainSegment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordedBy {
            get {
                return this.RecordedByField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordedByField, value) != true)) {
                    this.RecordedByField = value;
                    this.RaisePropertyChanged("RecordedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordingFlagValue[] RecordingFlagValues {
            get {
                return this.RecordingFlagValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingFlagValuesField, value) != true)) {
                    this.RecordingFlagValuesField = value;
                    this.RaisePropertyChanged("RecordingFlagValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ToCallLogID {
            get {
                return this.ToCallLogIDField;
            }
            set {
                if ((this.ToCallLogIDField.Equals(value) != true)) {
                    this.ToCallLogIDField = value;
                    this.RaisePropertyChanged("ToCallLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.UserListItem User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XferFrom {
            get {
                return this.XferFromField;
            }
            set {
                if ((object.ReferenceEquals(this.XferFromField, value) != true)) {
                    this.XferFromField = value;
                    this.RaisePropertyChanged("XferFrom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class UserListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAgentEvalLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCallRecordingLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasComputerRecordingLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasDemandRecordingLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentID {
            get {
                return this.AgentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentIDField, value) != true)) {
                    this.AgentIDField = value;
                    this.RaisePropertyChanged("AgentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAgentEvalLicense {
            get {
                return this.HasAgentEvalLicenseField;
            }
            set {
                if ((this.HasAgentEvalLicenseField.Equals(value) != true)) {
                    this.HasAgentEvalLicenseField = value;
                    this.RaisePropertyChanged("HasAgentEvalLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCallRecordingLicense {
            get {
                return this.HasCallRecordingLicenseField;
            }
            set {
                if ((this.HasCallRecordingLicenseField.Equals(value) != true)) {
                    this.HasCallRecordingLicenseField = value;
                    this.RaisePropertyChanged("HasCallRecordingLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasComputerRecordingLicense {
            get {
                return this.HasComputerRecordingLicenseField;
            }
            set {
                if ((this.HasComputerRecordingLicenseField.Equals(value) != true)) {
                    this.HasComputerRecordingLicenseField = value;
                    this.RaisePropertyChanged("HasComputerRecordingLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasDemandRecordingLicense {
            get {
                return this.HasDemandRecordingLicenseField;
            }
            set {
                if ((this.HasDemandRecordingLicenseField.Equals(value) != true)) {
                    this.HasDemandRecordingLicenseField = value;
                    this.RaisePropertyChanged("HasDemandRecordingLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAgent {
            get {
                return this.IsAgentField;
            }
            set {
                if ((this.IsAgentField.Equals(value) != true)) {
                    this.IsAgentField = value;
                    this.RaisePropertyChanged("IsAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDevice {
            get {
                return this.IsDeviceField;
            }
            set {
                if ((this.IsDeviceField.Equals(value) != true)) {
                    this.IsDeviceField = value;
                    this.RaisePropertyChanged("IsDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordingFlagValue", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class RecordingFlagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FlagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FlagId {
            get {
                return this.FlagIdField;
            }
            set {
                if ((this.FlagIdField.Equals(value) != true)) {
                    this.FlagIdField = value;
                    this.RaisePropertyChanged("FlagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagName {
            get {
                return this.FlagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagNameField, value) != true)) {
                    this.FlagNameField = value;
                    this.RaisePropertyChanged("FlagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagValue {
            get {
                return this.FlagValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagValueField, value) != true)) {
                    this.FlagValueField = value;
                    this.RaisePropertyChanged("FlagValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordingId {
            get {
                return this.RecordingIdField;
            }
            set {
                if ((this.RecordingIdField.Equals(value) != true)) {
                    this.RecordingIdField = value;
                    this.RaisePropertyChanged("RecordingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordedMediaContainer", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class RecordedMediaContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordedCallContainer CallRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer ComputerRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MediaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordedMediaType MediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordedCallContainer CallRecording {
            get {
                return this.CallRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.CallRecordingField, value) != true)) {
                    this.CallRecordingField = value;
                    this.RaisePropertyChanged("CallRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer ComputerRecording {
            get {
                return this.ComputerRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerRecordingField, value) != true)) {
                    this.ComputerRecordingField = value;
                    this.RaisePropertyChanged("ComputerRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MediaID {
            get {
                return this.MediaIDField;
            }
            set {
                if ((this.MediaIDField.Equals(value) != true)) {
                    this.MediaIDField = value;
                    this.RaisePropertyChanged("MediaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordedMediaType MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((this.MediaTypeField.Equals(value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComputerRecordingContainer", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ComputerRecordingContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CallLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan RecordingDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordingFlagValue[] RecordingFlagValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordingStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordingStopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScreenRecordingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.UserListItem UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XferFromField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CallLogID {
            get {
                return this.CallLogIDField;
            }
            set {
                if ((this.CallLogIDField.Equals(value) != true)) {
                    this.CallLogIDField = value;
                    this.RaisePropertyChanged("CallLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileLocation {
            get {
                return this.FileLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FileLocationField, value) != true)) {
                    this.FileLocationField = value;
                    this.RaisePropertyChanged("FileLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hostname {
            get {
                return this.HostnameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostnameField, value) != true)) {
                    this.HostnameField = value;
                    this.RaisePropertyChanged("Hostname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan RecordingDuration {
            get {
                return this.RecordingDurationField;
            }
            set {
                if ((this.RecordingDurationField.Equals(value) != true)) {
                    this.RecordingDurationField = value;
                    this.RaisePropertyChanged("RecordingDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordingFlagValue[] RecordingFlagValues {
            get {
                return this.RecordingFlagValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingFlagValuesField, value) != true)) {
                    this.RecordingFlagValuesField = value;
                    this.RaisePropertyChanged("RecordingFlagValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordingStart {
            get {
                return this.RecordingStartField;
            }
            set {
                if ((this.RecordingStartField.Equals(value) != true)) {
                    this.RecordingStartField = value;
                    this.RaisePropertyChanged("RecordingStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordingStop {
            get {
                return this.RecordingStopField;
            }
            set {
                if ((this.RecordingStopField.Equals(value) != true)) {
                    this.RecordingStopField = value;
                    this.RaisePropertyChanged("RecordingStop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScreenRecordingID {
            get {
                return this.ScreenRecordingIDField;
            }
            set {
                if ((this.ScreenRecordingIDField.Equals(value) != true)) {
                    this.ScreenRecordingIDField = value;
                    this.RaisePropertyChanged("ScreenRecordingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.UserListItem User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XferFrom {
            get {
                return this.XferFromField;
            }
            set {
                if ((object.ReferenceEquals(this.XferFromField, value) != true)) {
                    this.XferFromField = value;
                    this.RaisePropertyChanged("XferFrom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordedMediaType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum RecordedMediaType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Calls = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Screens = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DontCare = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndpointNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EndpointNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordingIsArchivedFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class RecordingIsArchivedFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidDataSourceFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class InvalidDataSourceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataSourceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSourceName {
            get {
                return this.DataSourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceNameField, value) != true)) {
                    this.DataSourceNameField = value;
                    this.RaisePropertyChanged("DataSourceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EncryptionInfo", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EncryptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActiveKeyStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActiveKeyStartDate {
            get {
                return this.ActiveKeyStartDateField;
            }
            set {
                if ((this.ActiveKeyStartDateField.Equals(value) != true)) {
                    this.ActiveKeyStartDateField = value;
                    this.RaisePropertyChanged("ActiveKeyStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessDeniedFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class AccessDeniedFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidLoginFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class InvalidLoginFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLicenseRequiredFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class UserLicenseRequiredFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ServiceListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastContactTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalStorageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PbxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PbxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PbxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryEndpointSubnetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemoteStorageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastContactTime {
            get {
                return this.LastContactTimeField;
            }
            set {
                if ((this.LastContactTimeField.Equals(value) != true)) {
                    this.LastContactTimeField = value;
                    this.RaisePropertyChanged("LastContactTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalStorageLocation {
            get {
                return this.LocalStorageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalStorageLocationField, value) != true)) {
                    this.LocalStorageLocationField = value;
                    this.RaisePropertyChanged("LocalStorageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PbxID {
            get {
                return this.PbxIDField;
            }
            set {
                if ((this.PbxIDField.Equals(value) != true)) {
                    this.PbxIDField = value;
                    this.RaisePropertyChanged("PbxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PbxName {
            get {
                return this.PbxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PbxNameField, value) != true)) {
                    this.PbxNameField = value;
                    this.RaisePropertyChanged("PbxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PbxType {
            get {
                return this.PbxTypeField;
            }
            set {
                if ((this.PbxTypeField.Equals(value) != true)) {
                    this.PbxTypeField = value;
                    this.RaisePropertyChanged("PbxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEndpointSubnet {
            get {
                return this.PrimaryEndpointSubnetField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEndpointSubnetField, value) != true)) {
                    this.PrimaryEndpointSubnetField = value;
                    this.RaisePropertyChanged("PrimaryEndpointSubnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemoteStorageLocation {
            get {
                return this.RemoteStorageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteStorageLocationField, value) != true)) {
                    this.RemoteStorageLocationField = value;
                    this.RaisePropertyChanged("RemoteStorageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PbxListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class PbxListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PbxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PbxMfgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PbxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PbxTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PbxID {
            get {
                return this.PbxIDField;
            }
            set {
                if ((this.PbxIDField.Equals(value) != true)) {
                    this.PbxIDField = value;
                    this.RaisePropertyChanged("PbxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PbxMfgName {
            get {
                return this.PbxMfgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PbxMfgNameField, value) != true)) {
                    this.PbxMfgNameField = value;
                    this.RaisePropertyChanged("PbxMfgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PbxName {
            get {
                return this.PbxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PbxNameField, value) != true)) {
                    this.PbxNameField = value;
                    this.RaisePropertyChanged("PbxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PbxType {
            get {
                return this.PbxTypeField;
            }
            set {
                if ((this.PbxTypeField.Equals(value) != true)) {
                    this.PbxTypeField = value;
                    this.RaisePropertyChanged("PbxType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPreferenceItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class UserPreferenceItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferenceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IntValue {
            get {
                return this.IntValueField;
            }
            set {
                if ((this.IntValueField.Equals(value) != true)) {
                    this.IntValueField = value;
                    this.RaisePropertyChanged("IntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInt {
            get {
                return this.IsIntField;
            }
            set {
                if ((this.IsIntField.Equals(value) != true)) {
                    this.IsIntField = value;
                    this.RaisePropertyChanged("IsInt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsString {
            get {
                return this.IsStringField;
            }
            set {
                if ((this.IsStringField.Equals(value) != true)) {
                    this.IsStringField = value;
                    this.RaisePropertyChanged("IsString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferenceName {
            get {
                return this.PreferenceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferenceNameField, value) != true)) {
                    this.PreferenceNameField = value;
                    this.RaisePropertyChanged("PreferenceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditLog", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class AuditLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AuditActionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AuditLogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TargetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetInfo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetInfo2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetInfo3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionType {
            get {
                return this.ActionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTypeField, value) != true)) {
                    this.ActionTypeField = value;
                    this.RaisePropertyChanged("ActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AuditActionTypeId {
            get {
                return this.AuditActionTypeIdField;
            }
            set {
                if ((this.AuditActionTypeIdField.Equals(value) != true)) {
                    this.AuditActionTypeIdField = value;
                    this.RaisePropertyChanged("AuditActionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AuditLogId {
            get {
                return this.AuditLogIdField;
            }
            set {
                if ((this.AuditLogIdField.Equals(value) != true)) {
                    this.AuditLogIdField = value;
                    this.RaisePropertyChanged("AuditLogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TargetId {
            get {
                return this.TargetIdField;
            }
            set {
                if ((this.TargetIdField.Equals(value) != true)) {
                    this.TargetIdField = value;
                    this.RaisePropertyChanged("TargetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetInfo1 {
            get {
                return this.TargetInfo1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TargetInfo1Field, value) != true)) {
                    this.TargetInfo1Field = value;
                    this.RaisePropertyChanged("TargetInfo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetInfo2 {
            get {
                return this.TargetInfo2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TargetInfo2Field, value) != true)) {
                    this.TargetInfo2Field = value;
                    this.RaisePropertyChanged("TargetInfo2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetInfo3 {
            get {
                return this.TargetInfo3Field;
            }
            set {
                if ((object.ReferenceEquals(this.TargetInfo3Field, value) != true)) {
                    this.TargetInfo3Field = value;
                    this.RaisePropertyChanged("TargetInfo3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetType {
            get {
                return this.TargetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetTypeField, value) != true)) {
                    this.TargetTypeField = value;
                    this.RaisePropertyChanged("TargetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditActionType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class AuditActionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AuditActionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionType {
            get {
                return this.ActionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTypeField, value) != true)) {
                    this.ActionTypeField = value;
                    this.RaisePropertyChanged("ActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AuditActionTypeId {
            get {
                return this.AuditActionTypeIdField;
            }
            set {
                if ((this.AuditActionTypeIdField.Equals(value) != true)) {
                    this.AuditActionTypeIdField = value;
                    this.RaisePropertyChanged("AuditActionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetType {
            get {
                return this.TargetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetTypeField, value) != true)) {
                    this.TargetTypeField = value;
                    this.RaisePropertyChanged("TargetType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Audit.Action", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum AuditAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Edit = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditManagedUsers = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartCallMonitor = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartScreenMonitor = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditMembership = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartPlayback = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Export = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Audit.TargetType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum AuditTargetType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallRecordingProfile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScreenRecordingProfile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecurityProfile = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        License = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        General = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLog = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScreenRecording = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuditLog = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedReport = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalExtensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] CallRecordingProfileIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CallRecordingProfileNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] ComputerRecordingProfileIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DeviceAddressArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DeviceAddressArray2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAgentEvaluationLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCallRecordingLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasComputerRecordingLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDualEndptsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLookbackEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnDemandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrivacyEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastComputerLoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateExtensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecordingServerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordingServerIpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SecurityProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SipURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowsLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isContactCenterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalExtensions {
            get {
                return this.AdditionalExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalExtensionsField, value) != true)) {
                    this.AdditionalExtensionsField = value;
                    this.RaisePropertyChanged("AdditionalExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentID {
            get {
                return this.AgentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentIDField, value) != true)) {
                    this.AgentIDField = value;
                    this.RaisePropertyChanged("AgentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] CallRecordingProfileIDs {
            get {
                return this.CallRecordingProfileIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CallRecordingProfileIDsField, value) != true)) {
                    this.CallRecordingProfileIDsField = value;
                    this.RaisePropertyChanged("CallRecordingProfileIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CallRecordingProfileNames {
            get {
                return this.CallRecordingProfileNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CallRecordingProfileNamesField, value) != true)) {
                    this.CallRecordingProfileNamesField = value;
                    this.RaisePropertyChanged("CallRecordingProfileNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] ComputerRecordingProfileIDs {
            get {
                return this.ComputerRecordingProfileIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerRecordingProfileIDsField, value) != true)) {
                    this.ComputerRecordingProfileIDsField = value;
                    this.RaisePropertyChanged("ComputerRecordingProfileIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceAddress {
            get {
                return this.DeviceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceAddressField, value) != true)) {
                    this.DeviceAddressField = value;
                    this.RaisePropertyChanged("DeviceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceAddress2 {
            get {
                return this.DeviceAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceAddress2Field, value) != true)) {
                    this.DeviceAddress2Field = value;
                    this.RaisePropertyChanged("DeviceAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DeviceAddressArray {
            get {
                return this.DeviceAddressArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceAddressArrayField, value) != true)) {
                    this.DeviceAddressArrayField = value;
                    this.RaisePropertyChanged("DeviceAddressArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DeviceAddressArray2 {
            get {
                return this.DeviceAddressArray2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceAddressArray2Field, value) != true)) {
                    this.DeviceAddressArray2Field = value;
                    this.RaisePropertyChanged("DeviceAddressArray2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtensionPassword {
            get {
                return this.ExtensionPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionPasswordField, value) != true)) {
                    this.ExtensionPasswordField = value;
                    this.RaisePropertyChanged("ExtensionPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAgentEvaluationLicense {
            get {
                return this.HasAgentEvaluationLicenseField;
            }
            set {
                if ((this.HasAgentEvaluationLicenseField.Equals(value) != true)) {
                    this.HasAgentEvaluationLicenseField = value;
                    this.RaisePropertyChanged("HasAgentEvaluationLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCallRecordingLicense {
            get {
                return this.HasCallRecordingLicenseField;
            }
            set {
                if ((this.HasCallRecordingLicenseField.Equals(value) != true)) {
                    this.HasCallRecordingLicenseField = value;
                    this.RaisePropertyChanged("HasCallRecordingLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasComputerRecordingLicense {
            get {
                return this.HasComputerRecordingLicenseField;
            }
            set {
                if ((this.HasComputerRecordingLicenseField.Equals(value) != true)) {
                    this.HasComputerRecordingLicenseField = value;
                    this.RaisePropertyChanged("HasComputerRecordingLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDevice {
            get {
                return this.IsDeviceField;
            }
            set {
                if ((this.IsDeviceField.Equals(value) != true)) {
                    this.IsDeviceField = value;
                    this.RaisePropertyChanged("IsDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDualEndptsEnabled {
            get {
                return this.IsDualEndptsEnabledField;
            }
            set {
                if ((this.IsDualEndptsEnabledField.Equals(value) != true)) {
                    this.IsDualEndptsEnabledField = value;
                    this.RaisePropertyChanged("IsDualEndptsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLookbackEnabled {
            get {
                return this.IsLookbackEnabledField;
            }
            set {
                if ((this.IsLookbackEnabledField.Equals(value) != true)) {
                    this.IsLookbackEnabledField = value;
                    this.RaisePropertyChanged("IsLookbackEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnDemand {
            get {
                return this.IsOnDemandField;
            }
            set {
                if ((this.IsOnDemandField.Equals(value) != true)) {
                    this.IsOnDemandField = value;
                    this.RaisePropertyChanged("IsOnDemand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivacyEnabled {
            get {
                return this.IsPrivacyEnabledField;
            }
            set {
                if ((this.IsPrivacyEnabledField.Equals(value) != true)) {
                    this.IsPrivacyEnabledField = value;
                    this.RaisePropertyChanged("IsPrivacyEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastComputerLoginTime {
            get {
                return this.LastComputerLoginTimeField;
            }
            set {
                if ((this.LastComputerLoginTimeField.Equals(value) != true)) {
                    this.LastComputerLoginTimeField = value;
                    this.RaisePropertyChanged("LastComputerLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateExtensions {
            get {
                return this.PrivateExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateExtensionsField, value) != true)) {
                    this.PrivateExtensionsField = value;
                    this.RaisePropertyChanged("PrivateExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecordingServerID {
            get {
                return this.RecordingServerIDField;
            }
            set {
                if ((this.RecordingServerIDField.Equals(value) != true)) {
                    this.RecordingServerIDField = value;
                    this.RaisePropertyChanged("RecordingServerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordingServerIpAddress {
            get {
                return this.RecordingServerIpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingServerIpAddressField, value) != true)) {
                    this.RecordingServerIpAddressField = value;
                    this.RaisePropertyChanged("RecordingServerIpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SecurityProfileID {
            get {
                return this.SecurityProfileIDField;
            }
            set {
                if ((this.SecurityProfileIDField.Equals(value) != true)) {
                    this.SecurityProfileIDField = value;
                    this.RaisePropertyChanged("SecurityProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityProfileName {
            get {
                return this.SecurityProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityProfileNameField, value) != true)) {
                    this.SecurityProfileNameField = value;
                    this.RaisePropertyChanged("SecurityProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SipURI {
            get {
                return this.SipURIField;
            }
            set {
                if ((object.ReferenceEquals(this.SipURIField, value) != true)) {
                    this.SipURIField = value;
                    this.RaisePropertyChanged("SipURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowsLogin {
            get {
                return this.WindowsLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsLoginField, value) != true)) {
                    this.WindowsLoginField = value;
                    this.RaisePropertyChanged("WindowsLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isContactCenter {
            get {
                return this.isContactCenterField;
            }
            set {
                if ((this.isContactCenterField.Equals(value) != true)) {
                    this.isContactCenterField = value;
                    this.RaisePropertyChanged("isContactCenter");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuidPair", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class GuidPair : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComputerRecordingDeployment", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ComputerRecordingDeployment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeploymentStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IntelrexDeploymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastContactStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowsUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeploymentStamp {
            get {
                return this.DeploymentStampField;
            }
            set {
                if ((this.DeploymentStampField.Equals(value) != true)) {
                    this.DeploymentStampField = value;
                    this.RaisePropertyChanged("DeploymentStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IntelrexDeploymentID {
            get {
                return this.IntelrexDeploymentIDField;
            }
            set {
                if ((this.IntelrexDeploymentIDField.Equals(value) != true)) {
                    this.IntelrexDeploymentIDField = value;
                    this.RaisePropertyChanged("IntelrexDeploymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastContactStamp {
            get {
                return this.LastContactStampField;
            }
            set {
                if ((this.LastContactStampField.Equals(value) != true)) {
                    this.LastContactStampField = value;
                    this.RaisePropertyChanged("LastContactStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceVersion {
            get {
                return this.ServiceVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceVersionField, value) != true)) {
                    this.ServiceVersionField = value;
                    this.RaisePropertyChanged("ServiceVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowsUserName {
            get {
                return this.WindowsUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowsUserNameField, value) != true)) {
                    this.WindowsUserNameField = value;
                    this.RaisePropertyChanged("WindowsUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class RecordNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SerializedActiveDirectoryNode", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class SerializedActiveDirectoryNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ActiveDirectoryNodeTypes NodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualifiedContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubnodesDiscoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> UserDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommonName {
            get {
                return this.CommonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonNameField, value) != true)) {
                    this.CommonNameField = value;
                    this.RaisePropertyChanged("CommonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ActiveDirectoryNodeTypes NodeType {
            get {
                return this.NodeTypeField;
            }
            set {
                if ((this.NodeTypeField.Equals(value) != true)) {
                    this.NodeTypeField = value;
                    this.RaisePropertyChanged("NodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualifiedContext {
            get {
                return this.QualifiedContextField;
            }
            set {
                if ((object.ReferenceEquals(this.QualifiedContextField, value) != true)) {
                    this.QualifiedContextField = value;
                    this.RaisePropertyChanged("QualifiedContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubnodesDiscovered {
            get {
                return this.SubnodesDiscoveredField;
            }
            set {
                if ((this.SubnodesDiscoveredField.Equals(value) != true)) {
                    this.SubnodesDiscoveredField = value;
                    this.RaisePropertyChanged("SubnodesDiscovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> UserDetails {
            get {
                return this.UserDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDetailsField, value) != true)) {
                    this.UserDetailsField = value;
                    this.RaisePropertyChanged("UserDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveDirectoryNodeTypes", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ActiveDirectoryNodeTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Domain = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrganizationalUnit = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Container = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ArchiveListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NewestCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NewestVideoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OldestCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OldestVideoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong SpaceAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong SpaceUsedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NewestCall {
            get {
                return this.NewestCallField;
            }
            set {
                if ((this.NewestCallField.Equals(value) != true)) {
                    this.NewestCallField = value;
                    this.RaisePropertyChanged("NewestCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NewestVideo {
            get {
                return this.NewestVideoField;
            }
            set {
                if ((this.NewestVideoField.Equals(value) != true)) {
                    this.NewestVideoField = value;
                    this.RaisePropertyChanged("NewestVideo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OldestCall {
            get {
                return this.OldestCallField;
            }
            set {
                if ((this.OldestCallField.Equals(value) != true)) {
                    this.OldestCallField = value;
                    this.RaisePropertyChanged("OldestCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OldestVideo {
            get {
                return this.OldestVideoField;
            }
            set {
                if ((this.OldestVideoField.Equals(value) != true)) {
                    this.OldestVideoField = value;
                    this.RaisePropertyChanged("OldestVideo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong SpaceAvailable {
            get {
                return this.SpaceAvailableField;
            }
            set {
                if ((this.SpaceAvailableField.Equals(value) != true)) {
                    this.SpaceAvailableField = value;
                    this.RaisePropertyChanged("SpaceAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong SpaceUsed {
            get {
                return this.SpaceUsedField;
            }
            set {
                if ((this.SpaceUsedField.Equals(value) != true)) {
                    this.SpaceUsedField = value;
                    this.RaisePropertyChanged("SpaceUsed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveTaskListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ArchiveTaskListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllButNewestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<CallRex.UnderWriting.CallRexClientService.ArchiveDataSizeType> AmountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ArchiveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] ArchiveLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchiveNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArchiveToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysOfDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> DaysofWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailCultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<CallRex.UnderWriting.CallRexClientService.ArchiveStatus> LastResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RecurringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<CallRex.UnderWriting.CallRexClientService.ArchiveTarget> TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeofRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllButNewest {
            get {
                return this.AllButNewestField;
            }
            set {
                if ((this.AllButNewestField.Equals(value) != true)) {
                    this.AllButNewestField = value;
                    this.RaisePropertyChanged("AllButNewest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<CallRex.UnderWriting.CallRexClientService.ArchiveDataSizeType> AmountType {
            get {
                return this.AmountTypeField;
            }
            set {
                if ((this.AmountTypeField.Equals(value) != true)) {
                    this.AmountTypeField = value;
                    this.RaisePropertyChanged("AmountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ArchiveId {
            get {
                return this.ArchiveIdField;
            }
            set {
                if ((this.ArchiveIdField.Equals(value) != true)) {
                    this.ArchiveIdField = value;
                    this.RaisePropertyChanged("ArchiveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] ArchiveLocations {
            get {
                return this.ArchiveLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveLocationsField, value) != true)) {
                    this.ArchiveLocationsField = value;
                    this.RaisePropertyChanged("ArchiveLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArchiveName {
            get {
                return this.ArchiveNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveNameField, value) != true)) {
                    this.ArchiveNameField = value;
                    this.RaisePropertyChanged("ArchiveName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArchiveToDate {
            get {
                return this.ArchiveToDateField;
            }
            set {
                if ((this.ArchiveToDateField.Equals(value) != true)) {
                    this.ArchiveToDateField = value;
                    this.RaisePropertyChanged("ArchiveToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancelled {
            get {
                return this.CancelledField;
            }
            set {
                if ((this.CancelledField.Equals(value) != true)) {
                    this.CancelledField = value;
                    this.RaisePropertyChanged("Cancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataSourceId {
            get {
                return this.DataSourceIdField;
            }
            set {
                if ((this.DataSourceIdField.Equals(value) != true)) {
                    this.DataSourceIdField = value;
                    this.RaisePropertyChanged("DataSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysOfData {
            get {
                return this.DaysOfDataField;
            }
            set {
                if ((this.DaysOfDataField.Equals(value) != true)) {
                    this.DaysOfDataField = value;
                    this.RaisePropertyChanged("DaysOfData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> DaysofWeek {
            get {
                return this.DaysofWeekField;
            }
            set {
                if ((this.DaysofWeekField.Equals(value) != true)) {
                    this.DaysofWeekField = value;
                    this.RaisePropertyChanged("DaysofWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailCulture {
            get {
                return this.EmailCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailCultureField, value) != true)) {
                    this.EmailCultureField = value;
                    this.RaisePropertyChanged("EmailCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<CallRex.UnderWriting.CallRexClientService.ArchiveStatus> LastResult {
            get {
                return this.LastResultField;
            }
            set {
                if ((this.LastResultField.Equals(value) != true)) {
                    this.LastResultField = value;
                    this.RaisePropertyChanged("LastResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastRun {
            get {
                return this.LastRunField;
            }
            set {
                if ((this.LastRunField.Equals(value) != true)) {
                    this.LastRunField = value;
                    this.RaisePropertyChanged("LastRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextRun {
            get {
                return this.NextRunField;
            }
            set {
                if ((this.NextRunField.Equals(value) != true)) {
                    this.NextRunField = value;
                    this.RaisePropertyChanged("NextRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Recurring {
            get {
                return this.RecurringField;
            }
            set {
                if ((this.RecurringField.Equals(value) != true)) {
                    this.RecurringField = value;
                    this.RaisePropertyChanged("Recurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<CallRex.UnderWriting.CallRexClientService.ArchiveTarget> Target {
            get {
                return this.TargetField;
            }
            set {
                if ((this.TargetField.Equals(value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeofRun {
            get {
                return this.TimeofRunField;
            }
            set {
                if ((this.TimeofRunField.Equals(value) != true)) {
                    this.TimeofRunField = value;
                    this.RaisePropertyChanged("TimeofRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveDataSizeType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ArchiveDataSizeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MB = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GB = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveStatus", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ArchiveStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = -2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveTarget", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ArchiveTarget : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallRecordings = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComputerRecordings = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSourceListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class DataSourceListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataSourceLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataSourceId {
            get {
                return this.DataSourceIdField;
            }
            set {
                if ((this.DataSourceIdField.Equals(value) != true)) {
                    this.DataSourceIdField = value;
                    this.RaisePropertyChanged("DataSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSourceLocation {
            get {
                return this.DataSourceLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceLocationField, value) != true)) {
                    this.DataSourceLocationField = value;
                    this.RaisePropertyChanged("DataSourceLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDataSourceCreationItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class RemoteDataSourceCreationItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataSourceLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string archiveIpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dsPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dsUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> serviceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataSourceId {
            get {
                return this.DataSourceIdField;
            }
            set {
                if ((this.DataSourceIdField.Equals(value) != true)) {
                    this.DataSourceIdField = value;
                    this.RaisePropertyChanged("DataSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSourceLocation {
            get {
                return this.DataSourceLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceLocationField, value) != true)) {
                    this.DataSourceLocationField = value;
                    this.RaisePropertyChanged("DataSourceLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string archiveIpAddress {
            get {
                return this.archiveIpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.archiveIpAddressField, value) != true)) {
                    this.archiveIpAddressField = value;
                    this.RaisePropertyChanged("archiveIpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dsPassword {
            get {
                return this.dsPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.dsPasswordField, value) != true)) {
                    this.dsPasswordField = value;
                    this.RaisePropertyChanged("dsPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dsUserName {
            get {
                return this.dsUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.dsUserNameField, value) != true)) {
                    this.dsUserNameField = value;
                    this.RaisePropertyChanged("dsUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                if ((this.serviceIDField.Equals(value) != true)) {
                    this.serviceIDField = value;
                    this.RaisePropertyChanged("serviceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLicenseStatusType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum UserLicenseStatusType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DontCare = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluationSummary", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EvaluationSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluatorGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvaluatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDraftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScorePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScorecardTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationUid {
            get {
                return this.EvaluationUidField;
            }
            set {
                if ((this.EvaluationUidField.Equals(value) != true)) {
                    this.EvaluationUidField = value;
                    this.RaisePropertyChanged("EvaluationUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluatorGuid {
            get {
                return this.EvaluatorGuidField;
            }
            set {
                if ((this.EvaluatorGuidField.Equals(value) != true)) {
                    this.EvaluatorGuidField = value;
                    this.RaisePropertyChanged("EvaluatorGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvaluatorName {
            get {
                return this.EvaluatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluatorNameField, value) != true)) {
                    this.EvaluatorNameField = value;
                    this.RaisePropertyChanged("EvaluatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDraft {
            get {
                return this.IsDraftField;
            }
            set {
                if ((this.IsDraftField.Equals(value) != true)) {
                    this.IsDraftField = value;
                    this.RaisePropertyChanged("IsDraft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgressPercent {
            get {
                return this.ProgressPercentField;
            }
            set {
                if ((this.ProgressPercentField.Equals(value) != true)) {
                    this.ProgressPercentField = value;
                    this.RaisePropertyChanged("ProgressPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScorePercent {
            get {
                return this.ScorePercentField;
            }
            set {
                if ((this.ScorePercentField.Equals(value) != true)) {
                    this.ScorePercentField = value;
                    this.RaisePropertyChanged("ScorePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScorecardTitle {
            get {
                return this.ScorecardTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScorecardTitleField, value) != true)) {
                    this.ScorecardTitleField = value;
                    this.RaisePropertyChanged("ScorecardTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluationDetails", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EvaluationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] CallsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.UserListItem EvaluatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDraftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] QuestionCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EvaluationQuestion[] QuestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScorePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.Scorecard ScorecardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] ScreenRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.UserListItem UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] Calls {
            get {
                return this.CallsField;
            }
            set {
                if ((object.ReferenceEquals(this.CallsField, value) != true)) {
                    this.CallsField = value;
                    this.RaisePropertyChanged("Calls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationUid {
            get {
                return this.EvaluationUidField;
            }
            set {
                if ((this.EvaluationUidField.Equals(value) != true)) {
                    this.EvaluationUidField = value;
                    this.RaisePropertyChanged("EvaluationUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.UserListItem Evaluator {
            get {
                return this.EvaluatorField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluatorField, value) != true)) {
                    this.EvaluatorField = value;
                    this.RaisePropertyChanged("Evaluator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDraft {
            get {
                return this.IsDraftField;
            }
            set {
                if ((this.IsDraftField.Equals(value) != true)) {
                    this.IsDraftField = value;
                    this.RaisePropertyChanged("IsDraft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgressPercent {
            get {
                return this.ProgressPercentField;
            }
            set {
                if ((this.ProgressPercentField.Equals(value) != true)) {
                    this.ProgressPercentField = value;
                    this.RaisePropertyChanged("ProgressPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] QuestionCategories {
            get {
                return this.QuestionCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionCategoriesField, value) != true)) {
                    this.QuestionCategoriesField = value;
                    this.RaisePropertyChanged("QuestionCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EvaluationQuestion[] Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScorePercent {
            get {
                return this.ScorePercentField;
            }
            set {
                if ((this.ScorePercentField.Equals(value) != true)) {
                    this.ScorePercentField = value;
                    this.RaisePropertyChanged("ScorePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.Scorecard Scorecard {
            get {
                return this.ScorecardField;
            }
            set {
                if ((object.ReferenceEquals(this.ScorecardField, value) != true)) {
                    this.ScorecardField = value;
                    this.RaisePropertyChanged("Scorecard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] ScreenRecordings {
            get {
                return this.ScreenRecordingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingsField, value) != true)) {
                    this.ScreenRecordingsField = value;
                    this.RaisePropertyChanged("ScreenRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.UserListItem User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Scorecard", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class Scorecard : CallRex.UnderWriting.CallRexClientService.CategoryScorecardTreeNode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLatestVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedByEvaluationUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardChainUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLatestVersion {
            get {
                return this.IsLatestVersionField;
            }
            set {
                if ((this.IsLatestVersionField.Equals(value) != true)) {
                    this.IsLatestVersionField = value;
                    this.RaisePropertyChanged("IsLatestVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockedByEvaluationUsage {
            get {
                return this.LockedByEvaluationUsageField;
            }
            set {
                if ((this.LockedByEvaluationUsageField.Equals(value) != true)) {
                    this.LockedByEvaluationUsageField = value;
                    this.RaisePropertyChanged("LockedByEvaluationUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardChainUid {
            get {
                return this.ScorecardChainUidField;
            }
            set {
                if ((this.ScorecardChainUidField.Equals(value) != true)) {
                    this.ScorecardChainUidField = value;
                    this.RaisePropertyChanged("ScorecardChainUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardUid {
            get {
                return this.ScorecardUidField;
            }
            set {
                if ((this.ScorecardUidField.Equals(value) != true)) {
                    this.ScorecardUidField = value;
                    this.RaisePropertyChanged("ScorecardUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScorecardQuestionCategory", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ScorecardQuestionCategory : CallRex.UnderWriting.CallRexClientService.ScorecardQuestionListNode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionCategoryChainUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardUidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionCategoryChainUid {
            get {
                return this.QuestionCategoryChainUidField;
            }
            set {
                if ((this.QuestionCategoryChainUidField.Equals(value) != true)) {
                    this.QuestionCategoryChainUidField = value;
                    this.RaisePropertyChanged("QuestionCategoryChainUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardUid {
            get {
                return this.ScorecardUidField;
            }
            set {
                if ((this.ScorecardUidField.Equals(value) != true)) {
                    this.ScorecardUidField = value;
                    this.RaisePropertyChanged("ScorecardUid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluationQuestion", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EvaluationQuestion : CallRex.UnderWriting.CallRexClientService.ScorecardQuestion {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EvaluationQuestionBookmark[] QuestionBookmarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EvaluationQuestionScore QuestionScoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EvaluationQuestionBookmark[] QuestionBookmarks {
            get {
                return this.QuestionBookmarksField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionBookmarksField, value) != true)) {
                    this.QuestionBookmarksField = value;
                    this.RaisePropertyChanged("QuestionBookmarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EvaluationQuestionScore QuestionScore {
            get {
                return this.QuestionScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionScoreField, value) != true)) {
                    this.QuestionScoreField = value;
                    this.RaisePropertyChanged("QuestionScore");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScorecardQuestionListNode", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory))]
    public partial class ScorecardQuestionListNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHighlightedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionCategoryUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHighlighted {
            get {
                return this.IsHighlightedField;
            }
            set {
                if ((this.IsHighlightedField.Equals(value) != true)) {
                    this.IsHighlightedField = value;
                    this.RaisePropertyChanged("IsHighlighted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionCategoryUid {
            get {
                return this.QuestionCategoryUidField;
            }
            set {
                if ((this.QuestionCategoryUidField.Equals(value) != true)) {
                    this.QuestionCategoryUidField = value;
                    this.RaisePropertyChanged("QuestionCategoryUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UIOrder {
            get {
                return this.UIOrderField;
            }
            set {
                if ((this.UIOrderField.Equals(value) != true)) {
                    this.UIOrderField = value;
                    this.RaisePropertyChanged("UIOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScorecardQuestion", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationQuestion))]
    public partial class ScorecardQuestion : CallRex.UnderWriting.CallRexClientService.ScorecardQuestionListNode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionChainUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionChainUid {
            get {
                return this.QuestionChainUidField;
            }
            set {
                if ((this.QuestionChainUidField.Equals(value) != true)) {
                    this.QuestionChainUidField = value;
                    this.RaisePropertyChanged("QuestionChainUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionType {
            get {
                return this.QuestionTypeField;
            }
            set {
                if ((this.QuestionTypeField.Equals(value) != true)) {
                    this.QuestionTypeField = value;
                    this.RaisePropertyChanged("QuestionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionUid {
            get {
                return this.QuestionUidField;
            }
            set {
                if ((this.QuestionUidField.Equals(value) != true)) {
                    this.QuestionUidField = value;
                    this.RaisePropertyChanged("QuestionUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluationQuestionScore", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EvaluationQuestionScore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationQuestionScoreUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScoreValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationQuestionScoreUid {
            get {
                return this.EvaluationQuestionScoreUidField;
            }
            set {
                if ((this.EvaluationQuestionScoreUidField.Equals(value) != true)) {
                    this.EvaluationQuestionScoreUidField = value;
                    this.RaisePropertyChanged("EvaluationQuestionScoreUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationUid {
            get {
                return this.EvaluationUidField;
            }
            set {
                if ((this.EvaluationUidField.Equals(value) != true)) {
                    this.EvaluationUidField = value;
                    this.RaisePropertyChanged("EvaluationUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionUid {
            get {
                return this.QuestionUidField;
            }
            set {
                if ((this.QuestionUidField.Equals(value) != true)) {
                    this.QuestionUidField = value;
                    this.RaisePropertyChanged("QuestionUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScoreValue {
            get {
                return this.ScoreValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ScoreValueField, value) != true)) {
                    this.ScoreValueField = value;
                    this.RaisePropertyChanged("ScoreValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EvaluationQuestionBookmark", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class EvaluationQuestionBookmark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudioFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BookmarkEndTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BookmarkStartTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CallLogUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationCallUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationQuestionBookmarkUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationQuestionScoreUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AudioFileName {
            get {
                return this.AudioFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AudioFileNameField, value) != true)) {
                    this.AudioFileNameField = value;
                    this.RaisePropertyChanged("AudioFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BookmarkEndTicks {
            get {
                return this.BookmarkEndTicksField;
            }
            set {
                if ((this.BookmarkEndTicksField.Equals(value) != true)) {
                    this.BookmarkEndTicksField = value;
                    this.RaisePropertyChanged("BookmarkEndTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BookmarkStartTicks {
            get {
                return this.BookmarkStartTicksField;
            }
            set {
                if ((this.BookmarkStartTicksField.Equals(value) != true)) {
                    this.BookmarkStartTicksField = value;
                    this.RaisePropertyChanged("BookmarkStartTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CallLogUid {
            get {
                return this.CallLogUidField;
            }
            set {
                if ((this.CallLogUidField.Equals(value) != true)) {
                    this.CallLogUidField = value;
                    this.RaisePropertyChanged("CallLogUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationCallUid {
            get {
                return this.EvaluationCallUidField;
            }
            set {
                if ((this.EvaluationCallUidField.Equals(value) != true)) {
                    this.EvaluationCallUidField = value;
                    this.RaisePropertyChanged("EvaluationCallUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationQuestionBookmarkUid {
            get {
                return this.EvaluationQuestionBookmarkUidField;
            }
            set {
                if ((this.EvaluationQuestionBookmarkUidField.Equals(value) != true)) {
                    this.EvaluationQuestionBookmarkUidField = value;
                    this.RaisePropertyChanged("EvaluationQuestionBookmarkUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationQuestionScoreUid {
            get {
                return this.EvaluationQuestionScoreUidField;
            }
            set {
                if ((this.EvaluationQuestionScoreUidField.Equals(value) != true)) {
                    this.EvaluationQuestionScoreUidField = value;
                    this.RaisePropertyChanged("EvaluationQuestionScoreUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UIOrder {
            get {
                return this.UIOrderField;
            }
            set {
                if ((this.UIOrderField.Equals(value) != true)) {
                    this.UIOrderField = value;
                    this.RaisePropertyChanged("UIOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryScorecardTreeNode", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Scorecard))]
    public partial class CategoryScorecardTreeNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardCategoryUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardCategoryUid {
            get {
                return this.ScorecardCategoryUidField;
            }
            set {
                if ((this.ScorecardCategoryUidField.Equals(value) != true)) {
                    this.ScorecardCategoryUidField = value;
                    this.RaisePropertyChanged("ScorecardCategoryUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScorecardCategory", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ScorecardCategory : CallRex.UnderWriting.CallRexClientService.CategoryScorecardTreeNode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.Scorecard[] CategoryScorecardListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScorecardCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.Scorecard[] CategoryScorecardList {
            get {
                return this.CategoryScorecardListField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryScorecardListField, value) != true)) {
                    this.CategoryScorecardListField = value;
                    this.RaisePropertyChanged("CategoryScorecardList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScorecardCount {
            get {
                return this.ScorecardCountField;
            }
            set {
                if ((this.ScorecardCountField.Equals(value) != true)) {
                    this.ScorecardCountField = value;
                    this.RaisePropertyChanged("ScorecardCount");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallDirection", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum CallDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inbound = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outbound = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchDateSpecificationType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum SearchDateSpecificationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastXDays = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Range = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateGroupType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum DateGroupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Week = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HalfHourOfDay = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HourOfDay = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayOfWeek = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallCountGroupType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum CallCountGroupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AreaCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prefix = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecordingProfile = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Extension = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dnis = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Department = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flag = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallCountSortType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum CallCountSortType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateGroup = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Group = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Calls = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TalkTime = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallCount", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class CallCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DynamicGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TalkTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateGroup {
            get {
                return this.DateGroupField;
            }
            set {
                if ((this.DateGroupField.Equals(value) != true)) {
                    this.DateGroupField = value;
                    this.RaisePropertyChanged("DateGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DynamicGroup {
            get {
                return this.DynamicGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.DynamicGroupField, value) != true)) {
                    this.DynamicGroupField = value;
                    this.RaisePropertyChanged("DynamicGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TalkTime {
            get {
                return this.TalkTimeField;
            }
            set {
                if ((this.TalkTimeField.Equals(value) != true)) {
                    this.TalkTimeField = value;
                    this.RaisePropertyChanged("TalkTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateExtensionFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class DuplicateExtensionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidOrBlankExtensionFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class InvalidOrBlankExtensionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateSipUriFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class DuplicateSipUriFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollidingUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollidingUser {
            get {
                return this.CollidingUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CollidingUserField, value) != true)) {
                    this.CollidingUserField = value;
                    this.RaisePropertyChanged("CollidingUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateUsernameFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class DuplicateUsernameFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseViolationFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class LicenseViolationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateDeviceAddressFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class DuplicateDeviceAddressFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollidingUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollidingUser {
            get {
                return this.CollidingUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CollidingUserField, value) != true)) {
                    this.CollidingUserField = value;
                    this.RaisePropertyChanged("CollidingUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidUserIdFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class InvalidUserIdFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CantDeleteUserLoggedInAsFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class CantDeleteUserLoggedInAsFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class MemberListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flag", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class Flag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPredefinedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OwnerUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.FlagValue[] ValueDomainField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPredefined {
            get {
                return this.IsPredefinedField;
            }
            set {
                if ((this.IsPredefinedField.Equals(value) != true)) {
                    this.IsPredefinedField = value;
                    this.RaisePropertyChanged("IsPredefined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSystem {
            get {
                return this.IsSystemField;
            }
            set {
                if ((this.IsSystemField.Equals(value) != true)) {
                    this.IsSystemField = value;
                    this.RaisePropertyChanged("IsSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OwnerUserId {
            get {
                return this.OwnerUserIdField;
            }
            set {
                if ((this.OwnerUserIdField.Equals(value) != true)) {
                    this.OwnerUserIdField = value;
                    this.RaisePropertyChanged("OwnerUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.FlagValue[] ValueDomain {
            get {
                return this.ValueDomainField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueDomainField, value) != true)) {
                    this.ValueDomainField = value;
                    this.RaisePropertyChanged("ValueDomain");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlagValue", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class FlagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachedDataContainer", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class AttachedDataContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid HostMediaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordingType HostMediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordingFlagValue[] RecordingFlagValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid HostMediaId {
            get {
                return this.HostMediaIdField;
            }
            set {
                if ((this.HostMediaIdField.Equals(value) != true)) {
                    this.HostMediaIdField = value;
                    this.RaisePropertyChanged("HostMediaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordingType HostMediaType {
            get {
                return this.HostMediaTypeField;
            }
            set {
                if ((this.HostMediaTypeField.Equals(value) != true)) {
                    this.HostMediaTypeField = value;
                    this.RaisePropertyChanged("HostMediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordingFlagValue[] RecordingFlagValues {
            get {
                return this.RecordingFlagValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordingFlagValuesField, value) != true)) {
                    this.RecordingFlagValuesField = value;
                    this.RaisePropertyChanged("RecordingFlagValues");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMonitorInfo", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class UserMonitorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedSearch", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class SavedSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallDirection CallDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DnisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> FlagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastDaysCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCallDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.RecordedMediaType MediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinCallDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutgoingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SavedSearchDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SavedSearchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SavedSearchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SavedSearchOwnerUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.SearchDateSpecificationType TimeSearchTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallDirection CallDirection {
            get {
                return this.CallDirectionField;
            }
            set {
                if ((this.CallDirectionField.Equals(value) != true)) {
                    this.CallDirectionField = value;
                    this.RaisePropertyChanged("CallDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallerID {
            get {
                return this.CallerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CallerIDField, value) != true)) {
                    this.CallerIDField = value;
                    this.RaisePropertyChanged("CallerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dnis {
            get {
                return this.DnisField;
            }
            set {
                if ((object.ReferenceEquals(this.DnisField, value) != true)) {
                    this.DnisField = value;
                    this.RaisePropertyChanged("Dnis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> FlagID {
            get {
                return this.FlagIDField;
            }
            set {
                if ((this.FlagIDField.Equals(value) != true)) {
                    this.FlagIDField = value;
                    this.RaisePropertyChanged("FlagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagValue {
            get {
                return this.FlagValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagValueField, value) != true)) {
                    this.FlagValueField = value;
                    this.RaisePropertyChanged("FlagValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastDaysCount {
            get {
                return this.LastDaysCountField;
            }
            set {
                if ((this.LastDaysCountField.Equals(value) != true)) {
                    this.LastDaysCountField = value;
                    this.RaisePropertyChanged("LastDaysCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCallDuration {
            get {
                return this.MaxCallDurationField;
            }
            set {
                if ((this.MaxCallDurationField.Equals(value) != true)) {
                    this.MaxCallDurationField = value;
                    this.RaisePropertyChanged("MaxCallDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.RecordedMediaType MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((this.MediaTypeField.Equals(value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinCallDuration {
            get {
                return this.MinCallDurationField;
            }
            set {
                if ((this.MinCallDurationField.Equals(value) != true)) {
                    this.MinCallDurationField = value;
                    this.RaisePropertyChanged("MinCallDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutgoingNumber {
            get {
                return this.OutgoingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OutgoingNumberField, value) != true)) {
                    this.OutgoingNumberField = value;
                    this.RaisePropertyChanged("OutgoingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SavedSearchDate {
            get {
                return this.SavedSearchDateField;
            }
            set {
                if ((this.SavedSearchDateField.Equals(value) != true)) {
                    this.SavedSearchDateField = value;
                    this.RaisePropertyChanged("SavedSearchDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SavedSearchID {
            get {
                return this.SavedSearchIDField;
            }
            set {
                if ((this.SavedSearchIDField.Equals(value) != true)) {
                    this.SavedSearchIDField = value;
                    this.RaisePropertyChanged("SavedSearchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SavedSearchName {
            get {
                return this.SavedSearchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SavedSearchNameField, value) != true)) {
                    this.SavedSearchNameField = value;
                    this.RaisePropertyChanged("SavedSearchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SavedSearchOwnerUserID {
            get {
                return this.SavedSearchOwnerUserIDField;
            }
            set {
                if ((this.SavedSearchOwnerUserIDField.Equals(value) != true)) {
                    this.SavedSearchOwnerUserIDField = value;
                    this.RaisePropertyChanged("SavedSearchOwnerUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StopTime {
            get {
                return this.StopTimeField;
            }
            set {
                if ((this.StopTimeField.Equals(value) != true)) {
                    this.StopTimeField = value;
                    this.RaisePropertyChanged("StopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.SearchDateSpecificationType TimeSearchType {
            get {
                return this.TimeSearchTypeField;
            }
            set {
                if ((this.TimeSearchTypeField.Equals(value) != true)) {
                    this.TimeSearchTypeField = value;
                    this.RaisePropertyChanged("TimeSearchType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityProfileDetails", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class SecurityProfileDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAddEditUsersPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAdministerRecordingProfilesPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChangeSystemPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCreateEvaluationPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCreateScorecardPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasDeleteRecordingPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasDeleteUsersPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasEmailRecordingPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasExportRecordingPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasInitiateUserRecordingPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLiveMonitorPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasManageFlagsPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPauseSystemRecordingPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPlaybackRecordingPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasViewComputerRecordingsPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasViewLivePhoneStatePermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasViewReportingPermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDataSericeInADomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProfileEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAddEditUsersPermission {
            get {
                return this.HasAddEditUsersPermissionField;
            }
            set {
                if ((this.HasAddEditUsersPermissionField.Equals(value) != true)) {
                    this.HasAddEditUsersPermissionField = value;
                    this.RaisePropertyChanged("HasAddEditUsersPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAdministerRecordingProfilesPermission {
            get {
                return this.HasAdministerRecordingProfilesPermissionField;
            }
            set {
                if ((this.HasAdministerRecordingProfilesPermissionField.Equals(value) != true)) {
                    this.HasAdministerRecordingProfilesPermissionField = value;
                    this.RaisePropertyChanged("HasAdministerRecordingProfilesPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChangeSystemPermission {
            get {
                return this.HasChangeSystemPermissionField;
            }
            set {
                if ((this.HasChangeSystemPermissionField.Equals(value) != true)) {
                    this.HasChangeSystemPermissionField = value;
                    this.RaisePropertyChanged("HasChangeSystemPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCreateEvaluationPermission {
            get {
                return this.HasCreateEvaluationPermissionField;
            }
            set {
                if ((this.HasCreateEvaluationPermissionField.Equals(value) != true)) {
                    this.HasCreateEvaluationPermissionField = value;
                    this.RaisePropertyChanged("HasCreateEvaluationPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCreateScorecardPermission {
            get {
                return this.HasCreateScorecardPermissionField;
            }
            set {
                if ((this.HasCreateScorecardPermissionField.Equals(value) != true)) {
                    this.HasCreateScorecardPermissionField = value;
                    this.RaisePropertyChanged("HasCreateScorecardPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasDeleteRecordingPermission {
            get {
                return this.HasDeleteRecordingPermissionField;
            }
            set {
                if ((this.HasDeleteRecordingPermissionField.Equals(value) != true)) {
                    this.HasDeleteRecordingPermissionField = value;
                    this.RaisePropertyChanged("HasDeleteRecordingPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasDeleteUsersPermission {
            get {
                return this.HasDeleteUsersPermissionField;
            }
            set {
                if ((this.HasDeleteUsersPermissionField.Equals(value) != true)) {
                    this.HasDeleteUsersPermissionField = value;
                    this.RaisePropertyChanged("HasDeleteUsersPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasEmailRecordingPermission {
            get {
                return this.HasEmailRecordingPermissionField;
            }
            set {
                if ((this.HasEmailRecordingPermissionField.Equals(value) != true)) {
                    this.HasEmailRecordingPermissionField = value;
                    this.RaisePropertyChanged("HasEmailRecordingPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasExportRecordingPermission {
            get {
                return this.HasExportRecordingPermissionField;
            }
            set {
                if ((this.HasExportRecordingPermissionField.Equals(value) != true)) {
                    this.HasExportRecordingPermissionField = value;
                    this.RaisePropertyChanged("HasExportRecordingPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasInitiateUserRecordingPermission {
            get {
                return this.HasInitiateUserRecordingPermissionField;
            }
            set {
                if ((this.HasInitiateUserRecordingPermissionField.Equals(value) != true)) {
                    this.HasInitiateUserRecordingPermissionField = value;
                    this.RaisePropertyChanged("HasInitiateUserRecordingPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLiveMonitorPermission {
            get {
                return this.HasLiveMonitorPermissionField;
            }
            set {
                if ((this.HasLiveMonitorPermissionField.Equals(value) != true)) {
                    this.HasLiveMonitorPermissionField = value;
                    this.RaisePropertyChanged("HasLiveMonitorPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasManageFlagsPermission {
            get {
                return this.HasManageFlagsPermissionField;
            }
            set {
                if ((this.HasManageFlagsPermissionField.Equals(value) != true)) {
                    this.HasManageFlagsPermissionField = value;
                    this.RaisePropertyChanged("HasManageFlagsPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPauseSystemRecordingPermission {
            get {
                return this.HasPauseSystemRecordingPermissionField;
            }
            set {
                if ((this.HasPauseSystemRecordingPermissionField.Equals(value) != true)) {
                    this.HasPauseSystemRecordingPermissionField = value;
                    this.RaisePropertyChanged("HasPauseSystemRecordingPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPlaybackRecordingPermission {
            get {
                return this.HasPlaybackRecordingPermissionField;
            }
            set {
                if ((this.HasPlaybackRecordingPermissionField.Equals(value) != true)) {
                    this.HasPlaybackRecordingPermissionField = value;
                    this.RaisePropertyChanged("HasPlaybackRecordingPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasViewComputerRecordingsPermission {
            get {
                return this.HasViewComputerRecordingsPermissionField;
            }
            set {
                if ((this.HasViewComputerRecordingsPermissionField.Equals(value) != true)) {
                    this.HasViewComputerRecordingsPermissionField = value;
                    this.RaisePropertyChanged("HasViewComputerRecordingsPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasViewLivePhoneStatePermission {
            get {
                return this.HasViewLivePhoneStatePermissionField;
            }
            set {
                if ((this.HasViewLivePhoneStatePermissionField.Equals(value) != true)) {
                    this.HasViewLivePhoneStatePermissionField = value;
                    this.RaisePropertyChanged("HasViewLivePhoneStatePermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasViewReportingPermission {
            get {
                return this.HasViewReportingPermissionField;
            }
            set {
                if ((this.HasViewReportingPermissionField.Equals(value) != true)) {
                    this.HasViewReportingPermissionField = value;
                    this.RaisePropertyChanged("HasViewReportingPermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDataSericeInADomain {
            get {
                return this.IsDataSericeInADomainField;
            }
            set {
                if ((this.IsDataSericeInADomainField.Equals(value) != true)) {
                    this.IsDataSericeInADomainField = value;
                    this.RaisePropertyChanged("IsDataSericeInADomain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProfileEditable {
            get {
                return this.IsProfileEditableField;
            }
            set {
                if ((this.IsProfileEditableField.Equals(value) != true)) {
                    this.IsProfileEditableField = value;
                    this.RaisePropertyChanged("IsProfileEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedReport", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class SavedReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SavedReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ReportScheduleDateType ScheduleDateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleDayOfMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleDaysOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScheduleTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleWeekFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SubscribersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SavedReportId {
            get {
                return this.SavedReportIdField;
            }
            set {
                if ((this.SavedReportIdField.Equals(value) != true)) {
                    this.SavedReportIdField = value;
                    this.RaisePropertyChanged("SavedReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ReportScheduleDateType ScheduleDateType {
            get {
                return this.ScheduleDateTypeField;
            }
            set {
                if ((this.ScheduleDateTypeField.Equals(value) != true)) {
                    this.ScheduleDateTypeField = value;
                    this.RaisePropertyChanged("ScheduleDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleDayOfMonth {
            get {
                return this.ScheduleDayOfMonthField;
            }
            set {
                if ((this.ScheduleDayOfMonthField.Equals(value) != true)) {
                    this.ScheduleDayOfMonthField = value;
                    this.RaisePropertyChanged("ScheduleDayOfMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleDaysOfWeek {
            get {
                return this.ScheduleDaysOfWeekField;
            }
            set {
                if ((this.ScheduleDaysOfWeekField.Equals(value) != true)) {
                    this.ScheduleDaysOfWeekField = value;
                    this.RaisePropertyChanged("ScheduleDaysOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ScheduleTime {
            get {
                return this.ScheduleTimeField;
            }
            set {
                if ((this.ScheduleTimeField.Equals(value) != true)) {
                    this.ScheduleTimeField = value;
                    this.RaisePropertyChanged("ScheduleTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleWeekFrequency {
            get {
                return this.ScheduleWeekFrequencyField;
            }
            set {
                if ((this.ScheduleWeekFrequencyField.Equals(value) != true)) {
                    this.ScheduleWeekFrequencyField = value;
                    this.RaisePropertyChanged("ScheduleWeekFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Subscribers {
            get {
                return this.SubscribersField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscribersField, value) != true)) {
                    this.SubscribersField = value;
                    this.RaisePropertyChanged("Subscribers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportScheduleDateType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ReportScheduleDateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DaysOfWeek = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayOfMonth = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfMonth = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileType", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ProfileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Security = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallRecording = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScreenRecording = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityProfileListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class SecurityProfileListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberCount {
            get {
                return this.MemberCountField;
            }
            set {
                if ((this.MemberCountField.Equals(value) != true)) {
                    this.MemberCountField = value;
                    this.RaisePropertyChanged("MemberCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileNotDeletableFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ProfileNotDeletableFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileInUseFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ProfileInUseFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserCount {
            get {
                return this.UserCountField;
            }
            set {
                if ((this.UserCountField.Equals(value) != true)) {
                    this.UserCountField = value;
                    this.RaisePropertyChanged("UserCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallRecordingProfileListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class CallRecordingProfileListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultState {
            get {
                return this.DefaultStateField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultStateField, value) != true)) {
                    this.DefaultStateField = value;
                    this.RaisePropertyChanged("DefaultState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberCount {
            get {
                return this.MemberCountField;
            }
            set {
                if ((this.MemberCountField.Equals(value) != true)) {
                    this.MemberCountField = value;
                    this.RaisePropertyChanged("MemberCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallRecordingProfileDetails", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class CallRecordingProfileDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveDaysOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule[] CallRecordingProfileRulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MemberExtensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] MemberUserIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentRecordedInboundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentRecordedOutboundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecordsGreedilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RetentionMaximumAgeDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RetentionMinimumDurationSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseRetentionMaximumAgeDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseRetentionMinimumDurationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActiveDaysOfWeek {
            get {
                return this.ActiveDaysOfWeekField;
            }
            set {
                if ((this.ActiveDaysOfWeekField.Equals(value) != true)) {
                    this.ActiveDaysOfWeekField = value;
                    this.RaisePropertyChanged("ActiveDaysOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule[] CallRecordingProfileRules {
            get {
                return this.CallRecordingProfileRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.CallRecordingProfileRulesField, value) != true)) {
                    this.CallRecordingProfileRulesField = value;
                    this.RaisePropertyChanged("CallRecordingProfileRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MemberExtensions {
            get {
                return this.MemberExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberExtensionsField, value) != true)) {
                    this.MemberExtensionsField = value;
                    this.RaisePropertyChanged("MemberExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] MemberUserIds {
            get {
                return this.MemberUserIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberUserIdsField, value) != true)) {
                    this.MemberUserIdsField = value;
                    this.RaisePropertyChanged("MemberUserIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentRecordedInbound {
            get {
                return this.PercentRecordedInboundField;
            }
            set {
                if ((this.PercentRecordedInboundField.Equals(value) != true)) {
                    this.PercentRecordedInboundField = value;
                    this.RaisePropertyChanged("PercentRecordedInbound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentRecordedOutbound {
            get {
                return this.PercentRecordedOutboundField;
            }
            set {
                if ((this.PercentRecordedOutboundField.Equals(value) != true)) {
                    this.PercentRecordedOutboundField = value;
                    this.RaisePropertyChanged("PercentRecordedOutbound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileId {
            get {
                return this.ProfileIdField;
            }
            set {
                if ((this.ProfileIdField.Equals(value) != true)) {
                    this.ProfileIdField = value;
                    this.RaisePropertyChanged("ProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecordsGreedily {
            get {
                return this.RecordsGreedilyField;
            }
            set {
                if ((this.RecordsGreedilyField.Equals(value) != true)) {
                    this.RecordsGreedilyField = value;
                    this.RaisePropertyChanged("RecordsGreedily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RetentionMaximumAgeDays {
            get {
                return this.RetentionMaximumAgeDaysField;
            }
            set {
                if ((this.RetentionMaximumAgeDaysField.Equals(value) != true)) {
                    this.RetentionMaximumAgeDaysField = value;
                    this.RaisePropertyChanged("RetentionMaximumAgeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RetentionMinimumDurationSeconds {
            get {
                return this.RetentionMinimumDurationSecondsField;
            }
            set {
                if ((this.RetentionMinimumDurationSecondsField.Equals(value) != true)) {
                    this.RetentionMinimumDurationSecondsField = value;
                    this.RaisePropertyChanged("RetentionMinimumDurationSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StopTime {
            get {
                return this.StopTimeField;
            }
            set {
                if ((this.StopTimeField.Equals(value) != true)) {
                    this.StopTimeField = value;
                    this.RaisePropertyChanged("StopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseRetentionMaximumAgeDays {
            get {
                return this.UseRetentionMaximumAgeDaysField;
            }
            set {
                if ((this.UseRetentionMaximumAgeDaysField.Equals(value) != true)) {
                    this.UseRetentionMaximumAgeDaysField = value;
                    this.RaisePropertyChanged("UseRetentionMaximumAgeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseRetentionMinimumDuration {
            get {
                return this.UseRetentionMinimumDurationField;
            }
            set {
                if ((this.UseRetentionMinimumDurationField.Equals(value) != true)) {
                    this.UseRetentionMinimumDurationField = value;
                    this.RaisePropertyChanged("UseRetentionMinimumDuration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallRecordingProfileRule", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CallRecordingProfileRule : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataMemberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataMemberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ProfileRuleDirectiveTypes DirectiveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBRecordingProfile GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBRecordingProfile1U8vXZAD GroupReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ProfileRuleRelationTypes RelationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid callRecordingProfileRuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid dataMemberID1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int dataMemberType1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int directiveType1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid groupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int relationType1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataMemberID {
            get {
                return this.DataMemberIDField;
            }
            set {
                if ((this.DataMemberIDField.Equals(value) != true)) {
                    this.DataMemberIDField = value;
                    this.RaisePropertyChanged("DataMemberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataMemberType {
            get {
                return this.DataMemberTypeField;
            }
            set {
                if ((this.DataMemberTypeField.Equals(value) != true)) {
                    this.DataMemberTypeField = value;
                    this.RaisePropertyChanged("DataMemberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ProfileRuleDirectiveTypes DirectiveType {
            get {
                return this.DirectiveTypeField;
            }
            set {
                if ((this.DirectiveTypeField.Equals(value) != true)) {
                    this.DirectiveTypeField = value;
                    this.RaisePropertyChanged("DirectiveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBRecordingProfile Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBRecordingProfile1U8vXZAD GroupReference {
            get {
                return this.GroupReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupReferenceField, value) != true)) {
                    this.GroupReferenceField = value;
                    this.RaisePropertyChanged("GroupReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ProfileRuleRelationTypes RelationType {
            get {
                return this.RelationTypeField;
            }
            set {
                if ((this.RelationTypeField.Equals(value) != true)) {
                    this.RelationTypeField = value;
                    this.RaisePropertyChanged("RelationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid callRecordingProfileRuleID {
            get {
                return this.callRecordingProfileRuleIDField;
            }
            set {
                if ((this.callRecordingProfileRuleIDField.Equals(value) != true)) {
                    this.callRecordingProfileRuleIDField = value;
                    this.RaisePropertyChanged("callRecordingProfileRuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="dataMemberID")]
        public System.Guid dataMemberID1 {
            get {
                return this.dataMemberID1Field;
            }
            set {
                if ((this.dataMemberID1Field.Equals(value) != true)) {
                    this.dataMemberID1Field = value;
                    this.RaisePropertyChanged("dataMemberID1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="dataMemberType")]
        public int dataMemberType1 {
            get {
                return this.dataMemberType1Field;
            }
            set {
                if ((this.dataMemberType1Field.Equals(value) != true)) {
                    this.dataMemberType1Field = value;
                    this.RaisePropertyChanged("dataMemberType1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="directiveType")]
        public int directiveType1 {
            get {
                return this.directiveType1Field;
            }
            set {
                if ((this.directiveType1Field.Equals(value) != true)) {
                    this.directiveType1Field = value;
                    this.RaisePropertyChanged("directiveType1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid groupID {
            get {
                return this.groupIDField;
            }
            set {
                if ((this.groupIDField.Equals(value) != true)) {
                    this.groupIDField = value;
                    this.RaisePropertyChanged("groupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pattern {
            get {
                return this.patternField;
            }
            set {
                if ((object.ReferenceEquals(this.patternField, value) != true)) {
                    this.patternField = value;
                    this.RaisePropertyChanged("pattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                if ((this.priorityField.Equals(value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="relationType")]
        public int relationType1 {
            get {
                return this.relationType1Field;
            }
            set {
                if ((this.relationType1Field.Equals(value) != true)) {
                    this.relationType1Field = value;
                    this.RaisePropertyChanged("relationType1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBRecordingProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Evaluation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Scorecard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Archive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBPbxType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ServiceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBEncryptionKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingFlagData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLogFlagData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FlagFieldName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.IntelRexDeployment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedDepartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBSavedSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingApplication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Security))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserPreference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule))]
    public partial class StructuralObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBRecordingProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Evaluation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Scorecard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Archive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBPbxType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ServiceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBEncryptionKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingFlagData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLogFlagData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FlagFieldName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.IntelRexDeployment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedDepartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBSavedSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingApplication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Security))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserPreference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule))]
    public partial class EntityObject : CallRex.UnderWriting.CallRexClientService.StructuralObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBRecordingProfile", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DBRecordingProfile : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule[] CallRecordingProfileRulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] MembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD OwnerReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid groupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> groupOwnerUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isInboundNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isInboundNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isMaxRecAgeEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isMinRecLenEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isOutboundNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isRecordsGreedilyEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short maxRecAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short minRecLenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte percentInCallsRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte percentOutCallsRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime scheduleStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime scheduleStopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte scheduleWeekDaysField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule[] CallRecordingProfileRules {
            get {
                return this.CallRecordingProfileRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.CallRecordingProfileRulesField, value) != true)) {
                    this.CallRecordingProfileRulesField = value;
                    this.RaisePropertyChanged("CallRecordingProfileRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD OwnerReference {
            get {
                return this.OwnerReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerReferenceField, value) != true)) {
                    this.OwnerReferenceField = value;
                    this.RaisePropertyChanged("OwnerReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid groupID {
            get {
                return this.groupIDField;
            }
            set {
                if ((this.groupIDField.Equals(value) != true)) {
                    this.groupIDField = value;
                    this.RaisePropertyChanged("groupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.groupNameField, value) != true)) {
                    this.groupNameField = value;
                    this.RaisePropertyChanged("groupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> groupOwnerUserID {
            get {
                return this.groupOwnerUserIDField;
            }
            set {
                if ((this.groupOwnerUserIDField.Equals(value) != true)) {
                    this.groupOwnerUserIDField = value;
                    this.RaisePropertyChanged("groupOwnerUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                if ((this.isDefaultField.Equals(value) != true)) {
                    this.isDefaultField = value;
                    this.RaisePropertyChanged("isDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isInboundName {
            get {
                return this.isInboundNameField;
            }
            set {
                if ((this.isInboundNameField.Equals(value) != true)) {
                    this.isInboundNameField = value;
                    this.RaisePropertyChanged("isInboundName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isInboundNumbers {
            get {
                return this.isInboundNumbersField;
            }
            set {
                if ((this.isInboundNumbersField.Equals(value) != true)) {
                    this.isInboundNumbersField = value;
                    this.RaisePropertyChanged("isInboundNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isMaxRecAgeEnabled {
            get {
                return this.isMaxRecAgeEnabledField;
            }
            set {
                if ((this.isMaxRecAgeEnabledField.Equals(value) != true)) {
                    this.isMaxRecAgeEnabledField = value;
                    this.RaisePropertyChanged("isMaxRecAgeEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isMinRecLenEnabled {
            get {
                return this.isMinRecLenEnabledField;
            }
            set {
                if ((this.isMinRecLenEnabledField.Equals(value) != true)) {
                    this.isMinRecLenEnabledField = value;
                    this.RaisePropertyChanged("isMinRecLenEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isOutboundNumbers {
            get {
                return this.isOutboundNumbersField;
            }
            set {
                if ((this.isOutboundNumbersField.Equals(value) != true)) {
                    this.isOutboundNumbersField = value;
                    this.RaisePropertyChanged("isOutboundNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isRecordsGreedilyEnabled {
            get {
                return this.isRecordsGreedilyEnabledField;
            }
            set {
                if ((this.isRecordsGreedilyEnabledField.Equals(value) != true)) {
                    this.isRecordsGreedilyEnabledField = value;
                    this.RaisePropertyChanged("isRecordsGreedilyEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short maxRecAge {
            get {
                return this.maxRecAgeField;
            }
            set {
                if ((this.maxRecAgeField.Equals(value) != true)) {
                    this.maxRecAgeField = value;
                    this.RaisePropertyChanged("maxRecAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short minRecLen {
            get {
                return this.minRecLenField;
            }
            set {
                if ((this.minRecLenField.Equals(value) != true)) {
                    this.minRecLenField = value;
                    this.RaisePropertyChanged("minRecLen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte percentInCallsRecord {
            get {
                return this.percentInCallsRecordField;
            }
            set {
                if ((this.percentInCallsRecordField.Equals(value) != true)) {
                    this.percentInCallsRecordField = value;
                    this.RaisePropertyChanged("percentInCallsRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte percentOutCallsRecord {
            get {
                return this.percentOutCallsRecordField;
            }
            set {
                if ((this.percentOutCallsRecordField.Equals(value) != true)) {
                    this.percentOutCallsRecordField = value;
                    this.RaisePropertyChanged("percentOutCallsRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime scheduleStartTime {
            get {
                return this.scheduleStartTimeField;
            }
            set {
                if ((this.scheduleStartTimeField.Equals(value) != true)) {
                    this.scheduleStartTimeField = value;
                    this.RaisePropertyChanged("scheduleStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime scheduleStopTime {
            get {
                return this.scheduleStopTimeField;
            }
            set {
                if ((this.scheduleStopTimeField.Equals(value) != true)) {
                    this.scheduleStopTimeField = value;
                    this.RaisePropertyChanged("scheduleStopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte scheduleWeekDays {
            get {
                return this.scheduleWeekDaysField;
            }
            set {
                if ((this.scheduleWeekDaysField.Equals(value) != true)) {
                    this.scheduleWeekDaysField = value;
                    this.RaisePropertyChanged("scheduleWeekDays");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBUser", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DBUser : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_BlockedCall[] AE_BlockedCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording[] AE_BlockedScreenRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Evaluation[] AE_EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Evaluation[] AE_Evaluation1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog[] CallLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] DirectReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.FlagFieldName[] FlagFieldNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBRecordingProfile[] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBRecordingProfile[] Groups1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.IntelRexDeployment IntelRexDeploymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfIntelRexDeployment1U8vXZAD IntelRexDeploymentReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.UserManagedDepartment[] ManagedDepartmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.UserManagedLocation[] ManagedLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBSavedSearch[] SavedSearchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile[] ScreenRecordingProfilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile[] ScreenRecordingProfiles1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.Security[] SecuritiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.Security SecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfSecurity1U8vXZAD SecurityReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBService ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBService Service1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBService1U8vXZAD Service1ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBService1U8vXZAD ServiceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] SupervisorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD User1ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.UserPreference[] UserPreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] Users1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string agentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte agentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string alternatePhoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> associatedUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte callsNotAnsweredStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> controlServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string excludedExtensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extensionPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> hasAgentEvaluationLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> hasCallRecordingLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> hasComputerRecordingLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> intelrexDeploymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ipAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ipOrMachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ipmacAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ipmacAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> isDeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> isDualEndPtsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> isLookbackRecordingEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isMachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> isOnDemandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> isPrivacyEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> lastComputerLoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string machineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string otherExtensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> recordingServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> roleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> securityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sipContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sipURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeLoggedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string windowsUserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_BlockedCall[] AE_BlockedCall {
            get {
                return this.AE_BlockedCallField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_BlockedCallField, value) != true)) {
                    this.AE_BlockedCallField = value;
                    this.RaisePropertyChanged("AE_BlockedCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording[] AE_BlockedScreenRecording {
            get {
                return this.AE_BlockedScreenRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_BlockedScreenRecordingField, value) != true)) {
                    this.AE_BlockedScreenRecordingField = value;
                    this.RaisePropertyChanged("AE_BlockedScreenRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Evaluation[] AE_Evaluation {
            get {
                return this.AE_EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationField, value) != true)) {
                    this.AE_EvaluationField = value;
                    this.RaisePropertyChanged("AE_Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Evaluation[] AE_Evaluation1 {
            get {
                return this.AE_Evaluation1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AE_Evaluation1Field, value) != true)) {
                    this.AE_Evaluation1Field = value;
                    this.RaisePropertyChanged("AE_Evaluation1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog[] CallLogs {
            get {
                return this.CallLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogsField, value) != true)) {
                    this.CallLogsField = value;
                    this.RaisePropertyChanged("CallLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] DirectReports {
            get {
                return this.DirectReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectReportsField, value) != true)) {
                    this.DirectReportsField = value;
                    this.RaisePropertyChanged("DirectReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.FlagFieldName[] FlagFieldNames {
            get {
                return this.FlagFieldNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagFieldNamesField, value) != true)) {
                    this.FlagFieldNamesField = value;
                    this.RaisePropertyChanged("FlagFieldNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBRecordingProfile[] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBRecordingProfile[] Groups1 {
            get {
                return this.Groups1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Groups1Field, value) != true)) {
                    this.Groups1Field = value;
                    this.RaisePropertyChanged("Groups1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.IntelRexDeployment IntelRexDeployment {
            get {
                return this.IntelRexDeploymentField;
            }
            set {
                if ((object.ReferenceEquals(this.IntelRexDeploymentField, value) != true)) {
                    this.IntelRexDeploymentField = value;
                    this.RaisePropertyChanged("IntelRexDeployment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfIntelRexDeployment1U8vXZAD IntelRexDeploymentReference {
            get {
                return this.IntelRexDeploymentReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.IntelRexDeploymentReferenceField, value) != true)) {
                    this.IntelRexDeploymentReferenceField = value;
                    this.RaisePropertyChanged("IntelRexDeploymentReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.UserManagedDepartment[] ManagedDepartments {
            get {
                return this.ManagedDepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagedDepartmentsField, value) != true)) {
                    this.ManagedDepartmentsField = value;
                    this.RaisePropertyChanged("ManagedDepartments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.UserManagedLocation[] ManagedLocations {
            get {
                return this.ManagedLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagedLocationsField, value) != true)) {
                    this.ManagedLocationsField = value;
                    this.RaisePropertyChanged("ManagedLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBSavedSearch[] SavedSearches {
            get {
                return this.SavedSearchesField;
            }
            set {
                if ((object.ReferenceEquals(this.SavedSearchesField, value) != true)) {
                    this.SavedSearchesField = value;
                    this.RaisePropertyChanged("SavedSearches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile[] ScreenRecordingProfiles {
            get {
                return this.ScreenRecordingProfilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingProfilesField, value) != true)) {
                    this.ScreenRecordingProfilesField = value;
                    this.RaisePropertyChanged("ScreenRecordingProfiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile[] ScreenRecordingProfiles1 {
            get {
                return this.ScreenRecordingProfiles1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingProfiles1Field, value) != true)) {
                    this.ScreenRecordingProfiles1Field = value;
                    this.RaisePropertyChanged("ScreenRecordingProfiles1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordings {
            get {
                return this.ScreenRecordingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingsField, value) != true)) {
                    this.ScreenRecordingsField = value;
                    this.RaisePropertyChanged("ScreenRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.Security[] Securities {
            get {
                return this.SecuritiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritiesField, value) != true)) {
                    this.SecuritiesField = value;
                    this.RaisePropertyChanged("Securities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.Security Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfSecurity1U8vXZAD SecurityReference {
            get {
                return this.SecurityReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityReferenceField, value) != true)) {
                    this.SecurityReferenceField = value;
                    this.RaisePropertyChanged("SecurityReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBService Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBService Service1 {
            get {
                return this.Service1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Service1Field, value) != true)) {
                    this.Service1Field = value;
                    this.RaisePropertyChanged("Service1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBService1U8vXZAD Service1Reference {
            get {
                return this.Service1ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.Service1ReferenceField, value) != true)) {
                    this.Service1ReferenceField = value;
                    this.RaisePropertyChanged("Service1Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBService1U8vXZAD ServiceReference {
            get {
                return this.ServiceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceReferenceField, value) != true)) {
                    this.ServiceReferenceField = value;
                    this.RaisePropertyChanged("ServiceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Supervisors {
            get {
                return this.SupervisorsField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorsField, value) != true)) {
                    this.SupervisorsField = value;
                    this.RaisePropertyChanged("Supervisors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD User1Reference {
            get {
                return this.User1ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.User1ReferenceField, value) != true)) {
                    this.User1ReferenceField = value;
                    this.RaisePropertyChanged("User1Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.UserPreference[] UserPreferences {
            get {
                return this.UserPreferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPreferencesField, value) != true)) {
                    this.UserPreferencesField = value;
                    this.RaisePropertyChanged("UserPreferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Users1 {
            get {
                return this.Users1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Users1Field, value) != true)) {
                    this.Users1Field = value;
                    this.RaisePropertyChanged("Users1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string agentID {
            get {
                return this.agentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.agentIDField, value) != true)) {
                    this.agentIDField = value;
                    this.RaisePropertyChanged("agentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte agentStatus {
            get {
                return this.agentStatusField;
            }
            set {
                if ((this.agentStatusField.Equals(value) != true)) {
                    this.agentStatusField = value;
                    this.RaisePropertyChanged("agentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string alternatePhoneID {
            get {
                return this.alternatePhoneIDField;
            }
            set {
                if ((object.ReferenceEquals(this.alternatePhoneIDField, value) != true)) {
                    this.alternatePhoneIDField = value;
                    this.RaisePropertyChanged("alternatePhoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> associatedUserID {
            get {
                return this.associatedUserIDField;
            }
            set {
                if ((this.associatedUserIDField.Equals(value) != true)) {
                    this.associatedUserIDField = value;
                    this.RaisePropertyChanged("associatedUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte callsNotAnsweredStatus {
            get {
                return this.callsNotAnsweredStatusField;
            }
            set {
                if ((this.callsNotAnsweredStatusField.Equals(value) != true)) {
                    this.callsNotAnsweredStatusField = value;
                    this.RaisePropertyChanged("callsNotAnsweredStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> controlServiceID {
            get {
                return this.controlServiceIDField;
            }
            set {
                if ((this.controlServiceIDField.Equals(value) != true)) {
                    this.controlServiceIDField = value;
                    this.RaisePropertyChanged("controlServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string departmentName {
            get {
                return this.departmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentNameField, value) != true)) {
                    this.departmentNameField = value;
                    this.RaisePropertyChanged("departmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceNameField, value) != true)) {
                    this.deviceNameField = value;
                    this.RaisePropertyChanged("deviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string excludedExtensions {
            get {
                return this.excludedExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.excludedExtensionsField, value) != true)) {
                    this.excludedExtensionsField = value;
                    this.RaisePropertyChanged("excludedExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string extension {
            get {
                return this.extensionField;
            }
            set {
                if ((object.ReferenceEquals(this.extensionField, value) != true)) {
                    this.extensionField = value;
                    this.RaisePropertyChanged("extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string extensionPassword {
            get {
                return this.extensionPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.extensionPasswordField, value) != true)) {
                    this.extensionPasswordField = value;
                    this.RaisePropertyChanged("extensionPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> hasAgentEvaluationLicense {
            get {
                return this.hasAgentEvaluationLicenseField;
            }
            set {
                if ((this.hasAgentEvaluationLicenseField.Equals(value) != true)) {
                    this.hasAgentEvaluationLicenseField = value;
                    this.RaisePropertyChanged("hasAgentEvaluationLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> hasCallRecordingLicense {
            get {
                return this.hasCallRecordingLicenseField;
            }
            set {
                if ((this.hasCallRecordingLicenseField.Equals(value) != true)) {
                    this.hasCallRecordingLicenseField = value;
                    this.RaisePropertyChanged("hasCallRecordingLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> hasComputerRecordingLicense {
            get {
                return this.hasComputerRecordingLicenseField;
            }
            set {
                if ((this.hasComputerRecordingLicenseField.Equals(value) != true)) {
                    this.hasComputerRecordingLicenseField = value;
                    this.RaisePropertyChanged("hasComputerRecordingLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> intelrexDeploymentID {
            get {
                return this.intelrexDeploymentIDField;
            }
            set {
                if ((this.intelrexDeploymentIDField.Equals(value) != true)) {
                    this.intelrexDeploymentIDField = value;
                    this.RaisePropertyChanged("intelrexDeploymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ipAddressField, value) != true)) {
                    this.ipAddressField = value;
                    this.RaisePropertyChanged("ipAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ipOrMachineName {
            get {
                return this.ipOrMachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ipOrMachineNameField, value) != true)) {
                    this.ipOrMachineNameField = value;
                    this.RaisePropertyChanged("ipOrMachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ipmacAddress {
            get {
                return this.ipmacAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ipmacAddressField, value) != true)) {
                    this.ipmacAddressField = value;
                    this.RaisePropertyChanged("ipmacAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ipmacAddress2 {
            get {
                return this.ipmacAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ipmacAddress2Field, value) != true)) {
                    this.ipmacAddress2Field = value;
                    this.RaisePropertyChanged("ipmacAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                if ((this.isDeletedField.Equals(value) != true)) {
                    this.isDeletedField = value;
                    this.RaisePropertyChanged("isDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isDevice {
            get {
                return this.isDeviceField;
            }
            set {
                if ((this.isDeviceField.Equals(value) != true)) {
                    this.isDeviceField = value;
                    this.RaisePropertyChanged("isDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isDualEndPtsEnabled {
            get {
                return this.isDualEndPtsEnabledField;
            }
            set {
                if ((this.isDualEndPtsEnabledField.Equals(value) != true)) {
                    this.isDualEndPtsEnabledField = value;
                    this.RaisePropertyChanged("isDualEndPtsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isIPAddress {
            get {
                return this.isIPAddressField;
            }
            set {
                if ((this.isIPAddressField.Equals(value) != true)) {
                    this.isIPAddressField = value;
                    this.RaisePropertyChanged("isIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isLookbackRecordingEnabled {
            get {
                return this.isLookbackRecordingEnabledField;
            }
            set {
                if ((this.isLookbackRecordingEnabledField.Equals(value) != true)) {
                    this.isLookbackRecordingEnabledField = value;
                    this.RaisePropertyChanged("isLookbackRecordingEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isMachineName {
            get {
                return this.isMachineNameField;
            }
            set {
                if ((this.isMachineNameField.Equals(value) != true)) {
                    this.isMachineNameField = value;
                    this.RaisePropertyChanged("isMachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isOnDemand {
            get {
                return this.isOnDemandField;
            }
            set {
                if ((this.isOnDemandField.Equals(value) != true)) {
                    this.isOnDemandField = value;
                    this.RaisePropertyChanged("isOnDemand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isPrivacyEnabled {
            get {
                return this.isPrivacyEnabledField;
            }
            set {
                if ((this.isPrivacyEnabledField.Equals(value) != true)) {
                    this.isPrivacyEnabledField = value;
                    this.RaisePropertyChanged("isPrivacyEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> lastComputerLoginTime {
            get {
                return this.lastComputerLoginTimeField;
            }
            set {
                if ((this.lastComputerLoginTimeField.Equals(value) != true)) {
                    this.lastComputerLoginTimeField = value;
                    this.RaisePropertyChanged("lastComputerLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string machineName {
            get {
                return this.machineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.machineNameField, value) != true)) {
                    this.machineNameField = value;
                    this.RaisePropertyChanged("machineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string otherExtensions {
            get {
                return this.otherExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.otherExtensionsField, value) != true)) {
                    this.otherExtensionsField = value;
                    this.RaisePropertyChanged("otherExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string passwordSalt {
            get {
                return this.passwordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordSaltField, value) != true)) {
                    this.passwordSaltField = value;
                    this.RaisePropertyChanged("passwordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> recordingServiceID {
            get {
                return this.recordingServiceIDField;
            }
            set {
                if ((this.recordingServiceIDField.Equals(value) != true)) {
                    this.recordingServiceIDField = value;
                    this.RaisePropertyChanged("recordingServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> roleID {
            get {
                return this.roleIDField;
            }
            set {
                if ((this.roleIDField.Equals(value) != true)) {
                    this.roleIDField = value;
                    this.RaisePropertyChanged("roleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> securityID {
            get {
                return this.securityIDField;
            }
            set {
                if ((this.securityIDField.Equals(value) != true)) {
                    this.securityIDField = value;
                    this.RaisePropertyChanged("securityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sipContact {
            get {
                return this.sipContactField;
            }
            set {
                if ((object.ReferenceEquals(this.sipContactField, value) != true)) {
                    this.sipContactField = value;
                    this.RaisePropertyChanged("sipContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sipURI {
            get {
                return this.sipURIField;
            }
            set {
                if ((object.ReferenceEquals(this.sipURIField, value) != true)) {
                    this.sipURIField = value;
                    this.RaisePropertyChanged("sipURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeLoggedIn {
            get {
                return this.timeLoggedInField;
            }
            set {
                if ((this.timeLoggedInField.Equals(value) != true)) {
                    this.timeLoggedInField = value;
                    this.RaisePropertyChanged("timeLoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string windowsUserName {
            get {
                return this.windowsUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.windowsUserNameField, value) != true)) {
                    this.windowsUserNameField = value;
                    this.RaisePropertyChanged("windowsUserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_BlockedCall", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_BlockedCall : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog CallLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CallLogUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserUidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog CallLog {
            get {
                return this.CallLogField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogField, value) != true)) {
                    this.CallLogField = value;
                    this.RaisePropertyChanged("CallLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReference {
            get {
                return this.CallLogReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogReferenceField, value) != true)) {
                    this.CallLogReferenceField = value;
                    this.RaisePropertyChanged("CallLogReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CallLogUid {
            get {
                return this.CallLogUidField;
            }
            set {
                if ((this.CallLogUidField.Equals(value) != true)) {
                    this.CallLogUidField = value;
                    this.RaisePropertyChanged("CallLogUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserUid {
            get {
                return this.UserUidField;
            }
            set {
                if ((this.UserUidField.Equals(value) != true)) {
                    this.UserUidField = value;
                    this.RaisePropertyChanged("UserUid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallLog", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CallLog : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_BlockedCall[] AE_BlockedCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall[] AE_XRefEvaluationCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog[] CallLog1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog[] CallLog11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog CallLog2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLog2ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog CallLog3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLog3ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLogFlagData[] CallLogFlagDatasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNISField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DataSource DataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD DataSourceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBEncryptionKey EncryptionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBEncryptionKey1U8vXZAD EncryptionKeyReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string callIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid callLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string callerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string custom1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string custom2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid dataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> encryptionKeyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> fileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> fromCallLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isFileToBeTransferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string notesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string outboundNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> recordedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recordingFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> recordingProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime stopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> toCallLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short transferFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_BlockedCall[] AE_BlockedCall {
            get {
                return this.AE_BlockedCallField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_BlockedCallField, value) != true)) {
                    this.AE_BlockedCallField = value;
                    this.RaisePropertyChanged("AE_BlockedCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall[] AE_XRefEvaluationCall {
            get {
                return this.AE_XRefEvaluationCallField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_XRefEvaluationCallField, value) != true)) {
                    this.AE_XRefEvaluationCallField = value;
                    this.RaisePropertyChanged("AE_XRefEvaluationCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog[] CallLog1 {
            get {
                return this.CallLog1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CallLog1Field, value) != true)) {
                    this.CallLog1Field = value;
                    this.RaisePropertyChanged("CallLog1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog[] CallLog11 {
            get {
                return this.CallLog11Field;
            }
            set {
                if ((object.ReferenceEquals(this.CallLog11Field, value) != true)) {
                    this.CallLog11Field = value;
                    this.RaisePropertyChanged("CallLog11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog CallLog2 {
            get {
                return this.CallLog2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CallLog2Field, value) != true)) {
                    this.CallLog2Field = value;
                    this.RaisePropertyChanged("CallLog2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLog2Reference {
            get {
                return this.CallLog2ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLog2ReferenceField, value) != true)) {
                    this.CallLog2ReferenceField = value;
                    this.RaisePropertyChanged("CallLog2Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog CallLog3 {
            get {
                return this.CallLog3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CallLog3Field, value) != true)) {
                    this.CallLog3Field = value;
                    this.RaisePropertyChanged("CallLog3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLog3Reference {
            get {
                return this.CallLog3ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLog3ReferenceField, value) != true)) {
                    this.CallLog3ReferenceField = value;
                    this.RaisePropertyChanged("CallLog3Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLogFlagData[] CallLogFlagDatas {
            get {
                return this.CallLogFlagDatasField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogFlagDatasField, value) != true)) {
                    this.CallLogFlagDatasField = value;
                    this.RaisePropertyChanged("CallLogFlagDatas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNIS {
            get {
                return this.DNISField;
            }
            set {
                if ((object.ReferenceEquals(this.DNISField, value) != true)) {
                    this.DNISField = value;
                    this.RaisePropertyChanged("DNIS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DataSource DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceField, value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD DataSourceReference {
            get {
                return this.DataSourceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceReferenceField, value) != true)) {
                    this.DataSourceReferenceField = value;
                    this.RaisePropertyChanged("DataSourceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBEncryptionKey EncryptionKey {
            get {
                return this.EncryptionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptionKeyField, value) != true)) {
                    this.EncryptionKeyField = value;
                    this.RaisePropertyChanged("EncryptionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBEncryptionKey1U8vXZAD EncryptionKeyReference {
            get {
                return this.EncryptionKeyReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptionKeyReferenceField, value) != true)) {
                    this.EncryptionKeyReferenceField = value;
                    this.RaisePropertyChanged("EncryptionKeyReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordings {
            get {
                return this.ScreenRecordingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingsField, value) != true)) {
                    this.ScreenRecordingsField = value;
                    this.RaisePropertyChanged("ScreenRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string callID {
            get {
                return this.callIDField;
            }
            set {
                if ((object.ReferenceEquals(this.callIDField, value) != true)) {
                    this.callIDField = value;
                    this.RaisePropertyChanged("callID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid callLogID {
            get {
                return this.callLogIDField;
            }
            set {
                if ((this.callLogIDField.Equals(value) != true)) {
                    this.callLogIDField = value;
                    this.RaisePropertyChanged("callLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string callerID {
            get {
                return this.callerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.callerIDField, value) != true)) {
                    this.callerIDField = value;
                    this.RaisePropertyChanged("callerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string custom1 {
            get {
                return this.custom1Field;
            }
            set {
                if ((object.ReferenceEquals(this.custom1Field, value) != true)) {
                    this.custom1Field = value;
                    this.RaisePropertyChanged("custom1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string custom2 {
            get {
                return this.custom2Field;
            }
            set {
                if ((object.ReferenceEquals(this.custom2Field, value) != true)) {
                    this.custom2Field = value;
                    this.RaisePropertyChanged("custom2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid dataSourceID {
            get {
                return this.dataSourceIDField;
            }
            set {
                if ((this.dataSourceIDField.Equals(value) != true)) {
                    this.dataSourceIDField = value;
                    this.RaisePropertyChanged("dataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descr {
            get {
                return this.descrField;
            }
            set {
                if ((object.ReferenceEquals(this.descrField, value) != true)) {
                    this.descrField = value;
                    this.RaisePropertyChanged("descr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> encryptionKeyID {
            get {
                return this.encryptionKeyIDField;
            }
            set {
                if ((this.encryptionKeyIDField.Equals(value) != true)) {
                    this.encryptionKeyIDField = value;
                    this.RaisePropertyChanged("encryptionKeyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileHash {
            get {
                return this.fileHashField;
            }
            set {
                if ((object.ReferenceEquals(this.fileHashField, value) != true)) {
                    this.fileHashField = value;
                    this.RaisePropertyChanged("fileHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                if ((this.fileSizeField.Equals(value) != true)) {
                    this.fileSizeField = value;
                    this.RaisePropertyChanged("fileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> fromCallLogID {
            get {
                return this.fromCallLogIDField;
            }
            set {
                if ((this.fromCallLogIDField.Equals(value) != true)) {
                    this.fromCallLogIDField = value;
                    this.RaisePropertyChanged("fromCallLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isFileToBeTransferred {
            get {
                return this.isFileToBeTransferredField;
            }
            set {
                if ((this.isFileToBeTransferredField.Equals(value) != true)) {
                    this.isFileToBeTransferredField = value;
                    this.RaisePropertyChanged("isFileToBeTransferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string notes {
            get {
                return this.notesField;
            }
            set {
                if ((object.ReferenceEquals(this.notesField, value) != true)) {
                    this.notesField = value;
                    this.RaisePropertyChanged("notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string outboundNumber {
            get {
                return this.outboundNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.outboundNumberField, value) != true)) {
                    this.outboundNumberField = value;
                    this.RaisePropertyChanged("outboundNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> recordedByUserID {
            get {
                return this.recordedByUserIDField;
            }
            set {
                if ((this.recordedByUserIDField.Equals(value) != true)) {
                    this.recordedByUserIDField = value;
                    this.RaisePropertyChanged("recordedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recordingFile {
            get {
                return this.recordingFileField;
            }
            set {
                if ((object.ReferenceEquals(this.recordingFileField, value) != true)) {
                    this.recordingFileField = value;
                    this.RaisePropertyChanged("recordingFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> recordingProfileID {
            get {
                return this.recordingProfileIDField;
            }
            set {
                if ((this.recordingProfileIDField.Equals(value) != true)) {
                    this.recordingProfileIDField = value;
                    this.RaisePropertyChanged("recordingProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime stopTime {
            get {
                return this.stopTimeField;
            }
            set {
                if ((this.stopTimeField.Equals(value) != true)) {
                    this.stopTimeField = value;
                    this.RaisePropertyChanged("stopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> toCallLogID {
            get {
                return this.toCallLogIDField;
            }
            set {
                if ((this.toCallLogIDField.Equals(value) != true)) {
                    this.toCallLogIDField = value;
                    this.RaisePropertyChanged("toCallLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short transferFrom {
            get {
                return this.transferFromField;
            }
            set {
                if ((this.transferFromField.Equals(value) != true)) {
                    this.transferFromField = value;
                    this.RaisePropertyChanged("transferFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_XRefEvaluationCall", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_XRefEvaluationCall : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Evaluation AE_EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark[] AE_EvaluationQuestionBookmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD AE_EvaluationReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog CallLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CallLogUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationCallUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationUidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Evaluation AE_Evaluation {
            get {
                return this.AE_EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationField, value) != true)) {
                    this.AE_EvaluationField = value;
                    this.RaisePropertyChanged("AE_Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark[] AE_EvaluationQuestionBookmark {
            get {
                return this.AE_EvaluationQuestionBookmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationQuestionBookmarkField, value) != true)) {
                    this.AE_EvaluationQuestionBookmarkField = value;
                    this.RaisePropertyChanged("AE_EvaluationQuestionBookmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD AE_EvaluationReference {
            get {
                return this.AE_EvaluationReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationReferenceField, value) != true)) {
                    this.AE_EvaluationReferenceField = value;
                    this.RaisePropertyChanged("AE_EvaluationReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog CallLog {
            get {
                return this.CallLogField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogField, value) != true)) {
                    this.CallLogField = value;
                    this.RaisePropertyChanged("CallLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReference {
            get {
                return this.CallLogReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogReferenceField, value) != true)) {
                    this.CallLogReferenceField = value;
                    this.RaisePropertyChanged("CallLogReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CallLogUid {
            get {
                return this.CallLogUidField;
            }
            set {
                if ((this.CallLogUidField.Equals(value) != true)) {
                    this.CallLogUidField = value;
                    this.RaisePropertyChanged("CallLogUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationCallUid {
            get {
                return this.EvaluationCallUidField;
            }
            set {
                if ((this.EvaluationCallUidField.Equals(value) != true)) {
                    this.EvaluationCallUidField = value;
                    this.RaisePropertyChanged("EvaluationCallUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationUid {
            get {
                return this.EvaluationUidField;
            }
            set {
                if ((this.EvaluationUidField.Equals(value) != true)) {
                    this.EvaluationUidField = value;
                    this.RaisePropertyChanged("EvaluationUid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_Evaluation", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_Evaluation : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore[] AE_EvaluationQuestionScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Scorecard AE_ScorecardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Scorecard1U8vXZAD AE_ScorecardReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall[] AE_XRefEvaluationCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording[] AE_XRefEvaluationScreenRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EvaluationScorePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluatorUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInDraftModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD User1ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserUidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore[] AE_EvaluationQuestionScore {
            get {
                return this.AE_EvaluationQuestionScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationQuestionScoreField, value) != true)) {
                    this.AE_EvaluationQuestionScoreField = value;
                    this.RaisePropertyChanged("AE_EvaluationQuestionScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Scorecard AE_Scorecard {
            get {
                return this.AE_ScorecardField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardField, value) != true)) {
                    this.AE_ScorecardField = value;
                    this.RaisePropertyChanged("AE_Scorecard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Scorecard1U8vXZAD AE_ScorecardReference {
            get {
                return this.AE_ScorecardReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardReferenceField, value) != true)) {
                    this.AE_ScorecardReferenceField = value;
                    this.RaisePropertyChanged("AE_ScorecardReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall[] AE_XRefEvaluationCall {
            get {
                return this.AE_XRefEvaluationCallField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_XRefEvaluationCallField, value) != true)) {
                    this.AE_XRefEvaluationCallField = value;
                    this.RaisePropertyChanged("AE_XRefEvaluationCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording[] AE_XRefEvaluationScreenRecording {
            get {
                return this.AE_XRefEvaluationScreenRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_XRefEvaluationScreenRecordingField, value) != true)) {
                    this.AE_XRefEvaluationScreenRecordingField = value;
                    this.RaisePropertyChanged("AE_XRefEvaluationScreenRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EvaluationScorePercent {
            get {
                return this.EvaluationScorePercentField;
            }
            set {
                if ((this.EvaluationScorePercentField.Equals(value) != true)) {
                    this.EvaluationScorePercentField = value;
                    this.RaisePropertyChanged("EvaluationScorePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationUid {
            get {
                return this.EvaluationUidField;
            }
            set {
                if ((this.EvaluationUidField.Equals(value) != true)) {
                    this.EvaluationUidField = value;
                    this.RaisePropertyChanged("EvaluationUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluatorUid {
            get {
                return this.EvaluatorUidField;
            }
            set {
                if ((this.EvaluatorUidField.Equals(value) != true)) {
                    this.EvaluatorUidField = value;
                    this.RaisePropertyChanged("EvaluatorUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInDraftMode {
            get {
                return this.IsInDraftModeField;
            }
            set {
                if ((this.IsInDraftModeField.Equals(value) != true)) {
                    this.IsInDraftModeField = value;
                    this.RaisePropertyChanged("IsInDraftMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgressPercent {
            get {
                return this.ProgressPercentField;
            }
            set {
                if ((this.ProgressPercentField.Equals(value) != true)) {
                    this.ProgressPercentField = value;
                    this.RaisePropertyChanged("ProgressPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardUid {
            get {
                return this.ScorecardUidField;
            }
            set {
                if ((this.ScorecardUidField.Equals(value) != true)) {
                    this.ScorecardUidField = value;
                    this.RaisePropertyChanged("ScorecardUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD User1Reference {
            get {
                return this.User1ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.User1ReferenceField, value) != true)) {
                    this.User1ReferenceField = value;
                    this.RaisePropertyChanged("User1Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserUid {
            get {
                return this.UserUidField;
            }
            set {
                if ((this.UserUidField.Equals(value) != true)) {
                    this.UserUidField = value;
                    this.RaisePropertyChanged("UserUid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_EvaluationQuestionScore", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_EvaluationQuestionScore : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Evaluation AE_EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark[] AE_EvaluationQuestionBookmarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD AE_EvaluationReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion AE_ScorecardQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestion1U8vXZAD AE_ScorecardQuestionReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationQuestionScoreUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScoreValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Evaluation AE_Evaluation {
            get {
                return this.AE_EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationField, value) != true)) {
                    this.AE_EvaluationField = value;
                    this.RaisePropertyChanged("AE_Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark[] AE_EvaluationQuestionBookmark {
            get {
                return this.AE_EvaluationQuestionBookmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationQuestionBookmarkField, value) != true)) {
                    this.AE_EvaluationQuestionBookmarkField = value;
                    this.RaisePropertyChanged("AE_EvaluationQuestionBookmark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD AE_EvaluationReference {
            get {
                return this.AE_EvaluationReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationReferenceField, value) != true)) {
                    this.AE_EvaluationReferenceField = value;
                    this.RaisePropertyChanged("AE_EvaluationReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion AE_ScorecardQuestion {
            get {
                return this.AE_ScorecardQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardQuestionField, value) != true)) {
                    this.AE_ScorecardQuestionField = value;
                    this.RaisePropertyChanged("AE_ScorecardQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestion1U8vXZAD AE_ScorecardQuestionReference {
            get {
                return this.AE_ScorecardQuestionReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardQuestionReferenceField, value) != true)) {
                    this.AE_ScorecardQuestionReferenceField = value;
                    this.RaisePropertyChanged("AE_ScorecardQuestionReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationQuestionScoreUid {
            get {
                return this.EvaluationQuestionScoreUidField;
            }
            set {
                if ((this.EvaluationQuestionScoreUidField.Equals(value) != true)) {
                    this.EvaluationQuestionScoreUidField = value;
                    this.RaisePropertyChanged("EvaluationQuestionScoreUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationUid {
            get {
                return this.EvaluationUidField;
            }
            set {
                if ((this.EvaluationUidField.Equals(value) != true)) {
                    this.EvaluationUidField = value;
                    this.RaisePropertyChanged("EvaluationUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionUid {
            get {
                return this.QuestionUidField;
            }
            set {
                if ((this.QuestionUidField.Equals(value) != true)) {
                    this.QuestionUidField = value;
                    this.RaisePropertyChanged("QuestionUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScoreValue {
            get {
                return this.ScoreValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ScoreValueField, value) != true)) {
                    this.ScoreValueField = value;
                    this.RaisePropertyChanged("ScoreValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_EvaluationQuestionBookmark", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_EvaluationQuestionBookmark : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore AE_EvaluationQuestionScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_EvaluationQuestionScore1U8vXZAD AE_EvaluationQuestionScoreReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall AE_XRefEvaluationCallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_XRefEvaluationCall1U8vXZAD AE_XRefEvaluationCallReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BokmarkEndInTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BokmarkStartTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationCallUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationQuestionBookmarkUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationQuestionScoreUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore AE_EvaluationQuestionScore {
            get {
                return this.AE_EvaluationQuestionScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationQuestionScoreField, value) != true)) {
                    this.AE_EvaluationQuestionScoreField = value;
                    this.RaisePropertyChanged("AE_EvaluationQuestionScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_EvaluationQuestionScore1U8vXZAD AE_EvaluationQuestionScoreReference {
            get {
                return this.AE_EvaluationQuestionScoreReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationQuestionScoreReferenceField, value) != true)) {
                    this.AE_EvaluationQuestionScoreReferenceField = value;
                    this.RaisePropertyChanged("AE_EvaluationQuestionScoreReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall AE_XRefEvaluationCall {
            get {
                return this.AE_XRefEvaluationCallField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_XRefEvaluationCallField, value) != true)) {
                    this.AE_XRefEvaluationCallField = value;
                    this.RaisePropertyChanged("AE_XRefEvaluationCall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_XRefEvaluationCall1U8vXZAD AE_XRefEvaluationCallReference {
            get {
                return this.AE_XRefEvaluationCallReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_XRefEvaluationCallReferenceField, value) != true)) {
                    this.AE_XRefEvaluationCallReferenceField = value;
                    this.RaisePropertyChanged("AE_XRefEvaluationCallReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BokmarkEndInTicks {
            get {
                return this.BokmarkEndInTicksField;
            }
            set {
                if ((this.BokmarkEndInTicksField.Equals(value) != true)) {
                    this.BokmarkEndInTicksField = value;
                    this.RaisePropertyChanged("BokmarkEndInTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BokmarkStartTicks {
            get {
                return this.BokmarkStartTicksField;
            }
            set {
                if ((this.BokmarkStartTicksField.Equals(value) != true)) {
                    this.BokmarkStartTicksField = value;
                    this.RaisePropertyChanged("BokmarkStartTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationCallUid {
            get {
                return this.EvaluationCallUidField;
            }
            set {
                if ((this.EvaluationCallUidField.Equals(value) != true)) {
                    this.EvaluationCallUidField = value;
                    this.RaisePropertyChanged("EvaluationCallUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationQuestionBookmarkUid {
            get {
                return this.EvaluationQuestionBookmarkUidField;
            }
            set {
                if ((this.EvaluationQuestionBookmarkUidField.Equals(value) != true)) {
                    this.EvaluationQuestionBookmarkUidField = value;
                    this.RaisePropertyChanged("EvaluationQuestionBookmarkUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationQuestionScoreUid {
            get {
                return this.EvaluationQuestionScoreUidField;
            }
            set {
                if ((this.EvaluationQuestionScoreUidField.Equals(value) != true)) {
                    this.EvaluationQuestionScoreUidField = value;
                    this.RaisePropertyChanged("EvaluationQuestionScoreUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UIOrder {
            get {
                return this.UIOrderField;
            }
            set {
                if ((this.UIOrderField.Equals(value) != true)) {
                    this.UIOrderField = value;
                    this.RaisePropertyChanged("UIOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_ScorecardQuestion", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_ScorecardQuestion : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore[] AE_EvaluationQuestionScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory AE_ScorecardQuestionCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestionCategory1U8vXZAD AE_ScorecardQuestionCategoryReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionCategoryUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionChainUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore[] AE_EvaluationQuestionScore {
            get {
                return this.AE_EvaluationQuestionScoreField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationQuestionScoreField, value) != true)) {
                    this.AE_EvaluationQuestionScoreField = value;
                    this.RaisePropertyChanged("AE_EvaluationQuestionScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory AE_ScorecardQuestionCategory {
            get {
                return this.AE_ScorecardQuestionCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardQuestionCategoryField, value) != true)) {
                    this.AE_ScorecardQuestionCategoryField = value;
                    this.RaisePropertyChanged("AE_ScorecardQuestionCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestionCategory1U8vXZAD AE_ScorecardQuestionCategoryReference {
            get {
                return this.AE_ScorecardQuestionCategoryReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardQuestionCategoryReferenceField, value) != true)) {
                    this.AE_ScorecardQuestionCategoryReferenceField = value;
                    this.RaisePropertyChanged("AE_ScorecardQuestionCategoryReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionCategoryUid {
            get {
                return this.QuestionCategoryUidField;
            }
            set {
                if ((this.QuestionCategoryUidField.Equals(value) != true)) {
                    this.QuestionCategoryUidField = value;
                    this.RaisePropertyChanged("QuestionCategoryUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionChainUid {
            get {
                return this.QuestionChainUidField;
            }
            set {
                if ((this.QuestionChainUidField.Equals(value) != true)) {
                    this.QuestionChainUidField = value;
                    this.RaisePropertyChanged("QuestionChainUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionType {
            get {
                return this.QuestionTypeField;
            }
            set {
                if ((this.QuestionTypeField.Equals(value) != true)) {
                    this.QuestionTypeField = value;
                    this.RaisePropertyChanged("QuestionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionUid {
            get {
                return this.QuestionUidField;
            }
            set {
                if ((this.QuestionUidField.Equals(value) != true)) {
                    this.QuestionUidField = value;
                    this.RaisePropertyChanged("QuestionUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UIOrder {
            get {
                return this.UIOrderField;
            }
            set {
                if ((this.UIOrderField.Equals(value) != true)) {
                    this.UIOrderField = value;
                    this.RaisePropertyChanged("UIOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_ScorecardQuestionCategory", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_ScorecardQuestionCategory : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Scorecard AE_ScorecardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion[] AE_ScorecardQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Scorecard1U8vXZAD AE_ScorecardReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionCategoryChainUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionCategoryUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Scorecard AE_Scorecard {
            get {
                return this.AE_ScorecardField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardField, value) != true)) {
                    this.AE_ScorecardField = value;
                    this.RaisePropertyChanged("AE_Scorecard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion[] AE_ScorecardQuestion {
            get {
                return this.AE_ScorecardQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardQuestionField, value) != true)) {
                    this.AE_ScorecardQuestionField = value;
                    this.RaisePropertyChanged("AE_ScorecardQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Scorecard1U8vXZAD AE_ScorecardReference {
            get {
                return this.AE_ScorecardReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardReferenceField, value) != true)) {
                    this.AE_ScorecardReferenceField = value;
                    this.RaisePropertyChanged("AE_ScorecardReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionCategoryChainUid {
            get {
                return this.QuestionCategoryChainUidField;
            }
            set {
                if ((this.QuestionCategoryChainUidField.Equals(value) != true)) {
                    this.QuestionCategoryChainUidField = value;
                    this.RaisePropertyChanged("QuestionCategoryChainUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionCategoryUid {
            get {
                return this.QuestionCategoryUidField;
            }
            set {
                if ((this.QuestionCategoryUidField.Equals(value) != true)) {
                    this.QuestionCategoryUidField = value;
                    this.RaisePropertyChanged("QuestionCategoryUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardUid {
            get {
                return this.ScorecardUidField;
            }
            set {
                if ((this.ScorecardUidField.Equals(value) != true)) {
                    this.ScorecardUidField = value;
                    this.RaisePropertyChanged("ScorecardUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UIOrder {
            get {
                return this.UIOrderField;
            }
            set {
                if ((this.UIOrderField.Equals(value) != true)) {
                    this.UIOrderField = value;
                    this.RaisePropertyChanged("UIOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_Scorecard", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_Scorecard : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Evaluation[] AE_EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_ScorecardCategory AE_ScorecardCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardCategory1U8vXZAD AE_ScorecardCategoryReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory[] AE_ScorecardQuestionCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLatestVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedByEvaluationUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardCategoryUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardChainUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Evaluation[] AE_Evaluation {
            get {
                return this.AE_EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationField, value) != true)) {
                    this.AE_EvaluationField = value;
                    this.RaisePropertyChanged("AE_Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_ScorecardCategory AE_ScorecardCategory {
            get {
                return this.AE_ScorecardCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardCategoryField, value) != true)) {
                    this.AE_ScorecardCategoryField = value;
                    this.RaisePropertyChanged("AE_ScorecardCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardCategory1U8vXZAD AE_ScorecardCategoryReference {
            get {
                return this.AE_ScorecardCategoryReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardCategoryReferenceField, value) != true)) {
                    this.AE_ScorecardCategoryReferenceField = value;
                    this.RaisePropertyChanged("AE_ScorecardCategoryReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory[] AE_ScorecardQuestionCategory {
            get {
                return this.AE_ScorecardQuestionCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardQuestionCategoryField, value) != true)) {
                    this.AE_ScorecardQuestionCategoryField = value;
                    this.RaisePropertyChanged("AE_ScorecardQuestionCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLatestVersion {
            get {
                return this.IsLatestVersionField;
            }
            set {
                if ((this.IsLatestVersionField.Equals(value) != true)) {
                    this.IsLatestVersionField = value;
                    this.RaisePropertyChanged("IsLatestVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockedByEvaluationUsage {
            get {
                return this.LockedByEvaluationUsageField;
            }
            set {
                if ((this.LockedByEvaluationUsageField.Equals(value) != true)) {
                    this.LockedByEvaluationUsageField = value;
                    this.RaisePropertyChanged("LockedByEvaluationUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardCategoryUid {
            get {
                return this.ScorecardCategoryUidField;
            }
            set {
                if ((this.ScorecardCategoryUidField.Equals(value) != true)) {
                    this.ScorecardCategoryUidField = value;
                    this.RaisePropertyChanged("ScorecardCategoryUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardChainUid {
            get {
                return this.ScorecardChainUidField;
            }
            set {
                if ((this.ScorecardChainUidField.Equals(value) != true)) {
                    this.ScorecardChainUidField = value;
                    this.RaisePropertyChanged("ScorecardChainUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardUid {
            get {
                return this.ScorecardUidField;
            }
            set {
                if ((this.ScorecardUidField.Equals(value) != true)) {
                    this.ScorecardUidField = value;
                    this.RaisePropertyChanged("ScorecardUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_ScorecardCategory", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_ScorecardCategory : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Scorecard[] AE_ScorecardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScorecardCategoryUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Scorecard[] AE_Scorecard {
            get {
                return this.AE_ScorecardField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_ScorecardField, value) != true)) {
                    this.AE_ScorecardField = value;
                    this.RaisePropertyChanged("AE_Scorecard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScorecardCategoryUid {
            get {
                return this.ScorecardCategoryUidField;
            }
            set {
                if ((this.ScorecardCategoryUidField.Equals(value) != true)) {
                    this.ScorecardCategoryUidField = value;
                    this.RaisePropertyChanged("ScorecardCategoryUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_XRefEvaluationScreenRecording", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_XRefEvaluationScreenRecording : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_Evaluation AE_EvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD AE_EvaluationReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationScreenRecordingUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EvaluationUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecording ScreenRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD ScreenRecordingReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScreenRecordingUidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_Evaluation AE_Evaluation {
            get {
                return this.AE_EvaluationField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationField, value) != true)) {
                    this.AE_EvaluationField = value;
                    this.RaisePropertyChanged("AE_Evaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD AE_EvaluationReference {
            get {
                return this.AE_EvaluationReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_EvaluationReferenceField, value) != true)) {
                    this.AE_EvaluationReferenceField = value;
                    this.RaisePropertyChanged("AE_EvaluationReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationScreenRecordingUid {
            get {
                return this.EvaluationScreenRecordingUidField;
            }
            set {
                if ((this.EvaluationScreenRecordingUidField.Equals(value) != true)) {
                    this.EvaluationScreenRecordingUidField = value;
                    this.RaisePropertyChanged("EvaluationScreenRecordingUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EvaluationUid {
            get {
                return this.EvaluationUidField;
            }
            set {
                if ((this.EvaluationUidField.Equals(value) != true)) {
                    this.EvaluationUidField = value;
                    this.RaisePropertyChanged("EvaluationUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecording ScreenRecording {
            get {
                return this.ScreenRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingField, value) != true)) {
                    this.ScreenRecordingField = value;
                    this.RaisePropertyChanged("ScreenRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD ScreenRecordingReference {
            get {
                return this.ScreenRecordingReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingReferenceField, value) != true)) {
                    this.ScreenRecordingReferenceField = value;
                    this.RaisePropertyChanged("ScreenRecordingReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScreenRecordingUid {
            get {
                return this.ScreenRecordingUidField;
            }
            set {
                if ((this.ScreenRecordingUidField.Equals(value) != true)) {
                    this.ScreenRecordingUidField = value;
                    this.RaisePropertyChanged("ScreenRecordingUid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenRecording", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ScreenRecording : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording[] AE_BlockedScreenRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording[] AE_XRefEvaluationScreenRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog CallLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DataSource DataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD DataSourceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBEncryptionKey EncryptionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBEncryptionKey1U8vXZAD EncryptionKeyReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecordingFlagData[] ScreenRecordingFlagDatasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> callRecordingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid dataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> encryptionKeyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> fileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isFileToBeTransferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string notesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recordingFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid screenRecordingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> screenRecordingProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> stopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording[] AE_BlockedScreenRecording {
            get {
                return this.AE_BlockedScreenRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_BlockedScreenRecordingField, value) != true)) {
                    this.AE_BlockedScreenRecordingField = value;
                    this.RaisePropertyChanged("AE_BlockedScreenRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording[] AE_XRefEvaluationScreenRecording {
            get {
                return this.AE_XRefEvaluationScreenRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.AE_XRefEvaluationScreenRecordingField, value) != true)) {
                    this.AE_XRefEvaluationScreenRecordingField = value;
                    this.RaisePropertyChanged("AE_XRefEvaluationScreenRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog CallLog {
            get {
                return this.CallLogField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogField, value) != true)) {
                    this.CallLogField = value;
                    this.RaisePropertyChanged("CallLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReference {
            get {
                return this.CallLogReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogReferenceField, value) != true)) {
                    this.CallLogReferenceField = value;
                    this.RaisePropertyChanged("CallLogReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DataSource DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceField, value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD DataSourceReference {
            get {
                return this.DataSourceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceReferenceField, value) != true)) {
                    this.DataSourceReferenceField = value;
                    this.RaisePropertyChanged("DataSourceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBEncryptionKey EncryptionKey {
            get {
                return this.EncryptionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptionKeyField, value) != true)) {
                    this.EncryptionKeyField = value;
                    this.RaisePropertyChanged("EncryptionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBEncryptionKey1U8vXZAD EncryptionKeyReference {
            get {
                return this.EncryptionKeyReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptionKeyReferenceField, value) != true)) {
                    this.EncryptionKeyReferenceField = value;
                    this.RaisePropertyChanged("EncryptionKeyReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecordingFlagData[] ScreenRecordingFlagDatas {
            get {
                return this.ScreenRecordingFlagDatasField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingFlagDatasField, value) != true)) {
                    this.ScreenRecordingFlagDatasField = value;
                    this.RaisePropertyChanged("ScreenRecordingFlagDatas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> callRecordingID {
            get {
                return this.callRecordingIDField;
            }
            set {
                if ((this.callRecordingIDField.Equals(value) != true)) {
                    this.callRecordingIDField = value;
                    this.RaisePropertyChanged("callRecordingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid dataSourceID {
            get {
                return this.dataSourceIDField;
            }
            set {
                if ((this.dataSourceIDField.Equals(value) != true)) {
                    this.dataSourceIDField = value;
                    this.RaisePropertyChanged("dataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descr {
            get {
                return this.descrField;
            }
            set {
                if ((object.ReferenceEquals(this.descrField, value) != true)) {
                    this.descrField = value;
                    this.RaisePropertyChanged("descr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> encryptionKeyID {
            get {
                return this.encryptionKeyIDField;
            }
            set {
                if ((this.encryptionKeyIDField.Equals(value) != true)) {
                    this.encryptionKeyIDField = value;
                    this.RaisePropertyChanged("encryptionKeyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                if ((this.fileSizeField.Equals(value) != true)) {
                    this.fileSizeField = value;
                    this.RaisePropertyChanged("fileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hostName {
            get {
                return this.hostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.hostNameField, value) != true)) {
                    this.hostNameField = value;
                    this.RaisePropertyChanged("hostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isCompleted {
            get {
                return this.isCompletedField;
            }
            set {
                if ((this.isCompletedField.Equals(value) != true)) {
                    this.isCompletedField = value;
                    this.RaisePropertyChanged("isCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isFileToBeTransferred {
            get {
                return this.isFileToBeTransferredField;
            }
            set {
                if ((this.isFileToBeTransferredField.Equals(value) != true)) {
                    this.isFileToBeTransferredField = value;
                    this.RaisePropertyChanged("isFileToBeTransferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string notes {
            get {
                return this.notesField;
            }
            set {
                if ((object.ReferenceEquals(this.notesField, value) != true)) {
                    this.notesField = value;
                    this.RaisePropertyChanged("notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recordingFile {
            get {
                return this.recordingFileField;
            }
            set {
                if ((object.ReferenceEquals(this.recordingFileField, value) != true)) {
                    this.recordingFileField = value;
                    this.RaisePropertyChanged("recordingFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid screenRecordingID {
            get {
                return this.screenRecordingIDField;
            }
            set {
                if ((this.screenRecordingIDField.Equals(value) != true)) {
                    this.screenRecordingIDField = value;
                    this.RaisePropertyChanged("screenRecordingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> screenRecordingProfileID {
            get {
                return this.screenRecordingProfileIDField;
            }
            set {
                if ((this.screenRecordingProfileIDField.Equals(value) != true)) {
                    this.screenRecordingProfileIDField = value;
                    this.RaisePropertyChanged("screenRecordingProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> stopTime {
            get {
                return this.stopTimeField;
            }
            set {
                if ((this.stopTimeField.Equals(value) != true)) {
                    this.stopTimeField = value;
                    this.RaisePropertyChanged("stopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AE_BlockedScreenRecording", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class AE_BlockedScreenRecording : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecording ScreenRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD ScreenRecordingReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScreenRecordingUidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserUidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecording ScreenRecording {
            get {
                return this.ScreenRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingField, value) != true)) {
                    this.ScreenRecordingField = value;
                    this.RaisePropertyChanged("ScreenRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD ScreenRecordingReference {
            get {
                return this.ScreenRecordingReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingReferenceField, value) != true)) {
                    this.ScreenRecordingReferenceField = value;
                    this.RaisePropertyChanged("ScreenRecordingReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScreenRecordingUid {
            get {
                return this.ScreenRecordingUidField;
            }
            set {
                if ((this.ScreenRecordingUidField.Equals(value) != true)) {
                    this.ScreenRecordingUidField = value;
                    this.RaisePropertyChanged("ScreenRecordingUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserUid {
            get {
                return this.UserUidField;
            }
            set {
                if ((this.UserUidField.Equals(value) != true)) {
                    this.UserUidField = value;
                    this.RaisePropertyChanged("UserUid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSource", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DataSource : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation[] ArchiveSourceLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog[] CallLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBService[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBService[] Services1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string archiveIpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid dataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataSourceLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataSourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dsPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dsUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime firstRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime lastRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> serviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> spaceAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation[] ArchiveSourceLocations {
            get {
                return this.ArchiveSourceLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveSourceLocationsField, value) != true)) {
                    this.ArchiveSourceLocationsField = value;
                    this.RaisePropertyChanged("ArchiveSourceLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog[] CallLogs {
            get {
                return this.CallLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogsField, value) != true)) {
                    this.CallLogsField = value;
                    this.RaisePropertyChanged("CallLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordings {
            get {
                return this.ScreenRecordingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingsField, value) != true)) {
                    this.ScreenRecordingsField = value;
                    this.RaisePropertyChanged("ScreenRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBService[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBService[] Services1 {
            get {
                return this.Services1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Services1Field, value) != true)) {
                    this.Services1Field = value;
                    this.RaisePropertyChanged("Services1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string archiveIpAddress {
            get {
                return this.archiveIpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.archiveIpAddressField, value) != true)) {
                    this.archiveIpAddressField = value;
                    this.RaisePropertyChanged("archiveIpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid dataSourceID {
            get {
                return this.dataSourceIDField;
            }
            set {
                if ((this.dataSourceIDField.Equals(value) != true)) {
                    this.dataSourceIDField = value;
                    this.RaisePropertyChanged("dataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dataSourceLocation {
            get {
                return this.dataSourceLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.dataSourceLocationField, value) != true)) {
                    this.dataSourceLocationField = value;
                    this.RaisePropertyChanged("dataSourceLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.dataSourceNameField, value) != true)) {
                    this.dataSourceNameField = value;
                    this.RaisePropertyChanged("dataSourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dsPassword {
            get {
                return this.dsPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.dsPasswordField, value) != true)) {
                    this.dsPasswordField = value;
                    this.RaisePropertyChanged("dsPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dsUsername {
            get {
                return this.dsUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.dsUsernameField, value) != true)) {
                    this.dsUsernameField = value;
                    this.RaisePropertyChanged("dsUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime firstRecord {
            get {
                return this.firstRecordField;
            }
            set {
                if ((this.firstRecordField.Equals(value) != true)) {
                    this.firstRecordField = value;
                    this.RaisePropertyChanged("firstRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime lastRecord {
            get {
                return this.lastRecordField;
            }
            set {
                if ((this.lastRecordField.Equals(value) != true)) {
                    this.lastRecordField = value;
                    this.RaisePropertyChanged("lastRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                if ((this.serviceIDField.Equals(value) != true)) {
                    this.serviceIDField = value;
                    this.RaisePropertyChanged("serviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> spaceAvailable {
            get {
                return this.spaceAvailableField;
            }
            set {
                if ((this.spaceAvailableField.Equals(value) != true)) {
                    this.spaceAvailableField = value;
                    this.RaisePropertyChanged("spaceAvailable");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchiveSourceLocation", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ArchiveSourceLocation : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.Archive ArchiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfArchive1U8vXZAD ArchiveReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DataSource DataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD DataSourceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid archiveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid archiveSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid dataSourceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.Archive Archive {
            get {
                return this.ArchiveField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveField, value) != true)) {
                    this.ArchiveField = value;
                    this.RaisePropertyChanged("Archive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfArchive1U8vXZAD ArchiveReference {
            get {
                return this.ArchiveReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveReferenceField, value) != true)) {
                    this.ArchiveReferenceField = value;
                    this.RaisePropertyChanged("ArchiveReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DataSource DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceField, value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD DataSourceReference {
            get {
                return this.DataSourceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceReferenceField, value) != true)) {
                    this.DataSourceReferenceField = value;
                    this.RaisePropertyChanged("DataSourceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid archiveId {
            get {
                return this.archiveIdField;
            }
            set {
                if ((this.archiveIdField.Equals(value) != true)) {
                    this.archiveIdField = value;
                    this.RaisePropertyChanged("archiveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid archiveSourceId {
            get {
                return this.archiveSourceIdField;
            }
            set {
                if ((this.archiveSourceIdField.Equals(value) != true)) {
                    this.archiveSourceIdField = value;
                    this.RaisePropertyChanged("archiveSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid dataSourceId {
            get {
                return this.dataSourceIdField;
            }
            set {
                if ((this.dataSourceIdField.Equals(value) != true)) {
                    this.dataSourceIdField = value;
                    this.RaisePropertyChanged("dataSourceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Archive", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Archive : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllButNewestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> AmountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ArchiveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchiveNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation[] ArchiveSourceLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArchiveToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CurrentAmountCopiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DatasourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DaysOfDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> DaysofWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailCultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> LastResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextRunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RecurringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeofRunField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllButNewest {
            get {
                return this.AllButNewestField;
            }
            set {
                if ((this.AllButNewestField.Equals(value) != true)) {
                    this.AllButNewestField = value;
                    this.RaisePropertyChanged("AllButNewest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> AmountType {
            get {
                return this.AmountTypeField;
            }
            set {
                if ((this.AmountTypeField.Equals(value) != true)) {
                    this.AmountTypeField = value;
                    this.RaisePropertyChanged("AmountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ArchiveId {
            get {
                return this.ArchiveIdField;
            }
            set {
                if ((this.ArchiveIdField.Equals(value) != true)) {
                    this.ArchiveIdField = value;
                    this.RaisePropertyChanged("ArchiveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArchiveName {
            get {
                return this.ArchiveNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveNameField, value) != true)) {
                    this.ArchiveNameField = value;
                    this.RaisePropertyChanged("ArchiveName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation[] ArchiveSourceLocations {
            get {
                return this.ArchiveSourceLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveSourceLocationsField, value) != true)) {
                    this.ArchiveSourceLocationsField = value;
                    this.RaisePropertyChanged("ArchiveSourceLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArchiveToDate {
            get {
                return this.ArchiveToDateField;
            }
            set {
                if ((this.ArchiveToDateField.Equals(value) != true)) {
                    this.ArchiveToDateField = value;
                    this.RaisePropertyChanged("ArchiveToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancelled {
            get {
                return this.CancelledField;
            }
            set {
                if ((this.CancelledField.Equals(value) != true)) {
                    this.CancelledField = value;
                    this.RaisePropertyChanged("Cancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CurrentAmountCopied {
            get {
                return this.CurrentAmountCopiedField;
            }
            set {
                if ((this.CurrentAmountCopiedField.Equals(value) != true)) {
                    this.CurrentAmountCopiedField = value;
                    this.RaisePropertyChanged("CurrentAmountCopied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DatasourceId {
            get {
                return this.DatasourceIdField;
            }
            set {
                if ((this.DatasourceIdField.Equals(value) != true)) {
                    this.DatasourceIdField = value;
                    this.RaisePropertyChanged("DatasourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DaysOfData {
            get {
                return this.DaysOfDataField;
            }
            set {
                if ((this.DaysOfDataField.Equals(value) != true)) {
                    this.DaysOfDataField = value;
                    this.RaisePropertyChanged("DaysOfData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> DaysofWeek {
            get {
                return this.DaysofWeekField;
            }
            set {
                if ((this.DaysofWeekField.Equals(value) != true)) {
                    this.DaysofWeekField = value;
                    this.RaisePropertyChanged("DaysofWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailCulture {
            get {
                return this.EmailCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailCultureField, value) != true)) {
                    this.EmailCultureField = value;
                    this.RaisePropertyChanged("EmailCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> LastResult {
            get {
                return this.LastResultField;
            }
            set {
                if ((this.LastResultField.Equals(value) != true)) {
                    this.LastResultField = value;
                    this.RaisePropertyChanged("LastResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastRun {
            get {
                return this.LastRunField;
            }
            set {
                if ((this.LastRunField.Equals(value) != true)) {
                    this.LastRunField = value;
                    this.RaisePropertyChanged("LastRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextRun {
            get {
                return this.NextRunField;
            }
            set {
                if ((this.NextRunField.Equals(value) != true)) {
                    this.NextRunField = value;
                    this.RaisePropertyChanged("NextRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Recurring {
            get {
                return this.RecurringField;
            }
            set {
                if ((this.RecurringField.Equals(value) != true)) {
                    this.RecurringField = value;
                    this.RaisePropertyChanged("Recurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Target {
            get {
                return this.TargetField;
            }
            set {
                if ((this.TargetField.Equals(value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeofRun {
            get {
                return this.TimeofRunField;
            }
            set {
                if ((this.TimeofRunField.Equals(value) != true)) {
                    this.TimeofRunField = value;
                    this.RaisePropertyChanged("TimeofRun");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBService", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DBService : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DataSource LocalDataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD LocalDataSourceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBPbxType PBXTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBPbxType1U8vXZAD PBXTypeReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DataSource RemoteDataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD RemoteDataSourceReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ScnDeletionDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ScnTotalDataSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> ScnUserDataSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ServiceType ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfServiceType1U8vXZAD ServiceTypeReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] Users1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string alertLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apiIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> apiPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> callControlServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> callConversionServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ctcHostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fromEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ipAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isAuthenticationRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isEventLogAlertsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isSmtpAlertsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isTransferFilesEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> isTransferImmediateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> lastContactTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte localPercentNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> localStorageLocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> pbxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pbxIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pbxPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pbxUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string primaryDeviceSubnetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> remoteStorageLocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid serviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int serviceTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> smtpPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string smtpServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> startingAudioPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string switchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> transferDaysOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transferDelayDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> transferStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> useSecureSocketField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DataSource LocalDataSource {
            get {
                return this.LocalDataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalDataSourceField, value) != true)) {
                    this.LocalDataSourceField = value;
                    this.RaisePropertyChanged("LocalDataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD LocalDataSourceReference {
            get {
                return this.LocalDataSourceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalDataSourceReferenceField, value) != true)) {
                    this.LocalDataSourceReferenceField = value;
                    this.RaisePropertyChanged("LocalDataSourceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBPbxType PBXType {
            get {
                return this.PBXTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PBXTypeField, value) != true)) {
                    this.PBXTypeField = value;
                    this.RaisePropertyChanged("PBXType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBPbxType1U8vXZAD PBXTypeReference {
            get {
                return this.PBXTypeReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.PBXTypeReferenceField, value) != true)) {
                    this.PBXTypeReferenceField = value;
                    this.RaisePropertyChanged("PBXTypeReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DataSource RemoteDataSource {
            get {
                return this.RemoteDataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteDataSourceField, value) != true)) {
                    this.RemoteDataSourceField = value;
                    this.RaisePropertyChanged("RemoteDataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD RemoteDataSourceReference {
            get {
                return this.RemoteDataSourceReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteDataSourceReferenceField, value) != true)) {
                    this.RemoteDataSourceReferenceField = value;
                    this.RaisePropertyChanged("RemoteDataSourceReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ScnDeletionDays {
            get {
                return this.ScnDeletionDaysField;
            }
            set {
                if ((this.ScnDeletionDaysField.Equals(value) != true)) {
                    this.ScnDeletionDaysField = value;
                    this.RaisePropertyChanged("ScnDeletionDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ScnTotalDataSize {
            get {
                return this.ScnTotalDataSizeField;
            }
            set {
                if ((this.ScnTotalDataSizeField.Equals(value) != true)) {
                    this.ScnTotalDataSizeField = value;
                    this.RaisePropertyChanged("ScnTotalDataSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> ScnUserDataSize {
            get {
                return this.ScnUserDataSizeField;
            }
            set {
                if ((this.ScnUserDataSizeField.Equals(value) != true)) {
                    this.ScnUserDataSizeField = value;
                    this.RaisePropertyChanged("ScnUserDataSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ServiceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfServiceType1U8vXZAD ServiceTypeReference {
            get {
                return this.ServiceTypeReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeReferenceField, value) != true)) {
                    this.ServiceTypeReferenceField = value;
                    this.RaisePropertyChanged("ServiceTypeReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Users1 {
            get {
                return this.Users1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Users1Field, value) != true)) {
                    this.Users1Field = value;
                    this.RaisePropertyChanged("Users1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string alertLanguage {
            get {
                return this.alertLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.alertLanguageField, value) != true)) {
                    this.alertLanguageField = value;
                    this.RaisePropertyChanged("alertLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apiIPAddress {
            get {
                return this.apiIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.apiIPAddressField, value) != true)) {
                    this.apiIPAddressField = value;
                    this.RaisePropertyChanged("apiIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> apiPort {
            get {
                return this.apiPortField;
            }
            set {
                if ((this.apiPortField.Equals(value) != true)) {
                    this.apiPortField = value;
                    this.RaisePropertyChanged("apiPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> callControlServiceId {
            get {
                return this.callControlServiceIdField;
            }
            set {
                if ((this.callControlServiceIdField.Equals(value) != true)) {
                    this.callControlServiceIdField = value;
                    this.RaisePropertyChanged("callControlServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> callConversionServiceId {
            get {
                return this.callConversionServiceIdField;
            }
            set {
                if ((this.callConversionServiceIdField.Equals(value) != true)) {
                    this.callConversionServiceIdField = value;
                    this.RaisePropertyChanged("callConversionServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ctcHostName {
            get {
                return this.ctcHostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ctcHostNameField, value) != true)) {
                    this.ctcHostNameField = value;
                    this.RaisePropertyChanged("ctcHostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailAccount {
            get {
                return this.emailAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.emailAccountField, value) != true)) {
                    this.emailAccountField = value;
                    this.RaisePropertyChanged("emailAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.emailAddressField, value) != true)) {
                    this.emailAddressField = value;
                    this.RaisePropertyChanged("emailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailPassword {
            get {
                return this.emailPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.emailPasswordField, value) != true)) {
                    this.emailPasswordField = value;
                    this.RaisePropertyChanged("emailPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fromEmailAddress {
            get {
                return this.fromEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.fromEmailAddressField, value) != true)) {
                    this.fromEmailAddressField = value;
                    this.RaisePropertyChanged("fromEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hostname {
            get {
                return this.hostnameField;
            }
            set {
                if ((object.ReferenceEquals(this.hostnameField, value) != true)) {
                    this.hostnameField = value;
                    this.RaisePropertyChanged("hostname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ipAddressField, value) != true)) {
                    this.ipAddressField = value;
                    this.RaisePropertyChanged("ipAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isAuthenticationRequired {
            get {
                return this.isAuthenticationRequiredField;
            }
            set {
                if ((this.isAuthenticationRequiredField.Equals(value) != true)) {
                    this.isAuthenticationRequiredField = value;
                    this.RaisePropertyChanged("isAuthenticationRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isEventLogAlertsEnabled {
            get {
                return this.isEventLogAlertsEnabledField;
            }
            set {
                if ((this.isEventLogAlertsEnabledField.Equals(value) != true)) {
                    this.isEventLogAlertsEnabledField = value;
                    this.RaisePropertyChanged("isEventLogAlertsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isSmtpAlertsEnabled {
            get {
                return this.isSmtpAlertsEnabledField;
            }
            set {
                if ((this.isSmtpAlertsEnabledField.Equals(value) != true)) {
                    this.isSmtpAlertsEnabledField = value;
                    this.RaisePropertyChanged("isSmtpAlertsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isTransferFilesEnabled {
            get {
                return this.isTransferFilesEnabledField;
            }
            set {
                if ((this.isTransferFilesEnabledField.Equals(value) != true)) {
                    this.isTransferFilesEnabledField = value;
                    this.RaisePropertyChanged("isTransferFilesEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> isTransferImmediate {
            get {
                return this.isTransferImmediateField;
            }
            set {
                if ((this.isTransferImmediateField.Equals(value) != true)) {
                    this.isTransferImmediateField = value;
                    this.RaisePropertyChanged("isTransferImmediate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> lastContactTime {
            get {
                return this.lastContactTimeField;
            }
            set {
                if ((this.lastContactTimeField.Equals(value) != true)) {
                    this.lastContactTimeField = value;
                    this.RaisePropertyChanged("lastContactTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte localPercentNotify {
            get {
                return this.localPercentNotifyField;
            }
            set {
                if ((this.localPercentNotifyField.Equals(value) != true)) {
                    this.localPercentNotifyField = value;
                    this.RaisePropertyChanged("localPercentNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> localStorageLocID {
            get {
                return this.localStorageLocIDField;
            }
            set {
                if ((this.localStorageLocIDField.Equals(value) != true)) {
                    this.localStorageLocIDField = value;
                    this.RaisePropertyChanged("localStorageLocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> pbxID {
            get {
                return this.pbxIDField;
            }
            set {
                if ((this.pbxIDField.Equals(value) != true)) {
                    this.pbxIDField = value;
                    this.RaisePropertyChanged("pbxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pbxIPAddress {
            get {
                return this.pbxIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.pbxIPAddressField, value) != true)) {
                    this.pbxIPAddressField = value;
                    this.RaisePropertyChanged("pbxIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pbxPassword {
            get {
                return this.pbxPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.pbxPasswordField, value) != true)) {
                    this.pbxPasswordField = value;
                    this.RaisePropertyChanged("pbxPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pbxUserName {
            get {
                return this.pbxUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.pbxUserNameField, value) != true)) {
                    this.pbxUserNameField = value;
                    this.RaisePropertyChanged("pbxUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string primaryDeviceSubnet {
            get {
                return this.primaryDeviceSubnetField;
            }
            set {
                if ((object.ReferenceEquals(this.primaryDeviceSubnetField, value) != true)) {
                    this.primaryDeviceSubnetField = value;
                    this.RaisePropertyChanged("primaryDeviceSubnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> remoteStorageLocID {
            get {
                return this.remoteStorageLocIDField;
            }
            set {
                if ((this.remoteStorageLocIDField.Equals(value) != true)) {
                    this.remoteStorageLocIDField = value;
                    this.RaisePropertyChanged("remoteStorageLocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                if ((this.serviceIDField.Equals(value) != true)) {
                    this.serviceIDField = value;
                    this.RaisePropertyChanged("serviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int serviceTypeID {
            get {
                return this.serviceTypeIDField;
            }
            set {
                if ((this.serviceTypeIDField.Equals(value) != true)) {
                    this.serviceTypeIDField = value;
                    this.RaisePropertyChanged("serviceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> smtpPort {
            get {
                return this.smtpPortField;
            }
            set {
                if ((this.smtpPortField.Equals(value) != true)) {
                    this.smtpPortField = value;
                    this.RaisePropertyChanged("smtpPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string smtpServer {
            get {
                return this.smtpServerField;
            }
            set {
                if ((object.ReferenceEquals(this.smtpServerField, value) != true)) {
                    this.smtpServerField = value;
                    this.RaisePropertyChanged("smtpServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> startingAudioPort {
            get {
                return this.startingAudioPortField;
            }
            set {
                if ((this.startingAudioPortField.Equals(value) != true)) {
                    this.startingAudioPortField = value;
                    this.RaisePropertyChanged("startingAudioPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string switchName {
            get {
                return this.switchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.switchNameField, value) != true)) {
                    this.switchNameField = value;
                    this.RaisePropertyChanged("switchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> transferDaysOfWeek {
            get {
                return this.transferDaysOfWeekField;
            }
            set {
                if ((this.transferDaysOfWeekField.Equals(value) != true)) {
                    this.transferDaysOfWeekField = value;
                    this.RaisePropertyChanged("transferDaysOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transferDelayDays {
            get {
                return this.transferDelayDaysField;
            }
            set {
                if ((this.transferDelayDaysField.Equals(value) != true)) {
                    this.transferDelayDaysField = value;
                    this.RaisePropertyChanged("transferDelayDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> transferStartTime {
            get {
                return this.transferStartTimeField;
            }
            set {
                if ((this.transferStartTimeField.Equals(value) != true)) {
                    this.transferStartTimeField = value;
                    this.RaisePropertyChanged("transferStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> useSecureSocket {
            get {
                return this.useSecureSocketField;
            }
            set {
                if ((this.useSecureSocketField.Equals(value) != true)) {
                    this.useSecureSocketField = value;
                    this.RaisePropertyChanged("useSecureSocket");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBPbxType", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DBPbxType : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBService[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string manufacturerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid pbxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pbxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pbxType1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBService[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string manufacturerName {
            get {
                return this.manufacturerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.manufacturerNameField, value) != true)) {
                    this.manufacturerNameField = value;
                    this.RaisePropertyChanged("manufacturerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid pbxID {
            get {
                return this.pbxIDField;
            }
            set {
                if ((this.pbxIDField.Equals(value) != true)) {
                    this.pbxIDField = value;
                    this.RaisePropertyChanged("pbxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pbxName {
            get {
                return this.pbxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.pbxNameField, value) != true)) {
                    this.pbxNameField = value;
                    this.RaisePropertyChanged("pbxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pbxType1 {
            get {
                return this.pbxType1Field;
            }
            set {
                if ((this.pbxType1Field.Equals(value) != true)) {
                    this.pbxType1Field = value;
                    this.RaisePropertyChanged("pbxType1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ServiceType : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBService[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string serviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int serviceTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBService[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceName {
            get {
                return this.serviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceNameField, value) != true)) {
                    this.serviceNameField = value;
                    this.RaisePropertyChanged("serviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int serviceTypeID {
            get {
                return this.serviceTypeIDField;
            }
            set {
                if ((this.serviceTypeIDField.Equals(value) != true)) {
                    this.serviceTypeIDField = value;
                    this.RaisePropertyChanged("serviceTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBEncryptionKey", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DBEncryptionKey : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog[] CallLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid encryptionKeyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isRevokedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string keyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> revokeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog[] CallLogs {
            get {
                return this.CallLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogsField, value) != true)) {
                    this.CallLogsField = value;
                    this.RaisePropertyChanged("CallLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecording[] ScreenRecordings {
            get {
                return this.ScreenRecordingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingsField, value) != true)) {
                    this.ScreenRecordingsField = value;
                    this.RaisePropertyChanged("ScreenRecordings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid encryptionKeyID {
            get {
                return this.encryptionKeyIDField;
            }
            set {
                if ((this.encryptionKeyIDField.Equals(value) != true)) {
                    this.encryptionKeyIDField = value;
                    this.RaisePropertyChanged("encryptionKeyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRevoked {
            get {
                return this.isRevokedField;
            }
            set {
                if ((this.isRevokedField.Equals(value) != true)) {
                    this.isRevokedField = value;
                    this.RaisePropertyChanged("isRevoked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> revokeTime {
            get {
                return this.revokeTimeField;
            }
            set {
                if ((this.revokeTimeField.Equals(value) != true)) {
                    this.revokeTimeField = value;
                    this.RaisePropertyChanged("revokeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenRecordingFlagData", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ScreenRecordingFlagData : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecording ScreenRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD ScreenRecordingReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid flagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flagValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid screenRecordingFlagDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid screenRecordingIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecording ScreenRecording {
            get {
                return this.ScreenRecordingField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingField, value) != true)) {
                    this.ScreenRecordingField = value;
                    this.RaisePropertyChanged("ScreenRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD ScreenRecordingReference {
            get {
                return this.ScreenRecordingReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingReferenceField, value) != true)) {
                    this.ScreenRecordingReferenceField = value;
                    this.RaisePropertyChanged("ScreenRecordingReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid flagID {
            get {
                return this.flagIDField;
            }
            set {
                if ((this.flagIDField.Equals(value) != true)) {
                    this.flagIDField = value;
                    this.RaisePropertyChanged("flagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flagValue {
            get {
                return this.flagValueField;
            }
            set {
                if ((object.ReferenceEquals(this.flagValueField, value) != true)) {
                    this.flagValueField = value;
                    this.RaisePropertyChanged("flagValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid screenRecordingFlagDataID {
            get {
                return this.screenRecordingFlagDataIDField;
            }
            set {
                if ((this.screenRecordingFlagDataIDField.Equals(value) != true)) {
                    this.screenRecordingFlagDataIDField = value;
                    this.RaisePropertyChanged("screenRecordingFlagDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid screenRecordingID {
            get {
                return this.screenRecordingIDField;
            }
            set {
                if ((this.screenRecordingIDField.Equals(value) != true)) {
                    this.screenRecordingIDField = value;
                    this.RaisePropertyChanged("screenRecordingID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallLogFlagData", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CallLogFlagData : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.CallLog CallLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid callLogFlagDataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid callLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid flagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flagValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.CallLog CallLog {
            get {
                return this.CallLogField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogField, value) != true)) {
                    this.CallLogField = value;
                    this.RaisePropertyChanged("CallLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD CallLogReference {
            get {
                return this.CallLogReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLogReferenceField, value) != true)) {
                    this.CallLogReferenceField = value;
                    this.RaisePropertyChanged("CallLogReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid callLogFlagDataID {
            get {
                return this.callLogFlagDataIDField;
            }
            set {
                if ((this.callLogFlagDataIDField.Equals(value) != true)) {
                    this.callLogFlagDataIDField = value;
                    this.RaisePropertyChanged("callLogFlagDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid callLogID {
            get {
                return this.callLogIDField;
            }
            set {
                if ((this.callLogIDField.Equals(value) != true)) {
                    this.callLogIDField = value;
                    this.RaisePropertyChanged("callLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid flagID {
            get {
                return this.flagIDField;
            }
            set {
                if ((this.flagIDField.Equals(value) != true)) {
                    this.flagIDField = value;
                    this.RaisePropertyChanged("flagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flagValue {
            get {
                return this.flagValueField;
            }
            set {
                if ((object.ReferenceEquals(this.flagValueField, value) != true)) {
                    this.flagValueField = value;
                    this.RaisePropertyChanged("flagValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlagFieldName", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class FlagFieldName : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flagFieldName1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid flagFieldNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isPreDefinedFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ownerUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flagFieldName1 {
            get {
                return this.flagFieldName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.flagFieldName1Field, value) != true)) {
                    this.flagFieldName1Field = value;
                    this.RaisePropertyChanged("flagFieldName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid flagFieldNameID {
            get {
                return this.flagFieldNameIDField;
            }
            set {
                if ((this.flagFieldNameIDField.Equals(value) != true)) {
                    this.flagFieldNameIDField = value;
                    this.RaisePropertyChanged("flagFieldNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isPreDefinedFlag {
            get {
                return this.isPreDefinedFlagField;
            }
            set {
                if ((this.isPreDefinedFlagField.Equals(value) != true)) {
                    this.isPreDefinedFlagField = value;
                    this.RaisePropertyChanged("isPreDefinedFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSystem {
            get {
                return this.isSystemField;
            }
            set {
                if ((this.isSystemField.Equals(value) != true)) {
                    this.isSystemField = value;
                    this.RaisePropertyChanged("isSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isVisible {
            get {
                return this.isVisibleField;
            }
            set {
                if ((this.isVisibleField.Equals(value) != true)) {
                    this.isVisibleField = value;
                    this.RaisePropertyChanged("isVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ownerUserID {
            get {
                return this.ownerUserIDField;
            }
            set {
                if ((this.ownerUserIDField.Equals(value) != true)) {
                    this.ownerUserIDField = value;
                    this.RaisePropertyChanged("ownerUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int typeId {
            get {
                return this.typeIdField;
            }
            set {
                if ((this.typeIdField.Equals(value) != true)) {
                    this.typeIdField = value;
                    this.RaisePropertyChanged("typeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntelRexDeployment", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class IntelRexDeployment : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> MMServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MonitoringPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> deploymentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid intelrexDeploymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ipAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> lastCommunicationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string machineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string machinePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string machineUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string serviceVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> MMServiceID {
            get {
                return this.MMServiceIDField;
            }
            set {
                if ((this.MMServiceIDField.Equals(value) != true)) {
                    this.MMServiceIDField = value;
                    this.RaisePropertyChanged("MMServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonitoringPassword {
            get {
                return this.MonitoringPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.MonitoringPasswordField, value) != true)) {
                    this.MonitoringPasswordField = value;
                    this.RaisePropertyChanged("MonitoringPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> deploymentTime {
            get {
                return this.deploymentTimeField;
            }
            set {
                if ((this.deploymentTimeField.Equals(value) != true)) {
                    this.deploymentTimeField = value;
                    this.RaisePropertyChanged("deploymentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid intelrexDeploymentID {
            get {
                return this.intelrexDeploymentIDField;
            }
            set {
                if ((this.intelrexDeploymentIDField.Equals(value) != true)) {
                    this.intelrexDeploymentIDField = value;
                    this.RaisePropertyChanged("intelrexDeploymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ipAddress {
            get {
                return this.ipAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ipAddressField, value) != true)) {
                    this.ipAddressField = value;
                    this.RaisePropertyChanged("ipAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> lastCommunicationTime {
            get {
                return this.lastCommunicationTimeField;
            }
            set {
                if ((this.lastCommunicationTimeField.Equals(value) != true)) {
                    this.lastCommunicationTimeField = value;
                    this.RaisePropertyChanged("lastCommunicationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string machineName {
            get {
                return this.machineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.machineNameField, value) != true)) {
                    this.machineNameField = value;
                    this.RaisePropertyChanged("machineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string machinePassword {
            get {
                return this.machinePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.machinePasswordField, value) != true)) {
                    this.machinePasswordField = value;
                    this.RaisePropertyChanged("machinePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string machineUsername {
            get {
                return this.machineUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.machineUsernameField, value) != true)) {
                    this.machineUsernameField = value;
                    this.RaisePropertyChanged("machineUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serviceVersion {
            get {
                return this.serviceVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.serviceVersionField, value) != true)) {
                    this.serviceVersionField = value;
                    this.RaisePropertyChanged("serviceVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserManagedDepartment", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class UserManagedDepartment : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string departmentName {
            get {
                return this.departmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentNameField, value) != true)) {
                    this.departmentNameField = value;
                    this.RaisePropertyChanged("departmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserManagedLocation", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class UserManagedLocation : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBSavedSearch", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class DBSavedSearch : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNISField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte callDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string callerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> flagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string flagValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lastDaysCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maxCallDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte mediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int minCallDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string outboundNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime savedSearchDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid savedSearchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string savedSearchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid savedSearchOwnerUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime stopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte timeSearchTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNIS {
            get {
                return this.DNISField;
            }
            set {
                if ((object.ReferenceEquals(this.DNISField, value) != true)) {
                    this.DNISField = value;
                    this.RaisePropertyChanged("DNIS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte callDirection {
            get {
                return this.callDirectionField;
            }
            set {
                if ((this.callDirectionField.Equals(value) != true)) {
                    this.callDirectionField = value;
                    this.RaisePropertyChanged("callDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string callerID {
            get {
                return this.callerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.callerIDField, value) != true)) {
                    this.callerIDField = value;
                    this.RaisePropertyChanged("callerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> flagID {
            get {
                return this.flagIDField;
            }
            set {
                if ((this.flagIDField.Equals(value) != true)) {
                    this.flagIDField = value;
                    this.RaisePropertyChanged("flagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flagValue {
            get {
                return this.flagValueField;
            }
            set {
                if ((object.ReferenceEquals(this.flagValueField, value) != true)) {
                    this.flagValueField = value;
                    this.RaisePropertyChanged("flagValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lastDaysCount {
            get {
                return this.lastDaysCountField;
            }
            set {
                if ((this.lastDaysCountField.Equals(value) != true)) {
                    this.lastDaysCountField = value;
                    this.RaisePropertyChanged("lastDaysCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int maxCallDuration {
            get {
                return this.maxCallDurationField;
            }
            set {
                if ((this.maxCallDurationField.Equals(value) != true)) {
                    this.maxCallDurationField = value;
                    this.RaisePropertyChanged("maxCallDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte mediaType {
            get {
                return this.mediaTypeField;
            }
            set {
                if ((this.mediaTypeField.Equals(value) != true)) {
                    this.mediaTypeField = value;
                    this.RaisePropertyChanged("mediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int minCallDuration {
            get {
                return this.minCallDurationField;
            }
            set {
                if ((this.minCallDurationField.Equals(value) != true)) {
                    this.minCallDurationField = value;
                    this.RaisePropertyChanged("minCallDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string outboundNumber {
            get {
                return this.outboundNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.outboundNumberField, value) != true)) {
                    this.outboundNumberField = value;
                    this.RaisePropertyChanged("outboundNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime savedSearchDate {
            get {
                return this.savedSearchDateField;
            }
            set {
                if ((this.savedSearchDateField.Equals(value) != true)) {
                    this.savedSearchDateField = value;
                    this.RaisePropertyChanged("savedSearchDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid savedSearchID {
            get {
                return this.savedSearchIDField;
            }
            set {
                if ((this.savedSearchIDField.Equals(value) != true)) {
                    this.savedSearchIDField = value;
                    this.RaisePropertyChanged("savedSearchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string savedSearchName {
            get {
                return this.savedSearchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.savedSearchNameField, value) != true)) {
                    this.savedSearchNameField = value;
                    this.RaisePropertyChanged("savedSearchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid savedSearchOwnerUserID {
            get {
                return this.savedSearchOwnerUserIDField;
            }
            set {
                if ((this.savedSearchOwnerUserIDField.Equals(value) != true)) {
                    this.savedSearchOwnerUserIDField = value;
                    this.RaisePropertyChanged("savedSearchOwnerUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime stopTime {
            get {
                return this.stopTimeField;
            }
            set {
                if ((this.stopTimeField.Equals(value) != true)) {
                    this.stopTimeField = value;
                    this.RaisePropertyChanged("stopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte timeSearchType {
            get {
                return this.timeSearchTypeField;
            }
            set {
                if ((this.timeSearchTypeField.Equals(value) != true)) {
                    this.timeSearchTypeField = value;
                    this.RaisePropertyChanged("timeSearchType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenRecordingProfile", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ScreenRecordingProfile : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] MembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD OwnerReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecordingApplication[] ScreenRecordingApplications1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string appNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short colorOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte diskUsageMinimumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short fileRetentionDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int framesPerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> mainMonitorOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short maximumUploadKbpsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> monitorFullScreenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string profileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid profileOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> scheduleStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> scheduleStopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid screenRecordingProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short wrapUpTimeSecondsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD OwnerReference {
            get {
                return this.OwnerReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerReferenceField, value) != true)) {
                    this.OwnerReferenceField = value;
                    this.RaisePropertyChanged("OwnerReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecordingApplication[] ScreenRecordingApplications1 {
            get {
                return this.ScreenRecordingApplications1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingApplications1Field, value) != true)) {
                    this.ScreenRecordingApplications1Field = value;
                    this.RaisePropertyChanged("ScreenRecordingApplications1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string appNames {
            get {
                return this.appNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.appNamesField, value) != true)) {
                    this.appNamesField = value;
                    this.RaisePropertyChanged("appNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short colorOption {
            get {
                return this.colorOptionField;
            }
            set {
                if ((this.colorOptionField.Equals(value) != true)) {
                    this.colorOptionField = value;
                    this.RaisePropertyChanged("colorOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte diskUsageMinimum {
            get {
                return this.diskUsageMinimumField;
            }
            set {
                if ((this.diskUsageMinimumField.Equals(value) != true)) {
                    this.diskUsageMinimumField = value;
                    this.RaisePropertyChanged("diskUsageMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short fileRetentionDays {
            get {
                return this.fileRetentionDaysField;
            }
            set {
                if ((this.fileRetentionDaysField.Equals(value) != true)) {
                    this.fileRetentionDaysField = value;
                    this.RaisePropertyChanged("fileRetentionDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int framesPerHour {
            get {
                return this.framesPerHourField;
            }
            set {
                if ((this.framesPerHourField.Equals(value) != true)) {
                    this.framesPerHourField = value;
                    this.RaisePropertyChanged("framesPerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                if ((this.isDefaultField.Equals(value) != true)) {
                    this.isDefaultField = value;
                    this.RaisePropertyChanged("isDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> mainMonitorOnly {
            get {
                return this.mainMonitorOnlyField;
            }
            set {
                if ((this.mainMonitorOnlyField.Equals(value) != true)) {
                    this.mainMonitorOnlyField = value;
                    this.RaisePropertyChanged("mainMonitorOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short maximumUploadKbps {
            get {
                return this.maximumUploadKbpsField;
            }
            set {
                if ((this.maximumUploadKbpsField.Equals(value) != true)) {
                    this.maximumUploadKbpsField = value;
                    this.RaisePropertyChanged("maximumUploadKbps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> monitorFullScreen {
            get {
                return this.monitorFullScreenField;
            }
            set {
                if ((this.monitorFullScreenField.Equals(value) != true)) {
                    this.monitorFullScreenField = value;
                    this.RaisePropertyChanged("monitorFullScreen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string profileName {
            get {
                return this.profileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.profileNameField, value) != true)) {
                    this.profileNameField = value;
                    this.RaisePropertyChanged("profileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid profileOwner {
            get {
                return this.profileOwnerField;
            }
            set {
                if ((this.profileOwnerField.Equals(value) != true)) {
                    this.profileOwnerField = value;
                    this.RaisePropertyChanged("profileOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> scheduleStartTime {
            get {
                return this.scheduleStartTimeField;
            }
            set {
                if ((this.scheduleStartTimeField.Equals(value) != true)) {
                    this.scheduleStartTimeField = value;
                    this.RaisePropertyChanged("scheduleStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> scheduleStopTime {
            get {
                return this.scheduleStopTimeField;
            }
            set {
                if ((this.scheduleStopTimeField.Equals(value) != true)) {
                    this.scheduleStopTimeField = value;
                    this.RaisePropertyChanged("scheduleStopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid screenRecordingProfileID {
            get {
                return this.screenRecordingProfileIDField;
            }
            set {
                if ((this.screenRecordingProfileIDField.Equals(value) != true)) {
                    this.screenRecordingProfileIDField = value;
                    this.RaisePropertyChanged("screenRecordingProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short wrapUpTimeSeconds {
            get {
                return this.wrapUpTimeSecondsField;
            }
            set {
                if ((this.wrapUpTimeSecondsField.Equals(value) != true)) {
                    this.wrapUpTimeSecondsField = value;
                    this.RaisePropertyChanged("wrapUpTimeSeconds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenRecordingApplication", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ScreenRecordingApplication : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScreenRecordingApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile ScreenRecordingProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ScreenRecordingProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecordingProfile1U8vXZAD ScreenRecordingProfileReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExeName {
            get {
                return this.ExeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExeNameField, value) != true)) {
                    this.ExeNameField = value;
                    this.RaisePropertyChanged("ExeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScreenRecordingApplicationId {
            get {
                return this.ScreenRecordingApplicationIdField;
            }
            set {
                if ((this.ScreenRecordingApplicationIdField.Equals(value) != true)) {
                    this.ScreenRecordingApplicationIdField = value;
                    this.RaisePropertyChanged("ScreenRecordingApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile ScreenRecordingProfile {
            get {
                return this.ScreenRecordingProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingProfileField, value) != true)) {
                    this.ScreenRecordingProfileField = value;
                    this.RaisePropertyChanged("ScreenRecordingProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ScreenRecordingProfileId {
            get {
                return this.ScreenRecordingProfileIdField;
            }
            set {
                if ((this.ScreenRecordingProfileIdField.Equals(value) != true)) {
                    this.ScreenRecordingProfileIdField = value;
                    this.RaisePropertyChanged("ScreenRecordingProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecordingProfile1U8vXZAD ScreenRecordingProfileReference {
            get {
                return this.ScreenRecordingProfileReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenRecordingProfileReferenceField, value) != true)) {
                    this.ScreenRecordingProfileReferenceField = value;
                    this.RaisePropertyChanged("ScreenRecordingProfileReference");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Security", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Security : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser MembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD MembersReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser[] UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlAddEditUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlChangeSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlDeleteUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlExportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlMonitorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlPauseSystemRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlPlaybackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isControlRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isCreateEvaluationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isCreateScorecardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isDeletableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isDeleteEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isEnabledEmailRecordingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isProfileAdminAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isProfileEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isReportingAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isReportingAdminAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isReportingDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isReportingEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isReportingViewPreDefinedReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isSearchAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isSearchInactiveUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isSearchRecordedByTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewIMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewKeystrokeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewRemoteViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewReportingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewScreenShotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte isViewWebField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ownerUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid securityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string securityNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD MembersReference {
            get {
                return this.MembersReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersReferenceField, value) != true)) {
                    this.MembersReferenceField = value;
                    this.RaisePropertyChanged("MembersReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlAddEditUsers {
            get {
                return this.isControlAddEditUsersField;
            }
            set {
                if ((this.isControlAddEditUsersField.Equals(value) != true)) {
                    this.isControlAddEditUsersField = value;
                    this.RaisePropertyChanged("isControlAddEditUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlChangeSystem {
            get {
                return this.isControlChangeSystemField;
            }
            set {
                if ((this.isControlChangeSystemField.Equals(value) != true)) {
                    this.isControlChangeSystemField = value;
                    this.RaisePropertyChanged("isControlChangeSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlDelete {
            get {
                return this.isControlDeleteField;
            }
            set {
                if ((this.isControlDeleteField.Equals(value) != true)) {
                    this.isControlDeleteField = value;
                    this.RaisePropertyChanged("isControlDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlDeleteUsers {
            get {
                return this.isControlDeleteUsersField;
            }
            set {
                if ((this.isControlDeleteUsersField.Equals(value) != true)) {
                    this.isControlDeleteUsersField = value;
                    this.RaisePropertyChanged("isControlDeleteUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlExport {
            get {
                return this.isControlExportField;
            }
            set {
                if ((this.isControlExportField.Equals(value) != true)) {
                    this.isControlExportField = value;
                    this.RaisePropertyChanged("isControlExport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlFlag {
            get {
                return this.isControlFlagField;
            }
            set {
                if ((this.isControlFlagField.Equals(value) != true)) {
                    this.isControlFlagField = value;
                    this.RaisePropertyChanged("isControlFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlMonitor {
            get {
                return this.isControlMonitorField;
            }
            set {
                if ((this.isControlMonitorField.Equals(value) != true)) {
                    this.isControlMonitorField = value;
                    this.RaisePropertyChanged("isControlMonitor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlPauseSystemRecording {
            get {
                return this.isControlPauseSystemRecordingField;
            }
            set {
                if ((this.isControlPauseSystemRecordingField.Equals(value) != true)) {
                    this.isControlPauseSystemRecordingField = value;
                    this.RaisePropertyChanged("isControlPauseSystemRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlPlayback {
            get {
                return this.isControlPlaybackField;
            }
            set {
                if ((this.isControlPlaybackField.Equals(value) != true)) {
                    this.isControlPlaybackField = value;
                    this.RaisePropertyChanged("isControlPlayback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isControlRecord {
            get {
                return this.isControlRecordField;
            }
            set {
                if ((this.isControlRecordField.Equals(value) != true)) {
                    this.isControlRecordField = value;
                    this.RaisePropertyChanged("isControlRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isCreateEvaluation {
            get {
                return this.isCreateEvaluationField;
            }
            set {
                if ((this.isCreateEvaluationField.Equals(value) != true)) {
                    this.isCreateEvaluationField = value;
                    this.RaisePropertyChanged("isCreateEvaluation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isCreateScorecard {
            get {
                return this.isCreateScorecardField;
            }
            set {
                if ((this.isCreateScorecardField.Equals(value) != true)) {
                    this.isCreateScorecardField = value;
                    this.RaisePropertyChanged("isCreateScorecard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isDeletable {
            get {
                return this.isDeletableField;
            }
            set {
                if ((this.isDeletableField.Equals(value) != true)) {
                    this.isDeletableField = value;
                    this.RaisePropertyChanged("isDeletable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isDeleteEvents {
            get {
                return this.isDeleteEventsField;
            }
            set {
                if ((this.isDeleteEventsField.Equals(value) != true)) {
                    this.isDeleteEventsField = value;
                    this.RaisePropertyChanged("isDeleteEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isEnabledEmailRecording {
            get {
                return this.isEnabledEmailRecordingField;
            }
            set {
                if ((this.isEnabledEmailRecordingField.Equals(value) != true)) {
                    this.isEnabledEmailRecordingField = value;
                    this.RaisePropertyChanged("isEnabledEmailRecording");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isProfileAdminAll {
            get {
                return this.isProfileAdminAllField;
            }
            set {
                if ((this.isProfileAdminAllField.Equals(value) != true)) {
                    this.isProfileAdminAllField = value;
                    this.RaisePropertyChanged("isProfileAdminAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isProfileEdit {
            get {
                return this.isProfileEditField;
            }
            set {
                if ((this.isProfileEditField.Equals(value) != true)) {
                    this.isProfileEditField = value;
                    this.RaisePropertyChanged("isProfileEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isReportingAdd {
            get {
                return this.isReportingAddField;
            }
            set {
                if ((this.isReportingAddField.Equals(value) != true)) {
                    this.isReportingAddField = value;
                    this.RaisePropertyChanged("isReportingAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isReportingAdminAll {
            get {
                return this.isReportingAdminAllField;
            }
            set {
                if ((this.isReportingAdminAllField.Equals(value) != true)) {
                    this.isReportingAdminAllField = value;
                    this.RaisePropertyChanged("isReportingAdminAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isReportingDelete {
            get {
                return this.isReportingDeleteField;
            }
            set {
                if ((this.isReportingDeleteField.Equals(value) != true)) {
                    this.isReportingDeleteField = value;
                    this.RaisePropertyChanged("isReportingDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isReportingEdit {
            get {
                return this.isReportingEditField;
            }
            set {
                if ((this.isReportingEditField.Equals(value) != true)) {
                    this.isReportingEditField = value;
                    this.RaisePropertyChanged("isReportingEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isReportingViewPreDefinedReports {
            get {
                return this.isReportingViewPreDefinedReportsField;
            }
            set {
                if ((this.isReportingViewPreDefinedReportsField.Equals(value) != true)) {
                    this.isReportingViewPreDefinedReportsField = value;
                    this.RaisePropertyChanged("isReportingViewPreDefinedReports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isSearchAll {
            get {
                return this.isSearchAllField;
            }
            set {
                if ((this.isSearchAllField.Equals(value) != true)) {
                    this.isSearchAllField = value;
                    this.RaisePropertyChanged("isSearchAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isSearchInactiveUsers {
            get {
                return this.isSearchInactiveUsersField;
            }
            set {
                if ((this.isSearchInactiveUsersField.Equals(value) != true)) {
                    this.isSearchInactiveUsersField = value;
                    this.RaisePropertyChanged("isSearchInactiveUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isSearchRecordedByTrigger {
            get {
                return this.isSearchRecordedByTriggerField;
            }
            set {
                if ((this.isSearchRecordedByTriggerField.Equals(value) != true)) {
                    this.isSearchRecordedByTriggerField = value;
                    this.RaisePropertyChanged("isSearchRecordedByTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewApplication {
            get {
                return this.isViewApplicationField;
            }
            set {
                if ((this.isViewApplicationField.Equals(value) != true)) {
                    this.isViewApplicationField = value;
                    this.RaisePropertyChanged("isViewApplication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewEmail {
            get {
                return this.isViewEmailField;
            }
            set {
                if ((this.isViewEmailField.Equals(value) != true)) {
                    this.isViewEmailField = value;
                    this.RaisePropertyChanged("isViewEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewEvents {
            get {
                return this.isViewEventsField;
            }
            set {
                if ((this.isViewEventsField.Equals(value) != true)) {
                    this.isViewEventsField = value;
                    this.RaisePropertyChanged("isViewEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewIM {
            get {
                return this.isViewIMField;
            }
            set {
                if ((this.isViewIMField.Equals(value) != true)) {
                    this.isViewIMField = value;
                    this.RaisePropertyChanged("isViewIM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewKeystroke {
            get {
                return this.isViewKeystrokeField;
            }
            set {
                if ((this.isViewKeystrokeField.Equals(value) != true)) {
                    this.isViewKeystrokeField = value;
                    this.RaisePropertyChanged("isViewKeystroke");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewPhone {
            get {
                return this.isViewPhoneField;
            }
            set {
                if ((this.isViewPhoneField.Equals(value) != true)) {
                    this.isViewPhoneField = value;
                    this.RaisePropertyChanged("isViewPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewRemoteView {
            get {
                return this.isViewRemoteViewField;
            }
            set {
                if ((this.isViewRemoteViewField.Equals(value) != true)) {
                    this.isViewRemoteViewField = value;
                    this.RaisePropertyChanged("isViewRemoteView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewReporting {
            get {
                return this.isViewReportingField;
            }
            set {
                if ((this.isViewReportingField.Equals(value) != true)) {
                    this.isViewReportingField = value;
                    this.RaisePropertyChanged("isViewReporting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewScreenShot {
            get {
                return this.isViewScreenShotField;
            }
            set {
                if ((this.isViewScreenShotField.Equals(value) != true)) {
                    this.isViewScreenShotField = value;
                    this.RaisePropertyChanged("isViewScreenShot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte isViewWeb {
            get {
                return this.isViewWebField;
            }
            set {
                if ((this.isViewWebField.Equals(value) != true)) {
                    this.isViewWebField = value;
                    this.RaisePropertyChanged("isViewWeb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ownerUserID {
            get {
                return this.ownerUserIDField;
            }
            set {
                if ((this.ownerUserIDField.Equals(value) != true)) {
                    this.ownerUserIDField = value;
                    this.RaisePropertyChanged("ownerUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid securityID {
            get {
                return this.securityIDField;
            }
            set {
                if ((this.securityIDField.Equals(value) != true)) {
                    this.securityIDField = value;
                    this.RaisePropertyChanged("securityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string securityName {
            get {
                return this.securityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.securityNameField, value) != true)) {
                    this.securityNameField = value;
                    this.RaisePropertyChanged("securityName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPreference", Namespace="http://schemas.datacontract.org/2004/07/DataService", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class UserPreference : CallRex.UnderWriting.CallRexClientService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.DBUser UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> intValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isIntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isStringValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string preferenceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stringValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid userPreferenceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.DBUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD UserReference {
            get {
                return this.UserReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.UserReferenceField, value) != true)) {
                    this.UserReferenceField = value;
                    this.RaisePropertyChanged("UserReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> intValue {
            get {
                return this.intValueField;
            }
            set {
                if ((this.intValueField.Equals(value) != true)) {
                    this.intValueField = value;
                    this.RaisePropertyChanged("intValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isIntValue {
            get {
                return this.isIntValueField;
            }
            set {
                if ((this.isIntValueField.Equals(value) != true)) {
                    this.isIntValueField = value;
                    this.RaisePropertyChanged("isIntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isStringValue {
            get {
                return this.isStringValueField;
            }
            set {
                if ((this.isStringValueField.Equals(value) != true)) {
                    this.isStringValueField = value;
                    this.RaisePropertyChanged("isStringValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string preferenceName {
            get {
                return this.preferenceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.preferenceNameField, value) != true)) {
                    this.preferenceNameField = value;
                    this.RaisePropertyChanged("preferenceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stringValue {
            get {
                return this.stringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.stringValueField, value) != true)) {
                    this.stringValueField = value;
                    this.RaisePropertyChanged("stringValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid userPreferenceID {
            get {
                return this.userPreferenceIDField;
            }
            set {
                if ((this.userPreferenceIDField.Equals(value) != true)) {
                    this.userPreferenceIDField = value;
                    this.RaisePropertyChanged("userPreferenceID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EntityKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityContainerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityKeyMember[] EntityKeyValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntitySetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityKeyMember[] EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfDBRecordingProfile1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfDBRecordingProfile1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileRuleDirectiveTypes", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ProfileRuleDirectiveTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Record = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoNotRecord = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileRuleRelationTypes", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    public enum ProfileRuleRelationTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Equal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEqual = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RegexMatch = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.GeneralSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AuditSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EmailSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RetentionSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.VolumeFactor[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.VolumeFactor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.LicenseInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.LicenseInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.LicenseType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FileTransferReason))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FileTransferInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.XferFileType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordingFlagValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordingFlagValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordedMediaType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EndpointNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordingIsArchivedFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidDataSourceFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EncryptionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AccessDeniedFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidLoginFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserLicenseRequiredFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ServiceListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ServiceListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.PbxListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.PbxListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AuditLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AuditLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AuditActionType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AuditActionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AuditAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AuditTargetType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserDetails[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.GuidPair))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.GuidPair[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ComputerRecordingDeployment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ComputerRecordingDeployment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ActiveDirectoryNodeTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveDataSizeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveTarget))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DataSourceListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DataSourceListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RemoteDataSourceCreationItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationSummary[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionListNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationQuestion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationQuestionBookmark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationQuestionBookmark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EvaluationQuestionScore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Scorecard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CategoryScorecardTreeNode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Scorecard[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SearchDateSpecificationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DateGroupType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallCountGroupType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallCountSortType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallCount[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallCount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateExtensionFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidOrBlankExtensionFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateSipUriFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateUsernameFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.LicenseViolationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateDeviceAddressFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidUserIdFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CantDeleteUserLoggedInAsFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.MemberListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.MemberListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Flag[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Flag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FlagValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FlagValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserMonitorInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SavedSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SavedSearch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordedMediaType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SavedReport[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SavedReport))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ReportScheduleDateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Report[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Report))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SecurityProfileListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.SecurityProfileListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileNotDeletableFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileInUseFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileRuleDirectiveTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBRecordingProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedCall[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Evaluation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionScore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_EvaluationQuestionBookmark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Scorecard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Evaluation[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_Scorecard[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestionCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_ScorecardQuestion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_XRefEvaluationScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AE_BlockedScreenRecording))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ArchiveSourceLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Archive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLog[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecording[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBService[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBPbxType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ServiceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBEncryptionKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingFlagData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingFlagData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLogFlagData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CallLogFlagData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FlagFieldName[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.FlagFieldName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBRecordingProfile[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.IntelRexDeployment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedDepartment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedDepartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedLocation[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserManagedLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBSavedSearch[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DBSavedSearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingApplication[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingApplication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Security[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.Security))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserPreference[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserPreference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileRuleRelationTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileListItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ServiceSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Guid[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_EvaluationQuestionScore1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_XRefEvaluationCall1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardCategory1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Scorecard1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestionCategory1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestion1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfArchive1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBPbxType1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfServiceType1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBEncryptionKey1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfIntelRexDeployment1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecordingProfile1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfSecurity1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBService1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBRecordingProfile1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityKeyMember[]))]
    public partial class EntityKeyMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenRecordingProfileListItem", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ScreenRecordingProfileListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string appNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool mainMonitorOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool monitorFullScreenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultState {
            get {
                return this.DefaultStateField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultStateField, value) != true)) {
                    this.DefaultStateField = value;
                    this.RaisePropertyChanged("DefaultState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberCount {
            get {
                return this.MemberCountField;
            }
            set {
                if ((this.MemberCountField.Equals(value) != true)) {
                    this.MemberCountField = value;
                    this.RaisePropertyChanged("MemberCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string appNames {
            get {
                return this.appNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.appNamesField, value) != true)) {
                    this.appNamesField = value;
                    this.RaisePropertyChanged("appNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool mainMonitorOnly {
            get {
                return this.mainMonitorOnlyField;
            }
            set {
                if ((this.mainMonitorOnlyField.Equals(value) != true)) {
                    this.mainMonitorOnlyField = value;
                    this.RaisePropertyChanged("mainMonitorOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool monitorFullScreen {
            get {
                return this.monitorFullScreenField;
            }
            set {
                if ((this.monitorFullScreenField.Equals(value) != true)) {
                    this.monitorFullScreenField = value;
                    this.RaisePropertyChanged("monitorFullScreen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenRecordingProfileDetails", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ScreenRecordingProfileDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DiskUsageMinimumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileRetentionDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FramesPerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumUploadKbpsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MemberExtensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScreenRecordBetweenCallsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StopTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WrapUpTimeSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string appNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool mainMonitorOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool monitorFullScreenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorOption {
            get {
                return this.ColorOptionField;
            }
            set {
                if ((this.ColorOptionField.Equals(value) != true)) {
                    this.ColorOptionField = value;
                    this.RaisePropertyChanged("ColorOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DiskUsageMinimum {
            get {
                return this.DiskUsageMinimumField;
            }
            set {
                if ((this.DiskUsageMinimumField.Equals(value) != true)) {
                    this.DiskUsageMinimumField = value;
                    this.RaisePropertyChanged("DiskUsageMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileRetentionDays {
            get {
                return this.FileRetentionDaysField;
            }
            set {
                if ((this.FileRetentionDaysField.Equals(value) != true)) {
                    this.FileRetentionDaysField = value;
                    this.RaisePropertyChanged("FileRetentionDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FramesPerHour {
            get {
                return this.FramesPerHourField;
            }
            set {
                if ((this.FramesPerHourField.Equals(value) != true)) {
                    this.FramesPerHourField = value;
                    this.RaisePropertyChanged("FramesPerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumUploadKbps {
            get {
                return this.MaximumUploadKbpsField;
            }
            set {
                if ((this.MaximumUploadKbpsField.Equals(value) != true)) {
                    this.MaximumUploadKbpsField = value;
                    this.RaisePropertyChanged("MaximumUploadKbps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MemberExtensions {
            get {
                return this.MemberExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberExtensionsField, value) != true)) {
                    this.MemberExtensionsField = value;
                    this.RaisePropertyChanged("MemberExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProfileId {
            get {
                return this.ProfileIdField;
            }
            set {
                if ((this.ProfileIdField.Equals(value) != true)) {
                    this.ProfileIdField = value;
                    this.RaisePropertyChanged("ProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ScreenRecordBetweenCalls {
            get {
                return this.ScreenRecordBetweenCallsField;
            }
            set {
                if ((this.ScreenRecordBetweenCallsField.Equals(value) != true)) {
                    this.ScreenRecordBetweenCallsField = value;
                    this.RaisePropertyChanged("ScreenRecordBetweenCalls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StopTime {
            get {
                return this.StopTimeField;
            }
            set {
                if ((this.StopTimeField.Equals(value) != true)) {
                    this.StopTimeField = value;
                    this.RaisePropertyChanged("StopTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WrapUpTimeSeconds {
            get {
                return this.WrapUpTimeSecondsField;
            }
            set {
                if ((this.WrapUpTimeSecondsField.Equals(value) != true)) {
                    this.WrapUpTimeSecondsField = value;
                    this.RaisePropertyChanged("WrapUpTimeSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string appNames {
            get {
                return this.appNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.appNamesField, value) != true)) {
                    this.appNamesField = value;
                    this.RaisePropertyChanged("appNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool mainMonitorOnly {
            get {
                return this.mainMonitorOnlyField;
            }
            set {
                if ((this.mainMonitorOnlyField.Equals(value) != true)) {
                    this.mainMonitorOnlyField = value;
                    this.RaisePropertyChanged("mainMonitorOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool monitorFullScreen {
            get {
                return this.monitorFullScreenField;
            }
            set {
                if ((this.monitorFullScreenField.Equals(value) != true)) {
                    this.monitorFullScreenField = value;
                    this.RaisePropertyChanged("monitorFullScreen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceSettings", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
    [System.SerializableAttribute()]
    public partial class ServiceSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlertLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApiIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApiPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CtcHostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiskSpaceNotificationPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthenticationRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEventLogAlertsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFileToBeTransferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFileTransferImmediateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSmtpAlertsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalStorageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LocalStorageLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinimumCallDurationSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PbxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PbxIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PbxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PbxPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PbxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PbxUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryEndpointSubnetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemoteStorageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RemoteStorageLocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmtpPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmtpServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartingAudioPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwitchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferDaysOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferDelayDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSecureSocketField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlertLanguage {
            get {
                return this.AlertLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertLanguageField, value) != true)) {
                    this.AlertLanguageField = value;
                    this.RaisePropertyChanged("AlertLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApiIPAddress {
            get {
                return this.ApiIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ApiIPAddressField, value) != true)) {
                    this.ApiIPAddressField = value;
                    this.RaisePropertyChanged("ApiIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApiPort {
            get {
                return this.ApiPortField;
            }
            set {
                if ((this.ApiPortField.Equals(value) != true)) {
                    this.ApiPortField = value;
                    this.RaisePropertyChanged("ApiPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CtcHostName {
            get {
                return this.CtcHostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CtcHostNameField, value) != true)) {
                    this.CtcHostNameField = value;
                    this.RaisePropertyChanged("CtcHostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiskSpaceNotificationPercentage {
            get {
                return this.DiskSpaceNotificationPercentageField;
            }
            set {
                if ((this.DiskSpaceNotificationPercentageField.Equals(value) != true)) {
                    this.DiskSpaceNotificationPercentageField = value;
                    this.RaisePropertyChanged("DiskSpaceNotificationPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAccount {
            get {
                return this.EmailAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAccountField, value) != true)) {
                    this.EmailAccountField = value;
                    this.RaisePropertyChanged("EmailAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailPassword {
            get {
                return this.EmailPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailPasswordField, value) != true)) {
                    this.EmailPasswordField = value;
                    this.RaisePropertyChanged("EmailPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmailAddress {
            get {
                return this.FromEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailAddressField, value) != true)) {
                    this.FromEmailAddressField = value;
                    this.RaisePropertyChanged("FromEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthenticationRequired {
            get {
                return this.IsAuthenticationRequiredField;
            }
            set {
                if ((this.IsAuthenticationRequiredField.Equals(value) != true)) {
                    this.IsAuthenticationRequiredField = value;
                    this.RaisePropertyChanged("IsAuthenticationRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEventLogAlertsEnabled {
            get {
                return this.IsEventLogAlertsEnabledField;
            }
            set {
                if ((this.IsEventLogAlertsEnabledField.Equals(value) != true)) {
                    this.IsEventLogAlertsEnabledField = value;
                    this.RaisePropertyChanged("IsEventLogAlertsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFileToBeTransferred {
            get {
                return this.IsFileToBeTransferredField;
            }
            set {
                if ((this.IsFileToBeTransferredField.Equals(value) != true)) {
                    this.IsFileToBeTransferredField = value;
                    this.RaisePropertyChanged("IsFileToBeTransferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFileTransferImmediate {
            get {
                return this.IsFileTransferImmediateField;
            }
            set {
                if ((this.IsFileTransferImmediateField.Equals(value) != true)) {
                    this.IsFileTransferImmediateField = value;
                    this.RaisePropertyChanged("IsFileTransferImmediate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSmtpAlertsEnabled {
            get {
                return this.IsSmtpAlertsEnabledField;
            }
            set {
                if ((this.IsSmtpAlertsEnabledField.Equals(value) != true)) {
                    this.IsSmtpAlertsEnabledField = value;
                    this.RaisePropertyChanged("IsSmtpAlertsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalStorageLocation {
            get {
                return this.LocalStorageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalStorageLocationField, value) != true)) {
                    this.LocalStorageLocationField = value;
                    this.RaisePropertyChanged("LocalStorageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LocalStorageLocationID {
            get {
                return this.LocalStorageLocationIDField;
            }
            set {
                if ((this.LocalStorageLocationIDField.Equals(value) != true)) {
                    this.LocalStorageLocationIDField = value;
                    this.RaisePropertyChanged("LocalStorageLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumCallDurationSeconds {
            get {
                return this.MinimumCallDurationSecondsField;
            }
            set {
                if ((this.MinimumCallDurationSecondsField.Equals(value) != true)) {
                    this.MinimumCallDurationSecondsField = value;
                    this.RaisePropertyChanged("MinimumCallDurationSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PbxID {
            get {
                return this.PbxIDField;
            }
            set {
                if ((this.PbxIDField.Equals(value) != true)) {
                    this.PbxIDField = value;
                    this.RaisePropertyChanged("PbxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PbxIPAddress {
            get {
                return this.PbxIPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PbxIPAddressField, value) != true)) {
                    this.PbxIPAddressField = value;
                    this.RaisePropertyChanged("PbxIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PbxName {
            get {
                return this.PbxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PbxNameField, value) != true)) {
                    this.PbxNameField = value;
                    this.RaisePropertyChanged("PbxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PbxPassword {
            get {
                return this.PbxPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PbxPasswordField, value) != true)) {
                    this.PbxPasswordField = value;
                    this.RaisePropertyChanged("PbxPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PbxType {
            get {
                return this.PbxTypeField;
            }
            set {
                if ((this.PbxTypeField.Equals(value) != true)) {
                    this.PbxTypeField = value;
                    this.RaisePropertyChanged("PbxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PbxUserName {
            get {
                return this.PbxUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PbxUserNameField, value) != true)) {
                    this.PbxUserNameField = value;
                    this.RaisePropertyChanged("PbxUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEndpointSubnet {
            get {
                return this.PrimaryEndpointSubnetField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEndpointSubnetField, value) != true)) {
                    this.PrimaryEndpointSubnetField = value;
                    this.RaisePropertyChanged("PrimaryEndpointSubnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemoteStorageLocation {
            get {
                return this.RemoteStorageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteStorageLocationField, value) != true)) {
                    this.RemoteStorageLocationField = value;
                    this.RaisePropertyChanged("RemoteStorageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RemoteStorageLocationID {
            get {
                return this.RemoteStorageLocationIDField;
            }
            set {
                if ((this.RemoteStorageLocationIDField.Equals(value) != true)) {
                    this.RemoteStorageLocationIDField = value;
                    this.RaisePropertyChanged("RemoteStorageLocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceTypeID {
            get {
                return this.ServiceTypeIDField;
            }
            set {
                if ((this.ServiceTypeIDField.Equals(value) != true)) {
                    this.ServiceTypeIDField = value;
                    this.RaisePropertyChanged("ServiceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTypeName {
            get {
                return this.ServiceTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeNameField, value) != true)) {
                    this.ServiceTypeNameField = value;
                    this.RaisePropertyChanged("ServiceTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmtpPort {
            get {
                return this.SmtpPortField;
            }
            set {
                if ((this.SmtpPortField.Equals(value) != true)) {
                    this.SmtpPortField = value;
                    this.RaisePropertyChanged("SmtpPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmtpServer {
            get {
                return this.SmtpServerField;
            }
            set {
                if ((object.ReferenceEquals(this.SmtpServerField, value) != true)) {
                    this.SmtpServerField = value;
                    this.RaisePropertyChanged("SmtpServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartingAudioPort {
            get {
                return this.StartingAudioPortField;
            }
            set {
                if ((this.StartingAudioPortField.Equals(value) != true)) {
                    this.StartingAudioPortField = value;
                    this.RaisePropertyChanged("StartingAudioPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SwitchName {
            get {
                return this.SwitchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SwitchNameField, value) != true)) {
                    this.SwitchNameField = value;
                    this.RaisePropertyChanged("SwitchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferDaysOfWeek {
            get {
                return this.TransferDaysOfWeekField;
            }
            set {
                if ((this.TransferDaysOfWeekField.Equals(value) != true)) {
                    this.TransferDaysOfWeekField = value;
                    this.RaisePropertyChanged("TransferDaysOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferDelayDays {
            get {
                return this.TransferDelayDaysField;
            }
            set {
                if ((this.TransferDelayDaysField.Equals(value) != true)) {
                    this.TransferDelayDaysField = value;
                    this.RaisePropertyChanged("TransferDelayDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferPassword {
            get {
                return this.TransferPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferPasswordField, value) != true)) {
                    this.TransferPasswordField = value;
                    this.RaisePropertyChanged("TransferPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferStartTime {
            get {
                return this.TransferStartTimeField;
            }
            set {
                if ((this.TransferStartTimeField.Equals(value) != true)) {
                    this.TransferStartTimeField = value;
                    this.RaisePropertyChanged("TransferStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferUserName {
            get {
                return this.TransferUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferUserNameField, value) != true)) {
                    this.TransferUserNameField = value;
                    this.RaisePropertyChanged("TransferUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSecureSocket {
            get {
                return this.UseSecureSocketField;
            }
            set {
                if ((this.UseSecureSocketField.Equals(value) != true)) {
                    this.UseSecureSocketField = value;
                    this.RaisePropertyChanged("UseSecureSocket");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAE_EvaluationQuestionScore1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfAE_EvaluationQuestionScore1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_XRefEvaluationCall1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardCategory1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Scorecard1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestionCategory1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestion1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfArchive1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBPbxType1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfServiceType1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBEncryptionKey1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfIntelRexDeployment1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecordingProfile1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfSecurity1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBService1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBRecordingProfile1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_EvaluationQuestionScore1U8vXZAD))]
    public partial class EntityReference : CallRex.UnderWriting.CallRexClientService.RelatedEnd {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CallRex.UnderWriting.CallRexClientService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CallRex.UnderWriting.CallRexClientService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_XRefEvaluationCall1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Evaluation1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardCategory1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_Scorecard1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestionCategory1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_ScorecardQuestion1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecording1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBUser1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfCallLog1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfArchive1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDataSource1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBPbxType1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfServiceType1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBEncryptionKey1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfIntelRexDeployment1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfScreenRecordingProfile1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfSecurity1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBService1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfDBRecordingProfile1U8vXZAD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EntityReferenceOfAE_EvaluationQuestionScore1U8vXZAD))]
    public partial class RelatedEnd : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAE_XRefEvaluationCall1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfAE_XRefEvaluationCall1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAE_Evaluation1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfAE_Evaluation1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAE_ScorecardCategory1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfAE_ScorecardCategory1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAE_Scorecard1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfAE_Scorecard1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAE_ScorecardQuestionCategory1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfAE_ScorecardQuestionCategory1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfAE_ScorecardQuestion1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfAE_ScorecardQuestion1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfScreenRecording1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfScreenRecording1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfDBUser1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfDBUser1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfCallLog1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfCallLog1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfArchive1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfArchive1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfDataSource1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfDataSource1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfDBPbxType1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfDBPbxType1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfServiceType1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfServiceType1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfDBEncryptionKey1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfDBEncryptionKey1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfIntelRexDeployment1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfIntelRexDeployment1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfScreenRecordingProfile1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfScreenRecordingProfile1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfSecurity1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfSecurity1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfDBService1U8vXZAD", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.SerializableAttribute()]
    public partial class EntityReferenceOfDBService1U8vXZAD : CallRex.UnderWriting.CallRexClientService.EntityReference {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CallRexClientService.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetGeneralSettings", ReplyAction="http://tempuri.org/IClientService/GetGeneralSettingsResponse")]
        CallRex.UnderWriting.CallRexClientService.GeneralSettings GetGeneralSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetGeneralSettings", ReplyAction="http://tempuri.org/IClientService/GetGeneralSettingsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GeneralSettings> GetGeneralSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateGeneralSettings", ReplyAction="http://tempuri.org/IClientService/UpdateGeneralSettingsResponse")]
        void UpdateGeneralSettings(CallRex.UnderWriting.CallRexClientService.GeneralSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateGeneralSettings", ReplyAction="http://tempuri.org/IClientService/UpdateGeneralSettingsResponse")]
        System.Threading.Tasks.Task UpdateGeneralSettingsAsync(CallRex.UnderWriting.CallRexClientService.GeneralSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLicenseList", ReplyAction="http://tempuri.org/IClientService/GetLicenseListResponse")]
        CallRex.UnderWriting.CallRexClientService.LicenseInfo[] GetLicenseList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLicenseList", ReplyAction="http://tempuri.org/IClientService/GetLicenseListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.LicenseInfo[]> GetLicenseListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/InvalidateLicenseList", ReplyAction="http://tempuri.org/IClientService/InvalidateLicenseListResponse")]
        void InvalidateLicenseList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/InvalidateLicenseList", ReplyAction="http://tempuri.org/IClientService/InvalidateLicenseListResponse")]
        System.Threading.Tasks.Task InvalidateLicenseListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetServerToken", ReplyAction="http://tempuri.org/IClientService/GetServerTokenResponse")]
        string GetServerToken();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetServerToken", ReplyAction="http://tempuri.org/IClientService/GetServerTokenResponse")]
        System.Threading.Tasks.Task<string> GetServerTokenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetLicenseKey", ReplyAction="http://tempuri.org/IClientService/SetLicenseKeyResponse")]
        void SetLicenseKey(string licenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetLicenseKey", ReplyAction="http://tempuri.org/IClientService/SetLicenseKeyResponse")]
        System.Threading.Tasks.Task SetLicenseKeyAsync(string licenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetFileTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetFileTransferAddressResponse")]
        CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetFileTransferAddress(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetFileTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetFileTransferAddressResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetFileTransferAddressAsync(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetZippedFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetZippedFilesTransferAddressResponse")]
        CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetZippedFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetZippedFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetZippedFilesTransferAddressResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetZippedFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetZippedMediaFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetZippedMediaFilesTransferAddressResponse")]
        CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetZippedMediaFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] recordings, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetZippedMediaFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetZippedMediaFilesTransferAddressResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetZippedMediaFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] recordings, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetZippedComputerRecordingFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetZippedComputerRecordingFilesTransferAddressR" +
            "esponse")]
        CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetZippedComputerRecordingFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetZippedComputerRecordingFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetZippedComputerRecordingFilesTransferAddressR" +
            "esponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetZippedComputerRecordingFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddressResponse")]
        CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetMergedWavFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string MergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddressResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetMergedWavFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string MergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddressViaRecording", ReplyAction="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddressViaRecordingRes" +
            "ponse")]
        CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetMergedWavFilesTransferAddressViaRecording(System.Guid userId, System.Guid selectedRecording, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string mergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddressViaRecording", ReplyAction="http://tempuri.org/IClientService/GetMergedWavFilesTransferAddressViaRecordingRes" +
            "ponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetMergedWavFilesTransferAddressViaRecordingAsync(System.Guid userId, System.Guid selectedRecording, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string mergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteRecording", ReplyAction="http://tempuri.org/IClientService/DeleteRecordingResponse")]
        bool DeleteRecording(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteRecording", ReplyAction="http://tempuri.org/IClientService/DeleteRecordingResponse")]
        System.Threading.Tasks.Task<bool> DeleteRecordingAsync(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteRecordings", ReplyAction="http://tempuri.org/IClientService/DeleteRecordingsResponse")]
        System.Guid[] DeleteRecordings(System.Guid[] recordingIDs, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteRecordings", ReplyAction="http://tempuri.org/IClientService/DeleteRecordingsResponse")]
        System.Threading.Tasks.Task<System.Guid[]> DeleteRecordingsAsync(System.Guid[] recordingIDs, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/IsRecordingValid", ReplyAction="http://tempuri.org/IClientService/IsRecordingValidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.EndpointNotFoundFault), Action="http://tempuri.org/IClientService/IsRecordingValidEndpointNotFoundFaultFault", Name="EndpointNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordingIsArchivedFault), Action="http://tempuri.org/IClientService/IsRecordingValidRecordingIsArchivedFaultFault", Name="RecordingIsArchivedFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidDataSourceFault), Action="http://tempuri.org/IClientService/IsRecordingValidInvalidDataSourceFaultFault", Name="InvalidDataSourceFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        bool IsRecordingValid(System.Guid recordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/IsRecordingValid", ReplyAction="http://tempuri.org/IClientService/IsRecordingValidResponse")]
        System.Threading.Tasks.Task<bool> IsRecordingValidAsync(System.Guid recordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StartOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/StartOnDemandRecordingResponse")]
        void StartOnDemandRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StartOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/StartOnDemandRecordingResponse")]
        System.Threading.Tasks.Task StartOnDemandRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StopOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/StopOnDemandRecordingResponse")]
        void StopOnDemandRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StopOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/StopOnDemandRecordingResponse")]
        System.Threading.Tasks.Task StopOnDemandRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PauseOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/PauseOnDemandRecordingResponse")]
        void PauseOnDemandRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PauseOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/PauseOnDemandRecordingResponse")]
        System.Threading.Tasks.Task PauseOnDemandRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ResumeOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/ResumeOnDemandRecordingResponse")]
        void ResumeOnDemandRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ResumeOnDemandRecording", ReplyAction="http://tempuri.org/IClientService/ResumeOnDemandRecordingResponse")]
        System.Threading.Tasks.Task ResumeOnDemandRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEncryptionInfo", ReplyAction="http://tempuri.org/IClientService/GetEncryptionInfoResponse")]
        CallRex.UnderWriting.CallRexClientService.EncryptionInfo GetEncryptionInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEncryptionInfo", ReplyAction="http://tempuri.org/IClientService/GetEncryptionInfoResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.EncryptionInfo> GetEncryptionInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetNewEncryptionKey", ReplyAction="http://tempuri.org/IClientService/SetNewEncryptionKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AccessDeniedFault), Action="http://tempuri.org/IClientService/SetNewEncryptionKeyAccessDeniedFaultFault", Name="AccessDeniedFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidLoginFault), Action="http://tempuri.org/IClientService/SetNewEncryptionKeyInvalidLoginFaultFault", Name="InvalidLoginFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserLicenseRequiredFault), Action="http://tempuri.org/IClientService/SetNewEncryptionKeyUserLicenseRequiredFaultFaul" +
            "t", Name="UserLicenseRequiredFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        string SetNewEncryptionKey(string username1, string password1, string username2, string password2, bool revokeExistingKeys, bool enableEncryption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetNewEncryptionKey", ReplyAction="http://tempuri.org/IClientService/SetNewEncryptionKeyResponse")]
        System.Threading.Tasks.Task<string> SetNewEncryptionKeyAsync(string username1, string password1, string username2, string password2, bool revokeExistingKeys, bool enableEncryption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallRecordingServiceList", ReplyAction="http://tempuri.org/IClientService/GetCallRecordingServiceListResponse")]
        CallRex.UnderWriting.CallRexClientService.ServiceListItem[] GetCallRecordingServiceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallRecordingServiceList", ReplyAction="http://tempuri.org/IClientService/GetCallRecordingServiceListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ServiceListItem[]> GetCallRecordingServiceListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLocationList", ReplyAction="http://tempuri.org/IClientService/GetLocationListResponse")]
        string[] GetLocationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLocationList", ReplyAction="http://tempuri.org/IClientService/GetLocationListResponse")]
        System.Threading.Tasks.Task<string[]> GetLocationListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetDepartmentList", ReplyAction="http://tempuri.org/IClientService/GetDepartmentListResponse")]
        string[] GetDepartmentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetDepartmentList", ReplyAction="http://tempuri.org/IClientService/GetDepartmentListResponse")]
        System.Threading.Tasks.Task<string[]> GetDepartmentListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetPbxList", ReplyAction="http://tempuri.org/IClientService/GetPbxListResponse")]
        CallRex.UnderWriting.CallRexClientService.PbxListItem[] GetPbxList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetPbxList", ReplyAction="http://tempuri.org/IClientService/GetPbxListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.PbxListItem[]> GetPbxListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserPreferences", ReplyAction="http://tempuri.org/IClientService/GetUserPreferencesResponse")]
        CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] GetUserPreferences(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences, bool persistPassed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserPreferences", ReplyAction="http://tempuri.org/IClientService/GetUserPreferencesResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[]> GetUserPreferencesAsync(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences, bool persistPassed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetUserPreferences", ReplyAction="http://tempuri.org/IClientService/SetUserPreferencesResponse")]
        void SetUserPreferences(System.Guid userID, CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetUserPreferences", ReplyAction="http://tempuri.org/IClientService/SetUserPreferencesResponse")]
        System.Threading.Tasks.Task SetUserPreferencesAsync(System.Guid userID, CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetUserPreference", ReplyAction="http://tempuri.org/IClientService/SetUserPreferenceResponse")]
        void SetUserPreference(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem preference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetUserPreference", ReplyAction="http://tempuri.org/IClientService/SetUserPreferenceResponse")]
        System.Threading.Tasks.Task SetUserPreferenceAsync(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem preference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAuditLogList", ReplyAction="http://tempuri.org/IClientService/GetAuditLogListResponse")]
        CallRex.UnderWriting.CallRexClientService.AuditLog[] GetAuditLogList(System.Guid[] userIds, System.DateTime startDate, System.DateTime endDate, string action, string targetType, System.Nullable<System.Guid> targetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAuditLogList", ReplyAction="http://tempuri.org/IClientService/GetAuditLogListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AuditLog[]> GetAuditLogListAsync(System.Guid[] userIds, System.DateTime startDate, System.DateTime endDate, string action, string targetType, System.Nullable<System.Guid> targetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAuditActionTypeList", ReplyAction="http://tempuri.org/IClientService/GetAuditActionTypeListResponse")]
        CallRex.UnderWriting.CallRexClientService.AuditActionType[] GetAuditActionTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAuditActionTypeList", ReplyAction="http://tempuri.org/IClientService/GetAuditActionTypeListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AuditActionType[]> GetAuditActionTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddAuditLog", ReplyAction="http://tempuri.org/IClientService/AddAuditLogResponse")]
        void AddAuditLog(CallRex.UnderWriting.CallRexClientService.AuditAction action, CallRex.UnderWriting.CallRexClientService.AuditTargetType targetType, System.Nullable<System.Guid> targetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddAuditLog", ReplyAction="http://tempuri.org/IClientService/AddAuditLogResponse")]
        System.Threading.Tasks.Task AddAuditLogAsync(CallRex.UnderWriting.CallRexClientService.AuditAction action, CallRex.UnderWriting.CallRexClientService.AuditTargetType targetType, System.Nullable<System.Guid> targetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComputerRecordingUserDetails", ReplyAction="http://tempuri.org/IClientService/GetComputerRecordingUserDetailsResponse")]
        CallRex.UnderWriting.CallRexClientService.UserDetails[] GetComputerRecordingUserDetails(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComputerRecordingUserDetails", ReplyAction="http://tempuri.org/IClientService/GetComputerRecordingUserDetailsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails[]> GetComputerRecordingUserDetailsAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/CheckAvailabilityForComputerMonitoring", ReplyAction="http://tempuri.org/IClientService/CheckAvailabilityForComputerMonitoringResponse")]
        CallRex.UnderWriting.CallRexClientService.GuidPair CheckAvailabilityForComputerMonitoring(System.Guid monitorTarget);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/CheckAvailabilityForComputerMonitoring", ReplyAction="http://tempuri.org/IClientService/CheckAvailabilityForComputerMonitoringResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GuidPair> CheckAvailabilityForComputerMonitoringAsync(System.Guid monitorTarget);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PrepareComputerRecordingForStream", ReplyAction="http://tempuri.org/IClientService/PrepareComputerRecordingForStreamResponse")]
        System.Uri PrepareComputerRecordingForStream(System.Guid clientToken, System.Guid screenRecordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PrepareComputerRecordingForStream", ReplyAction="http://tempuri.org/IClientService/PrepareComputerRecordingForStreamResponse")]
        System.Threading.Tasks.Task<System.Uri> PrepareComputerRecordingForStreamAsync(System.Guid clientToken, System.Guid screenRecordingID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClientService/ReleaseComputerRecordingStreamResources")]
        void ReleaseComputerRecordingStreamResources(System.Guid clientToken, System.Guid screenRecordingID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClientService/ReleaseComputerRecordingStreamResources")]
        System.Threading.Tasks.Task ReleaseComputerRecordingStreamResourcesAsync(System.Guid clientToken, System.Guid screenRecordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StartOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/StartOnDemandScreenRecordingResponse")]
        void StartOnDemandScreenRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StartOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/StartOnDemandScreenRecordingResponse")]
        System.Threading.Tasks.Task StartOnDemandScreenRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StopOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/StopOnDemandScreenRecordingResponse")]
        void StopOnDemandScreenRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/StopOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/StopOnDemandScreenRecordingResponse")]
        System.Threading.Tasks.Task StopOnDemandScreenRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PauseOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/PauseOnDemandScreenRecordingResponse")]
        void PauseOnDemandScreenRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/PauseOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/PauseOnDemandScreenRecordingResponse")]
        System.Threading.Tasks.Task PauseOnDemandScreenRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ResumeOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/ResumeOnDemandScreenRecordingResponse")]
        void ResumeOnDemandScreenRecording(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ResumeOnDemandScreenRecording", ReplyAction="http://tempuri.org/IClientService/ResumeOnDemandScreenRecordingResponse")]
        System.Threading.Tasks.Task ResumeOnDemandScreenRecordingAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetExpiredCallRecording", ReplyAction="http://tempuri.org/IClientService/GetExpiredCallRecordingResponse")]
        CallRex.UnderWriting.CallRexClientService.GuidPair[] GetExpiredCallRecording(System.Guid profileID, System.DateTime endingPriorTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetExpiredCallRecording", ReplyAction="http://tempuri.org/IClientService/GetExpiredCallRecordingResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GuidPair[]> GetExpiredCallRecordingAsync(System.Guid profileID, System.DateTime endingPriorTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetExpiredComputerRecording", ReplyAction="http://tempuri.org/IClientService/GetExpiredComputerRecordingResponse")]
        CallRex.UnderWriting.CallRexClientService.GuidPair[] GetExpiredComputerRecording(System.Guid profileID, System.DateTime endingPriorTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetExpiredComputerRecording", ReplyAction="http://tempuri.org/IClientService/GetExpiredComputerRecordingResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GuidPair[]> GetExpiredComputerRecordingAsync(System.Guid profileID, System.DateTime endingPriorTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComputerRecordingDeployments", ReplyAction="http://tempuri.org/IClientService/GetComputerRecordingDeploymentsResponse")]
        CallRex.UnderWriting.CallRexClientService.ComputerRecordingDeployment[] GetComputerRecordingDeployments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComputerRecordingDeployments", ReplyAction="http://tempuri.org/IClientService/GetComputerRecordingDeploymentsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ComputerRecordingDeployment[]> GetComputerRecordingDeploymentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClientService/RemoveComputerRecordingDeployment")]
        void RemoveComputerRecordingDeployment(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClientService/RemoveComputerRecordingDeployment")]
        System.Threading.Tasks.Task RemoveComputerRecordingDeploymentAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetPermissibleFileTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetPermissibleFileTransferAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.RecordNotFoundFault), Action="http://tempuri.org/IClientService/GetPermissibleFileTransferAddressRecordNotFound" +
            "FaultFault", Name="RecordNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidLoginFault), Action="http://tempuri.org/IClientService/GetPermissibleFileTransferAddressInvalidLoginFa" +
            "ultFault", Name="InvalidLoginFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.AccessDeniedFault), Action="http://tempuri.org/IClientService/GetPermissibleFileTransferAddressAccessDeniedFa" +
            "ultFault", Name="AccessDeniedFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetPermissibleFileTransferAddress(System.Guid recordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetPermissibleFileTransferAddress", ReplyAction="http://tempuri.org/IClientService/GetPermissibleFileTransferAddressResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetPermissibleFileTransferAddressAsync(System.Guid recordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DiscoverADPath", ReplyAction="http://tempuri.org/IClientService/DiscoverADPathResponse")]
        CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode[] DiscoverADPath(CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode node);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DiscoverADPath", ReplyAction="http://tempuri.org/IClientService/DiscoverADPathResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode[]> DiscoverADPathAsync(CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode node);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetArchiveList", ReplyAction="http://tempuri.org/IClientService/GetArchiveListResponse")]
        CallRex.UnderWriting.CallRexClientService.ArchiveListItem[] GetArchiveList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetArchiveList", ReplyAction="http://tempuri.org/IClientService/GetArchiveListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ArchiveListItem[]> GetArchiveListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetArchiveTasks", ReplyAction="http://tempuri.org/IClientService/GetArchiveTasksResponse")]
        CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem[] GetArchiveTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetArchiveTasks", ReplyAction="http://tempuri.org/IClientService/GetArchiveTasksResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem[]> GetArchiveTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateArchiveTask", ReplyAction="http://tempuri.org/IClientService/UpdateArchiveTaskResponse")]
        void UpdateArchiveTask(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateArchiveTask", ReplyAction="http://tempuri.org/IClientService/UpdateArchiveTaskResponse")]
        System.Threading.Tasks.Task UpdateArchiveTaskAsync(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddArchiveTask", ReplyAction="http://tempuri.org/IClientService/AddArchiveTaskResponse")]
        System.Guid AddArchiveTask(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddArchiveTask", ReplyAction="http://tempuri.org/IClientService/AddArchiveTaskResponse")]
        System.Threading.Tasks.Task<System.Guid> AddArchiveTaskAsync(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRemoteDataSources", ReplyAction="http://tempuri.org/IClientService/GetRemoteDataSourcesResponse")]
        CallRex.UnderWriting.CallRexClientService.DataSourceListItem[] GetRemoteDataSources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRemoteDataSources", ReplyAction="http://tempuri.org/IClientService/GetRemoteDataSourcesResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.DataSourceListItem[]> GetRemoteDataSourcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddRemoteDataSource", ReplyAction="http://tempuri.org/IClientService/AddRemoteDataSourceResponse")]
        System.Guid AddRemoteDataSource(CallRex.UnderWriting.CallRexClientService.RemoteDataSourceCreationItem dsci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddRemoteDataSource", ReplyAction="http://tempuri.org/IClientService/AddRemoteDataSourceResponse")]
        System.Threading.Tasks.Task<System.Guid> AddRemoteDataSourceAsync(CallRex.UnderWriting.CallRexClientService.RemoteDataSourceCreationItem dsci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetArchiveSourceDataSources", ReplyAction="http://tempuri.org/IClientService/GetArchiveSourceDataSourcesResponse")]
        CallRex.UnderWriting.CallRexClientService.DataSourceListItem[] GetArchiveSourceDataSources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetArchiveSourceDataSources", ReplyAction="http://tempuri.org/IClientService/GetArchiveSourceDataSourcesResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.DataSourceListItem[]> GetArchiveSourceDataSourcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSubordinatesList", ReplyAction="http://tempuri.org/IClientService/GetSubordinatesListResponse")]
        CallRex.UnderWriting.CallRexClientService.UserListItem[] GetSubordinatesList(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSubordinatesList", ReplyAction="http://tempuri.org/IClientService/GetSubordinatesListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetSubordinatesListAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEvaluatorsList", ReplyAction="http://tempuri.org/IClientService/GetEvaluatorsListResponse")]
        CallRex.UnderWriting.CallRexClientService.UserListItem[] GetEvaluatorsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEvaluatorsList", ReplyAction="http://tempuri.org/IClientService/GetEvaluatorsListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetEvaluatorsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEvaluations", ReplyAction="http://tempuri.org/IClientService/GetEvaluationsResponse")]
        CallRex.UnderWriting.CallRexClientService.EvaluationSummary[] GetEvaluations(System.Guid[] subordinates, System.Guid[] evaluators, System.Guid[] scorecards, System.DateTime rangeFrom, System.DateTime rangeTo, bool includeIncompleteEvaluations, bool includeCompleteEvaluations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEvaluations", ReplyAction="http://tempuri.org/IClientService/GetEvaluationsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.EvaluationSummary[]> GetEvaluationsAsync(System.Guid[] subordinates, System.Guid[] evaluators, System.Guid[] scorecards, System.DateTime rangeFrom, System.DateTime rangeTo, bool includeIncompleteEvaluations, bool includeCompleteEvaluations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEvaluation", ReplyAction="http://tempuri.org/IClientService/GetEvaluationResponse")]
        CallRex.UnderWriting.CallRexClientService.EvaluationDetails GetEvaluation(System.Guid evaluationGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEvaluation", ReplyAction="http://tempuri.org/IClientService/GetEvaluationResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.EvaluationDetails> GetEvaluationAsync(System.Guid evaluationGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteEvaluation", ReplyAction="http://tempuri.org/IClientService/DeleteEvaluationResponse")]
        void DeleteEvaluation(System.Guid evaluationGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteEvaluation", ReplyAction="http://tempuri.org/IClientService/DeleteEvaluationResponse")]
        System.Threading.Tasks.Task DeleteEvaluationAsync(System.Guid evaluationGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScorecards", ReplyAction="http://tempuri.org/IClientService/GetScorecardsResponse")]
        CallRex.UnderWriting.CallRexClientService.Scorecard[] GetScorecards(bool includeDeleted, bool latestVersionOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScorecards", ReplyAction="http://tempuri.org/IClientService/GetScorecardsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Scorecard[]> GetScorecardsAsync(bool includeDeleted, bool latestVersionOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScorecardCategories", ReplyAction="http://tempuri.org/IClientService/GetScorecardCategoriesResponse")]
        CallRex.UnderWriting.CallRexClientService.ScorecardCategory[] GetScorecardCategories(bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScorecardCategories", ReplyAction="http://tempuri.org/IClientService/GetScorecardCategoriesResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardCategory[]> GetScorecardCategoriesAsync(bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetQuestionCategories", ReplyAction="http://tempuri.org/IClientService/GetQuestionCategoriesResponse")]
        CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] GetQuestionCategories(System.Guid scorecardUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetQuestionCategories", ReplyAction="http://tempuri.org/IClientService/GetQuestionCategoriesResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[]> GetQuestionCategoriesAsync(System.Guid scorecardUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetQuestionsPerCategory", ReplyAction="http://tempuri.org/IClientService/GetQuestionsPerCategoryResponse")]
        CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] GetQuestionsPerCategory(System.Guid questionCategoryUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetQuestionsPerCategory", ReplyAction="http://tempuri.org/IClientService/GetQuestionsPerCategoryResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[]> GetQuestionsPerCategoryAsync(System.Guid questionCategoryUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetQuestionsPerScorecard", ReplyAction="http://tempuri.org/IClientService/GetQuestionsPerScorecardResponse")]
        CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] GetQuestionsPerScorecard(System.Guid scorecardUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetQuestionsPerScorecard", ReplyAction="http://tempuri.org/IClientService/GetQuestionsPerScorecardResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[]> GetQuestionsPerScorecardAsync(System.Guid scorecardUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddCategory", ReplyAction="http://tempuri.org/IClientService/AddCategoryResponse")]
        void AddCategory(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddCategory", ReplyAction="http://tempuri.org/IClientService/AddCategoryResponse")]
        System.Threading.Tasks.Task AddCategoryAsync(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateCategory", ReplyAction="http://tempuri.org/IClientService/UpdateCategoryResponse")]
        void UpdateCategory(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateCategory", ReplyAction="http://tempuri.org/IClientService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task UpdateCategoryAsync(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateScorecard", ReplyAction="http://tempuri.org/IClientService/UpdateScorecardResponse")]
        void UpdateScorecard(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateScorecard", ReplyAction="http://tempuri.org/IClientService/UpdateScorecardResponse")]
        System.Threading.Tasks.Task UpdateScorecardAsync(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestionCategory", ReplyAction="http://tempuri.org/IClientService/AddQuestionCategoryResponse")]
        void AddQuestionCategory(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestionCategory", ReplyAction="http://tempuri.org/IClientService/AddQuestionCategoryResponse")]
        System.Threading.Tasks.Task AddQuestionCategoryAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestionCategories", ReplyAction="http://tempuri.org/IClientService/AddQuestionCategoriesResponse")]
        void AddQuestionCategories(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] categoryList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestionCategories", ReplyAction="http://tempuri.org/IClientService/AddQuestionCategoriesResponse")]
        System.Threading.Tasks.Task AddQuestionCategoriesAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] categoryList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestion", ReplyAction="http://tempuri.org/IClientService/AddQuestionResponse")]
        void AddQuestion(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestion", ReplyAction="http://tempuri.org/IClientService/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestions", ReplyAction="http://tempuri.org/IClientService/AddQuestionsResponse")]
        void AddQuestions(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddQuestions", ReplyAction="http://tempuri.org/IClientService/AddQuestionsResponse")]
        System.Threading.Tasks.Task AddQuestionsAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddScorecard", ReplyAction="http://tempuri.org/IClientService/AddScorecardResponse")]
        void AddScorecard(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddScorecard", ReplyAction="http://tempuri.org/IClientService/AddScorecardResponse")]
        System.Threading.Tasks.Task AddScorecardAsync(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAgentEvalRecordedMedia", ReplyAction="http://tempuri.org/IClientService/GetAgentEvalRecordedMediaResponse")]
        CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] GetAgentEvalRecordedMedia(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAgentEvalRecordedMedia", ReplyAction="http://tempuri.org/IClientService/GetAgentEvalRecordedMediaResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[]> GetAgentEvalRecordedMediaAsync(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/BlockAgentEvalCall", ReplyAction="http://tempuri.org/IClientService/BlockAgentEvalCallResponse")]
        void BlockAgentEvalCall(System.Guid callLogIDToBlockGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/BlockAgentEvalCall", ReplyAction="http://tempuri.org/IClientService/BlockAgentEvalCallResponse")]
        System.Threading.Tasks.Task BlockAgentEvalCallAsync(System.Guid callLogIDToBlockGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveEvaluation", ReplyAction="http://tempuri.org/IClientService/SaveEvaluationResponse")]
        void SaveEvaluation(CallRex.UnderWriting.CallRexClientService.EvaluationDetails newEvaluation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveEvaluation", ReplyAction="http://tempuri.org/IClientService/SaveEvaluationResponse")]
        System.Threading.Tasks.Task SaveEvaluationAsync(CallRex.UnderWriting.CallRexClientService.EvaluationDetails newEvaluation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/BlockAgentEvalScreenRecording", ReplyAction="http://tempuri.org/IClientService/BlockAgentEvalScreenRecordingResponse")]
        void BlockAgentEvalScreenRecording(System.Guid screenRecordingIDToBlockGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/BlockAgentEvalScreenRecording", ReplyAction="http://tempuri.org/IClientService/BlockAgentEvalScreenRecordingResponse")]
        System.Threading.Tasks.Task BlockAgentEvalScreenRecordingAsync(System.Guid screenRecordingIDToBlockGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetIsCallCenter", ReplyAction="http://tempuri.org/IClientService/GetIsCallCenterResponse")]
        bool GetIsCallCenter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetIsCallCenter", ReplyAction="http://tempuri.org/IClientService/GetIsCallCenterResponse")]
        System.Threading.Tasks.Task<bool> GetIsCallCenterAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallCounts", ReplyAction="http://tempuri.org/IClientService/GetCallCountsResponse")]
        CallRex.UnderWriting.CallRexClientService.CallCount[] GetCallCounts(System.Guid[] userIds, CallRex.UnderWriting.CallRexClientService.SearchDateSpecificationType dateRangeType, int dateRangeLastXDays, System.DateTime dateRangeStart, System.DateTime dateRangeEnd, CallRex.UnderWriting.CallRexClientService.CallDirection callDirection, bool onlyIncludeFlagged, CallRex.UnderWriting.CallRexClientService.DateGroupType dateGroupType, CallRex.UnderWriting.CallRexClientService.CallCountGroupType groupType, System.Guid flagId, CallRex.UnderWriting.CallRexClientService.CallCountSortType sortType, int maximumRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallCounts", ReplyAction="http://tempuri.org/IClientService/GetCallCountsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.CallCount[]> GetCallCountsAsync(System.Guid[] userIds, CallRex.UnderWriting.CallRexClientService.SearchDateSpecificationType dateRangeType, int dateRangeLastXDays, System.DateTime dateRangeStart, System.DateTime dateRangeEnd, CallRex.UnderWriting.CallRexClientService.CallDirection callDirection, bool onlyIncludeFlagged, CallRex.UnderWriting.CallRexClientService.DateGroupType dateGroupType, CallRex.UnderWriting.CallRexClientService.CallCountGroupType groupType, System.Guid flagId, CallRex.UnderWriting.CallRexClientService.CallCountSortType sortType, int maximumRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRenderedReport", ReplyAction="http://tempuri.org/IClientService/GetRenderedReportResponse")]
        byte[] GetRenderedReport(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRenderedReport", ReplyAction="http://tempuri.org/IClientService/GetRenderedReportResponse")]
        System.Threading.Tasks.Task<byte[]> GetRenderedReportAsync(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRenderedReportForDashboard", ReplyAction="http://tempuri.org/IClientService/GetRenderedReportForDashboardResponse")]
        byte[] GetRenderedReportForDashboard(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRenderedReportForDashboard", ReplyAction="http://tempuri.org/IClientService/GetRenderedReportForDashboardResponse")]
        System.Threading.Tasks.Task<byte[]> GetRenderedReportForDashboardAsync(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserLicenseRequiredFault), Action="http://tempuri.org/IClientService/LoginUserLicenseRequiredFaultFault", Name="UserLicenseRequiredFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidLoginFault), Action="http://tempuri.org/IClientService/LoginInvalidLoginFaultFault", Name="InvalidLoginFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        System.Guid Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        System.Threading.Tasks.Task<System.Guid> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/LoginUsingWinAuthentication", ReplyAction="http://tempuri.org/IClientService/LoginUsingWinAuthenticationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.UserLicenseRequiredFault), Action="http://tempuri.org/IClientService/LoginUsingWinAuthenticationUserLicenseRequiredF" +
            "aultFault", Name="UserLicenseRequiredFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidLoginFault), Action="http://tempuri.org/IClientService/LoginUsingWinAuthenticationInvalidLoginFaultFau" +
            "lt", Name="InvalidLoginFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        CallRex.UnderWriting.CallRexClientService.UserDetails LoginUsingWinAuthentication();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/LoginUsingWinAuthentication", ReplyAction="http://tempuri.org/IClientService/LoginUsingWinAuthenticationResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails> LoginUsingWinAuthenticationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ChangePassword", ReplyAction="http://tempuri.org/IClientService/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidLoginFault), Action="http://tempuri.org/IClientService/ChangePasswordInvalidLoginFaultFault", Name="InvalidLoginFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        void ChangePassword(string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ChangePassword", ReplyAction="http://tempuri.org/IClientService/ChangePasswordResponse")]
        System.Threading.Tasks.Task ChangePasswordAsync(string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserList", ReplyAction="http://tempuri.org/IClientService/GetUserListResponse")]
        CallRex.UnderWriting.CallRexClientService.UserListItem[] GetUserList(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, bool activeUsersOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserList", ReplyAction="http://tempuri.org/IClientService/GetUserListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetUserListAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, bool activeUsersOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddUser", ReplyAction="http://tempuri.org/IClientService/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateExtensionFault), Action="http://tempuri.org/IClientService/AddUserDuplicateExtensionFaultFault", Name="DuplicateExtensionFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidOrBlankExtensionFault), Action="http://tempuri.org/IClientService/AddUserInvalidOrBlankExtensionFaultFault", Name="InvalidOrBlankExtensionFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateSipUriFault), Action="http://tempuri.org/IClientService/AddUserDuplicateSipUriFaultFault", Name="DuplicateSipUriFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateUsernameFault), Action="http://tempuri.org/IClientService/AddUserDuplicateUsernameFaultFault", Name="DuplicateUsernameFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.LicenseViolationFault), Action="http://tempuri.org/IClientService/AddUserLicenseViolationFaultFault", Name="LicenseViolationFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateDeviceAddressFault), Action="http://tempuri.org/IClientService/AddUserDuplicateDeviceAddressFaultFault", Name="DuplicateDeviceAddressFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        void AddUser(CallRex.UnderWriting.CallRexClientService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddUser", ReplyAction="http://tempuri.org/IClientService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(CallRex.UnderWriting.CallRexClientService.UserDetails user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateUser", ReplyAction="http://tempuri.org/IClientService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.LicenseViolationFault), Action="http://tempuri.org/IClientService/UpdateUserLicenseViolationFaultFault", Name="LicenseViolationFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateUsernameFault), Action="http://tempuri.org/IClientService/UpdateUserDuplicateUsernameFaultFault", Name="DuplicateUsernameFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidOrBlankExtensionFault), Action="http://tempuri.org/IClientService/UpdateUserInvalidOrBlankExtensionFaultFault", Name="InvalidOrBlankExtensionFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateSipUriFault), Action="http://tempuri.org/IClientService/UpdateUserDuplicateSipUriFaultFault", Name="DuplicateSipUriFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateExtensionFault), Action="http://tempuri.org/IClientService/UpdateUserDuplicateExtensionFaultFault", Name="DuplicateExtensionFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.InvalidUserIdFault), Action="http://tempuri.org/IClientService/UpdateUserInvalidUserIdFaultFault", Name="InvalidUserIdFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.DuplicateDeviceAddressFault), Action="http://tempuri.org/IClientService/UpdateUserDuplicateDeviceAddressFaultFault", Name="DuplicateDeviceAddressFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        void UpdateUser(CallRex.UnderWriting.CallRexClientService.UserDetails user, bool passwordChanged);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateUser", ReplyAction="http://tempuri.org/IClientService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(CallRex.UnderWriting.CallRexClientService.UserDetails user, bool passwordChanged);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteUser", ReplyAction="http://tempuri.org/IClientService/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.CantDeleteUserLoggedInAsFault), Action="http://tempuri.org/IClientService/DeleteUserCantDeleteUserLoggedInAsFaultFault", Name="CantDeleteUserLoggedInAsFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        void DeleteUser(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteUser", ReplyAction="http://tempuri.org/IClientService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserDetails", ReplyAction="http://tempuri.org/IClientService/GetUserDetailsResponse")]
        CallRex.UnderWriting.CallRexClientService.UserDetails GetUserDetails(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserDetails", ReplyAction="http://tempuri.org/IClientService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails> GetUserDetailsAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllUserDetails", ReplyAction="http://tempuri.org/IClientService/GetAllUserDetailsResponse")]
        CallRex.UnderWriting.CallRexClientService.UserDetails[] GetAllUserDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAllUserDetails", ReplyAction="http://tempuri.org/IClientService/GetAllUserDetailsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails[]> GetAllUserDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetManagedUserListForUser", ReplyAction="http://tempuri.org/IClientService/GetManagedUserListForUserResponse")]
        CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetManagedUserListForUser(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetManagedUserListForUser", ReplyAction="http://tempuri.org/IClientService/GetManagedUserListForUserResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetManagedUserListForUserAsync(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNonManagedUserListForUser", ReplyAction="http://tempuri.org/IClientService/GetNonManagedUserListForUserResponse")]
        CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetNonManagedUserListForUser(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNonManagedUserListForUser", ReplyAction="http://tempuri.org/IClientService/GetNonManagedUserListForUserResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetNonManagedUserListForUserAsync(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedUsers", ReplyAction="http://tempuri.org/IClientService/AddManagedUsersResponse")]
        void AddManagedUsers(System.Guid supervisorUserID, System.Guid[] managedUserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedUsers", ReplyAction="http://tempuri.org/IClientService/AddManagedUsersResponse")]
        System.Threading.Tasks.Task AddManagedUsersAsync(System.Guid supervisorUserID, System.Guid[] managedUserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedUsers", ReplyAction="http://tempuri.org/IClientService/RemoveManagedUsersResponse")]
        void RemoveManagedUsers(System.Guid supervisorUserID, System.Guid[] managedUserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedUsers", ReplyAction="http://tempuri.org/IClientService/RemoveManagedUsersResponse")]
        System.Threading.Tasks.Task RemoveManagedUsersAsync(System.Guid supervisorUserID, System.Guid[] managedUserIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetManagedDepartmentListForUser", ReplyAction="http://tempuri.org/IClientService/GetManagedDepartmentListForUserResponse")]
        string[] GetManagedDepartmentListForUser(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetManagedDepartmentListForUser", ReplyAction="http://tempuri.org/IClientService/GetManagedDepartmentListForUserResponse")]
        System.Threading.Tasks.Task<string[]> GetManagedDepartmentListForUserAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNonManagedDepartmentListForUser", ReplyAction="http://tempuri.org/IClientService/GetNonManagedDepartmentListForUserResponse")]
        string[] GetNonManagedDepartmentListForUser(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNonManagedDepartmentListForUser", ReplyAction="http://tempuri.org/IClientService/GetNonManagedDepartmentListForUserResponse")]
        System.Threading.Tasks.Task<string[]> GetNonManagedDepartmentListForUserAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetManagedLocationListForUser", ReplyAction="http://tempuri.org/IClientService/GetManagedLocationListForUserResponse")]
        string[] GetManagedLocationListForUser(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetManagedLocationListForUser", ReplyAction="http://tempuri.org/IClientService/GetManagedLocationListForUserResponse")]
        System.Threading.Tasks.Task<string[]> GetManagedLocationListForUserAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNonManagedLocationListForUser", ReplyAction="http://tempuri.org/IClientService/GetNonManagedLocationListForUserResponse")]
        string[] GetNonManagedLocationListForUser(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNonManagedLocationListForUser", ReplyAction="http://tempuri.org/IClientService/GetNonManagedLocationListForUserResponse")]
        System.Threading.Tasks.Task<string[]> GetNonManagedLocationListForUserAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedDepartment", ReplyAction="http://tempuri.org/IClientService/AddManagedDepartmentResponse")]
        void AddManagedDepartment(System.Guid userID, string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedDepartment", ReplyAction="http://tempuri.org/IClientService/AddManagedDepartmentResponse")]
        System.Threading.Tasks.Task AddManagedDepartmentAsync(System.Guid userID, string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedDepartment", ReplyAction="http://tempuri.org/IClientService/RemoveManagedDepartmentResponse")]
        void RemoveManagedDepartment(System.Guid userID, string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedDepartment", ReplyAction="http://tempuri.org/IClientService/RemoveManagedDepartmentResponse")]
        System.Threading.Tasks.Task RemoveManagedDepartmentAsync(System.Guid userID, string departmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedDepartments", ReplyAction="http://tempuri.org/IClientService/AddManagedDepartmentsResponse")]
        void AddManagedDepartments(System.Guid userID, string[] departmentNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedDepartments", ReplyAction="http://tempuri.org/IClientService/AddManagedDepartmentsResponse")]
        System.Threading.Tasks.Task AddManagedDepartmentsAsync(System.Guid userID, string[] departmentNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedDepartments", ReplyAction="http://tempuri.org/IClientService/RemoveManagedDepartmentsResponse")]
        void RemoveManagedDepartments(System.Guid userID, string[] departmentNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedDepartments", ReplyAction="http://tempuri.org/IClientService/RemoveManagedDepartmentsResponse")]
        System.Threading.Tasks.Task RemoveManagedDepartmentsAsync(System.Guid userID, string[] departmentNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedLocation", ReplyAction="http://tempuri.org/IClientService/AddManagedLocationResponse")]
        void AddManagedLocation(System.Guid userID, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedLocation", ReplyAction="http://tempuri.org/IClientService/AddManagedLocationResponse")]
        System.Threading.Tasks.Task AddManagedLocationAsync(System.Guid userID, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedLocation", ReplyAction="http://tempuri.org/IClientService/RemoveManagedLocationResponse")]
        void RemoveManagedLocation(System.Guid userID, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedLocation", ReplyAction="http://tempuri.org/IClientService/RemoveManagedLocationResponse")]
        System.Threading.Tasks.Task RemoveManagedLocationAsync(System.Guid userID, string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedLocations", ReplyAction="http://tempuri.org/IClientService/AddManagedLocationsResponse")]
        void AddManagedLocations(System.Guid userID, string[] locationNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddManagedLocations", ReplyAction="http://tempuri.org/IClientService/AddManagedLocationsResponse")]
        System.Threading.Tasks.Task AddManagedLocationsAsync(System.Guid userID, string[] locationNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedLocations", ReplyAction="http://tempuri.org/IClientService/RemoveManagedLocationsResponse")]
        void RemoveManagedLocations(System.Guid userID, string[] locationNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveManagedLocations", ReplyAction="http://tempuri.org/IClientService/RemoveManagedLocationsResponse")]
        System.Threading.Tasks.Task RemoveManagedLocationsAsync(System.Guid userID, string[] locationNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSearchableUserListForUser", ReplyAction="http://tempuri.org/IClientService/GetSearchableUserListForUserResponse")]
        CallRex.UnderWriting.CallRexClientService.UserListItem[] GetSearchableUserListForUser(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSearchableUserListForUser", ReplyAction="http://tempuri.org/IClientService/GetSearchableUserListForUserResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetSearchableUserListForUserAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSearchableFlagsForUser", ReplyAction="http://tempuri.org/IClientService/GetSearchableFlagsForUserResponse")]
        CallRex.UnderWriting.CallRexClientService.Flag[] GetSearchableFlagsForUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSearchableFlagsForUser", ReplyAction="http://tempuri.org/IClientService/GetSearchableFlagsForUserResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Flag[]> GetSearchableFlagsForUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetFlagsListForUser", ReplyAction="http://tempuri.org/IClientService/GetFlagsListForUserResponse")]
        CallRex.UnderWriting.CallRexClientService.Flag[] GetFlagsListForUser(System.Guid ownerUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetFlagsListForUser", ReplyAction="http://tempuri.org/IClientService/GetFlagsListForUserResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Flag[]> GetFlagsListForUserAsync(System.Guid ownerUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddFlag", ReplyAction="http://tempuri.org/IClientService/AddFlagResponse")]
        void AddFlag(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddFlag", ReplyAction="http://tempuri.org/IClientService/AddFlagResponse")]
        System.Threading.Tasks.Task AddFlagAsync(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateFlag", ReplyAction="http://tempuri.org/IClientService/UpdateFlagResponse")]
        void UpdateFlag(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateFlag", ReplyAction="http://tempuri.org/IClientService/UpdateFlagResponse")]
        System.Threading.Tasks.Task UpdateFlagAsync(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteFlag", ReplyAction="http://tempuri.org/IClientService/DeleteFlagResponse")]
        void DeleteFlag(System.Guid OwnerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteFlag", ReplyAction="http://tempuri.org/IClientService/DeleteFlagResponse")]
        System.Threading.Tasks.Task DeleteFlagAsync(System.Guid OwnerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedCalls", ReplyAction="http://tempuri.org/IClientService/GetRecordedCallsResponse")]
        CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] GetRecordedCalls(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedCalls", ReplyAction="http://tempuri.org/IClientService/GetRecordedCallsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[]> GetRecordedCallsAsync(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedMediaByID", ReplyAction="http://tempuri.org/IClientService/GetRecordedMediaByIDResponse")]
        CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] GetRecordedMediaByID(string recordingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedMediaByID", ReplyAction="http://tempuri.org/IClientService/GetRecordedMediaByIDResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[]> GetRecordedMediaByIDAsync(string recordingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedCallChain", ReplyAction="http://tempuri.org/IClientService/GetRecordedCallChainResponse")]
        CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] GetRecordedCallChain(System.Guid UserId, System.Guid RecordingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedCallChain", ReplyAction="http://tempuri.org/IClientService/GetRecordedCallChainResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[]> GetRecordedCallChainAsync(System.Guid UserId, System.Guid RecordingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAttachedDataByCallLogID", ReplyAction="http://tempuri.org/IClientService/GetAttachedDataByCallLogIDResponse")]
        CallRex.UnderWriting.CallRexClientService.AttachedDataContainer GetAttachedDataByCallLogID(System.Guid callLogID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAttachedDataByCallLogID", ReplyAction="http://tempuri.org/IClientService/GetAttachedDataByCallLogIDResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> GetAttachedDataByCallLogIDAsync(System.Guid callLogID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateAttachedDataByCallLogID", ReplyAction="http://tempuri.org/IClientService/UpdateAttachedDataByCallLogIDResponse")]
        CallRex.UnderWriting.CallRexClientService.AttachedDataContainer UpdateAttachedDataByCallLogID(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateAttachedDataByCallLogID", ReplyAction="http://tempuri.org/IClientService/UpdateAttachedDataByCallLogIDResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> UpdateAttachedDataByCallLogIDAsync(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAttachedDataByScreenRecordingID", ReplyAction="http://tempuri.org/IClientService/GetAttachedDataByScreenRecordingIDResponse")]
        CallRex.UnderWriting.CallRexClientService.AttachedDataContainer GetAttachedDataByScreenRecordingID(System.Guid ScreenRecordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetAttachedDataByScreenRecordingID", ReplyAction="http://tempuri.org/IClientService/GetAttachedDataByScreenRecordingIDResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> GetAttachedDataByScreenRecordingIDAsync(System.Guid ScreenRecordingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateAttachedDataByScreenRecordingID", ReplyAction="http://tempuri.org/IClientService/UpdateAttachedDataByScreenRecordingIDResponse")]
        CallRex.UnderWriting.CallRexClientService.AttachedDataContainer UpdateAttachedDataByScreenRecordingID(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateAttachedDataByScreenRecordingID", ReplyAction="http://tempuri.org/IClientService/UpdateAttachedDataByScreenRecordingIDResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> UpdateAttachedDataByScreenRecordingIDAsync(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCurrentCallByUserID", ReplyAction="http://tempuri.org/IClientService/GetCurrentCallByUserIDResponse")]
        CallRex.UnderWriting.CallRexClientService.RecordedCallContainer GetCurrentCallByUserID(System.Guid userID, string telephonyCallIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCurrentCallByUserID", ReplyAction="http://tempuri.org/IClientService/GetCurrentCallByUserIDResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedCallContainer> GetCurrentCallByUserIDAsync(System.Guid userID, string telephonyCallIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserMonitorInfo", ReplyAction="http://tempuri.org/IClientService/GetUserMonitorInfoResponse")]
        CallRex.UnderWriting.CallRexClientService.UserMonitorInfo GetUserMonitorInfo(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserMonitorInfo", ReplyAction="http://tempuri.org/IClientService/GetUserMonitorInfoResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserMonitorInfo> GetUserMonitorInfoAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSavedSearch", ReplyAction="http://tempuri.org/IClientService/AddSavedSearchResponse")]
        void AddSavedSearch(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSavedSearch", ReplyAction="http://tempuri.org/IClientService/AddSavedSearchResponse")]
        System.Threading.Tasks.Task AddSavedSearchAsync(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateSavedSearch", ReplyAction="http://tempuri.org/IClientService/UpdateSavedSearchResponse")]
        void UpdateSavedSearch(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateSavedSearch", ReplyAction="http://tempuri.org/IClientService/UpdateSavedSearchResponse")]
        System.Threading.Tasks.Task UpdateSavedSearchAsync(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteSavedSearch", ReplyAction="http://tempuri.org/IClientService/DeleteSavedSearchResponse")]
        void DeleteSavedSearch(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteSavedSearch", ReplyAction="http://tempuri.org/IClientService/DeleteSavedSearchResponse")]
        System.Threading.Tasks.Task DeleteSavedSearchAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedSearch", ReplyAction="http://tempuri.org/IClientService/GetSavedSearchResponse")]
        CallRex.UnderWriting.CallRexClientService.SavedSearch GetSavedSearch(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedSearch", ReplyAction="http://tempuri.org/IClientService/GetSavedSearchResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedSearch> GetSavedSearchAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedSearchList", ReplyAction="http://tempuri.org/IClientService/GetSavedSearchListResponse")]
        CallRex.UnderWriting.CallRexClientService.SavedSearch[] GetSavedSearchList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedSearchList", ReplyAction="http://tempuri.org/IClientService/GetSavedSearchListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedSearch[]> GetSavedSearchListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserSecurityProfile", ReplyAction="http://tempuri.org/IClientService/GetUserSecurityProfileResponse")]
        CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails GetUserSecurityProfile(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetUserSecurityProfile", ReplyAction="http://tempuri.org/IClientService/GetUserSecurityProfileResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails> GetUserSecurityProfileAsync(System.Guid userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComputerRecordings", ReplyAction="http://tempuri.org/IClientService/GetComputerRecordingsResponse")]
        CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] GetComputerRecordings(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComputerRecordings", ReplyAction="http://tempuri.org/IClientService/GetComputerRecordingsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[]> GetComputerRecordingsAsync(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedMedia", ReplyAction="http://tempuri.org/IClientService/GetRecordedMediaResponse")]
        CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] GetRecordedMedia(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetRecordedMedia", ReplyAction="http://tempuri.org/IClientService/GetRecordedMediaResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[]> GetRecordedMediaAsync(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSearchableRecordedMediaTypesForUser", ReplyAction="http://tempuri.org/IClientService/GetSearchableRecordedMediaTypesForUserResponse")]
        CallRex.UnderWriting.CallRexClientService.RecordedMediaType[] GetSearchableRecordedMediaTypesForUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSearchableRecordedMediaTypesForUser", ReplyAction="http://tempuri.org/IClientService/GetSearchableRecordedMediaTypesForUserResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaType[]> GetSearchableRecordedMediaTypesForUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedReportListComplete", ReplyAction="http://tempuri.org/IClientService/GetSavedReportListCompleteResponse")]
        CallRex.UnderWriting.CallRexClientService.SavedReport[] GetSavedReportListComplete();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedReportListComplete", ReplyAction="http://tempuri.org/IClientService/GetSavedReportListCompleteResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedReport[]> GetSavedReportListCompleteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedReportList", ReplyAction="http://tempuri.org/IClientService/GetSavedReportListResponse")]
        CallRex.UnderWriting.CallRexClientService.SavedReport[] GetSavedReportList(System.Guid reportid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedReportList", ReplyAction="http://tempuri.org/IClientService/GetSavedReportListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedReport[]> GetSavedReportListAsync(System.Guid reportid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSavedReport", ReplyAction="http://tempuri.org/IClientService/AddSavedReportResponse")]
        void AddSavedReport(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSavedReport", ReplyAction="http://tempuri.org/IClientService/AddSavedReportResponse")]
        System.Threading.Tasks.Task AddSavedReportAsync(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateSavedReport", ReplyAction="http://tempuri.org/IClientService/UpdateSavedReportResponse")]
        void UpdateSavedReport(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateSavedReport", ReplyAction="http://tempuri.org/IClientService/UpdateSavedReportResponse")]
        System.Threading.Tasks.Task UpdateSavedReportAsync(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteSavedReport", ReplyAction="http://tempuri.org/IClientService/DeleteSavedReportResponse")]
        void DeleteSavedReport(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteSavedReport", ReplyAction="http://tempuri.org/IClientService/DeleteSavedReportResponse")]
        System.Threading.Tasks.Task DeleteSavedReportAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedReport", ReplyAction="http://tempuri.org/IClientService/GetSavedReportResponse")]
        CallRex.UnderWriting.CallRexClientService.SavedReport GetSavedReport(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSavedReport", ReplyAction="http://tempuri.org/IClientService/GetSavedReportResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedReport> GetSavedReportAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetReportList", ReplyAction="http://tempuri.org/IClientService/GetReportListResponse")]
        CallRex.UnderWriting.CallRexClientService.Report[] GetReportList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetReportList", ReplyAction="http://tempuri.org/IClientService/GetReportListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Report[]> GetReportListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetProfileMemberList", ReplyAction="http://tempuri.org/IClientService/GetProfileMemberListResponse")]
        CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetProfileMemberList(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetProfileMemberList", ReplyAction="http://tempuri.org/IClientService/GetProfileMemberListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetProfileMemberListAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetProfileNonMemberList", ReplyAction="http://tempuri.org/IClientService/GetProfileNonMemberListResponse")]
        CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetProfileNonMemberList(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetProfileNonMemberList", ReplyAction="http://tempuri.org/IClientService/GetProfileNonMemberListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetProfileNonMemberListAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddUsersToProfile", ReplyAction="http://tempuri.org/IClientService/AddUsersToProfileResponse")]
        void AddUsersToProfile(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddUsersToProfile", ReplyAction="http://tempuri.org/IClientService/AddUsersToProfileResponse")]
        System.Threading.Tasks.Task AddUsersToProfileAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveUsersFromProfile", ReplyAction="http://tempuri.org/IClientService/RemoveUsersFromProfileResponse")]
        void RemoveUsersFromProfile(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/RemoveUsersFromProfile", ReplyAction="http://tempuri.org/IClientService/RemoveUsersFromProfileResponse")]
        System.Threading.Tasks.Task RemoveUsersFromProfileAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSecurityProfileList", ReplyAction="http://tempuri.org/IClientService/GetSecurityProfileListResponse")]
        CallRex.UnderWriting.CallRexClientService.SecurityProfileListItem[] GetSecurityProfileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSecurityProfileList", ReplyAction="http://tempuri.org/IClientService/GetSecurityProfileListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SecurityProfileListItem[]> GetSecurityProfileListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSecurityProfileDetails", ReplyAction="http://tempuri.org/IClientService/GetSecurityProfileDetailsResponse")]
        CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails GetSecurityProfileDetails(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetSecurityProfileDetails", ReplyAction="http://tempuri.org/IClientService/GetSecurityProfileDetailsResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails> GetSecurityProfileDetailsAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSecurityProfile", ReplyAction="http://tempuri.org/IClientService/AddSecurityProfileResponse")]
        void AddSecurityProfile(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddSecurityProfile", ReplyAction="http://tempuri.org/IClientService/AddSecurityProfileResponse")]
        System.Threading.Tasks.Task AddSecurityProfileAsync(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateSecurityProfile", ReplyAction="http://tempuri.org/IClientService/UpdateSecurityProfileResponse")]
        void UpdateSecurityProfile(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateSecurityProfile", ReplyAction="http://tempuri.org/IClientService/UpdateSecurityProfileResponse")]
        System.Threading.Tasks.Task UpdateSecurityProfileAsync(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteSecurityProfile", ReplyAction="http://tempuri.org/IClientService/DeleteSecurityProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileNotDeletableFault), Action="http://tempuri.org/IClientService/DeleteSecurityProfileProfileNotDeletableFaultFa" +
            "ult", Name="ProfileNotDeletableFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileInUseFault), Action="http://tempuri.org/IClientService/DeleteSecurityProfileProfileInUseFaultFault", Name="ProfileInUseFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        void DeleteSecurityProfile(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteSecurityProfile", ReplyAction="http://tempuri.org/IClientService/DeleteSecurityProfileResponse")]
        System.Threading.Tasks.Task DeleteSecurityProfileAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallRecordingProfileList", ReplyAction="http://tempuri.org/IClientService/GetCallRecordingProfileListResponse")]
        CallRex.UnderWriting.CallRexClientService.CallRecordingProfileListItem[] GetCallRecordingProfileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallRecordingProfileList", ReplyAction="http://tempuri.org/IClientService/GetCallRecordingProfileListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.CallRecordingProfileListItem[]> GetCallRecordingProfileListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/GetCallRecordingProfileResponse")]
        CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails GetCallRecordingProfile(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/GetCallRecordingProfileResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails> GetCallRecordingProfileAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/AddCallRecordingProfileResponse")]
        void AddCallRecordingProfile(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/AddCallRecordingProfileResponse")]
        System.Threading.Tasks.Task AddCallRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/UpdateCallRecordingProfileResponse")]
        void UpdateCallRecordingProfile(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/UpdateCallRecordingProfileResponse")]
        System.Threading.Tasks.Task UpdateCallRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/DeleteCallRecordingProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CallRex.UnderWriting.CallRexClientService.ProfileInUseFault), Action="http://tempuri.org/IClientService/DeleteCallRecordingProfileProfileInUseFaultFaul" +
            "t", Name="ProfileInUseFault", Namespace="http://schemas.datacontract.org/2004/07/DataService")]
        void DeleteCallRecordingProfile(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/DeleteCallRecordingProfileResponse")]
        System.Threading.Tasks.Task DeleteCallRecordingProfileAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetDefaultCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/SetDefaultCallRecordingProfileResponse")]
        void SetDefaultCallRecordingProfile(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetDefaultCallRecordingProfile", ReplyAction="http://tempuri.org/IClientService/SetDefaultCallRecordingProfileResponse")]
        System.Threading.Tasks.Task SetDefaultCallRecordingProfileAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScreenRecordingProfileList", ReplyAction="http://tempuri.org/IClientService/GetScreenRecordingProfileListResponse")]
        CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileListItem[] GetScreenRecordingProfileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScreenRecordingProfileList", ReplyAction="http://tempuri.org/IClientService/GetScreenRecordingProfileListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileListItem[]> GetScreenRecordingProfileListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/GetScreenRecordingProfileResponse")]
        CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails GetScreenRecordingProfile(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/GetScreenRecordingProfileResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails> GetScreenRecordingProfileAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/AddScreenRecordingProfileResponse")]
        void AddScreenRecordingProfile(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/AddScreenRecordingProfileResponse")]
        System.Threading.Tasks.Task AddScreenRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/UpdateScreenRecordingProfileResponse")]
        void UpdateScreenRecordingProfile(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/UpdateScreenRecordingProfileResponse")]
        System.Threading.Tasks.Task UpdateScreenRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/DeleteScreenRecordingProfileResponse")]
        void DeleteScreenRecordingProfile(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/DeleteScreenRecordingProfileResponse")]
        System.Threading.Tasks.Task DeleteScreenRecordingProfileAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetDefaultScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/SetDefaultScreenRecordingProfileResponse")]
        void SetDefaultScreenRecordingProfile(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SetDefaultScreenRecordingProfile", ReplyAction="http://tempuri.org/IClientService/SetDefaultScreenRecordingProfileResponse")]
        System.Threading.Tasks.Task SetDefaultScreenRecordingProfileAsync(System.Guid profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetServiceList", ReplyAction="http://tempuri.org/IClientService/GetServiceListResponse")]
        CallRex.UnderWriting.CallRexClientService.ServiceListItem[] GetServiceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetServiceList", ReplyAction="http://tempuri.org/IClientService/GetServiceListResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ServiceListItem[]> GetServiceListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetService", ReplyAction="http://tempuri.org/IClientService/GetServiceResponse")]
        CallRex.UnderWriting.CallRexClientService.ServiceSettings GetService(System.Guid serviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetService", ReplyAction="http://tempuri.org/IClientService/GetServiceResponse")]
        System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ServiceSettings> GetServiceAsync(System.Guid serviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddService", ReplyAction="http://tempuri.org/IClientService/AddServiceResponse")]
        void AddService(CallRex.UnderWriting.CallRexClientService.ServiceSettings service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddService", ReplyAction="http://tempuri.org/IClientService/AddServiceResponse")]
        System.Threading.Tasks.Task AddServiceAsync(CallRex.UnderWriting.CallRexClientService.ServiceSettings service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateService", ReplyAction="http://tempuri.org/IClientService/UpdateServiceResponse")]
        void UpdateService(CallRex.UnderWriting.CallRexClientService.ServiceSettings service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateService", ReplyAction="http://tempuri.org/IClientService/UpdateServiceResponse")]
        System.Threading.Tasks.Task UpdateServiceAsync(CallRex.UnderWriting.CallRexClientService.ServiceSettings service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteService", ReplyAction="http://tempuri.org/IClientService/DeleteServiceResponse")]
        void DeleteService(System.Guid serviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteService", ReplyAction="http://tempuri.org/IClientService/DeleteServiceResponse")]
        System.Threading.Tasks.Task DeleteServiceAsync(System.Guid serviceID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : CallRex.UnderWriting.CallRexClientService.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<CallRex.UnderWriting.CallRexClientService.IClientService>, CallRex.UnderWriting.CallRexClientService.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CallRex.UnderWriting.CallRexClientService.GeneralSettings GetGeneralSettings() {
            return base.Channel.GetGeneralSettings();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GeneralSettings> GetGeneralSettingsAsync() {
            return base.Channel.GetGeneralSettingsAsync();
        }
        
        public void UpdateGeneralSettings(CallRex.UnderWriting.CallRexClientService.GeneralSettings settings) {
            base.Channel.UpdateGeneralSettings(settings);
        }
        
        public System.Threading.Tasks.Task UpdateGeneralSettingsAsync(CallRex.UnderWriting.CallRexClientService.GeneralSettings settings) {
            return base.Channel.UpdateGeneralSettingsAsync(settings);
        }
        
        public CallRex.UnderWriting.CallRexClientService.LicenseInfo[] GetLicenseList() {
            return base.Channel.GetLicenseList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.LicenseInfo[]> GetLicenseListAsync() {
            return base.Channel.GetLicenseListAsync();
        }
        
        public void InvalidateLicenseList() {
            base.Channel.InvalidateLicenseList();
        }
        
        public System.Threading.Tasks.Task InvalidateLicenseListAsync() {
            return base.Channel.InvalidateLicenseListAsync();
        }
        
        public string GetServerToken() {
            return base.Channel.GetServerToken();
        }
        
        public System.Threading.Tasks.Task<string> GetServerTokenAsync() {
            return base.Channel.GetServerTokenAsync();
        }
        
        public void SetLicenseKey(string licenseKey) {
            base.Channel.SetLicenseKey(licenseKey);
        }
        
        public System.Threading.Tasks.Task SetLicenseKeyAsync(string licenseKey) {
            return base.Channel.SetLicenseKeyAsync(licenseKey);
        }
        
        public CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetFileTransferAddress(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetFileTransferAddress(recordingID, recordingType, fileTransferReason);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetFileTransferAddressAsync(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetFileTransferAddressAsync(recordingID, recordingType, fileTransferReason);
        }
        
        public CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetZippedFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetZippedFilesTransferAddress(recordings, recordingType, ZipTargetFileName, fileTransferReason);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetZippedFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetZippedFilesTransferAddressAsync(recordings, recordingType, ZipTargetFileName, fileTransferReason);
        }
        
        public CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetZippedMediaFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] recordings, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetZippedMediaFilesTransferAddress(recordings, ZipTargetFileName, fileTransferReason);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetZippedMediaFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] recordings, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetZippedMediaFilesTransferAddressAsync(recordings, ZipTargetFileName, fileTransferReason);
        }
        
        public CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetZippedComputerRecordingFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetZippedComputerRecordingFilesTransferAddress(recordings, recordingType, ZipTargetFileName, fileTransferReason);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetZippedComputerRecordingFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string ZipTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetZippedComputerRecordingFilesTransferAddressAsync(recordings, recordingType, ZipTargetFileName, fileTransferReason);
        }
        
        public CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetMergedWavFilesTransferAddress(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string MergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetMergedWavFilesTransferAddress(recordings, recordingType, MergedWavTargetFileName, fileTransferReason);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetMergedWavFilesTransferAddressAsync(CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] recordings, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string MergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetMergedWavFilesTransferAddressAsync(recordings, recordingType, MergedWavTargetFileName, fileTransferReason);
        }
        
        public CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetMergedWavFilesTransferAddressViaRecording(System.Guid userId, System.Guid selectedRecording, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string mergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetMergedWavFilesTransferAddressViaRecording(userId, selectedRecording, recordingType, mergedWavTargetFileName, fileTransferReason);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetMergedWavFilesTransferAddressViaRecordingAsync(System.Guid userId, System.Guid selectedRecording, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType, string mergedWavTargetFileName, CallRex.UnderWriting.CallRexClientService.FileTransferReason fileTransferReason) {
            return base.Channel.GetMergedWavFilesTransferAddressViaRecordingAsync(userId, selectedRecording, recordingType, mergedWavTargetFileName, fileTransferReason);
        }
        
        public bool DeleteRecording(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType) {
            return base.Channel.DeleteRecording(recordingID, recordingType);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRecordingAsync(System.Guid recordingID, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType) {
            return base.Channel.DeleteRecordingAsync(recordingID, recordingType);
        }
        
        public System.Guid[] DeleteRecordings(System.Guid[] recordingIDs, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType) {
            return base.Channel.DeleteRecordings(recordingIDs, recordingType);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> DeleteRecordingsAsync(System.Guid[] recordingIDs, CallRex.UnderWriting.CallRexClientService.RecordingType recordingType) {
            return base.Channel.DeleteRecordingsAsync(recordingIDs, recordingType);
        }
        
        public bool IsRecordingValid(System.Guid recordingID) {
            return base.Channel.IsRecordingValid(recordingID);
        }
        
        public System.Threading.Tasks.Task<bool> IsRecordingValidAsync(System.Guid recordingID) {
            return base.Channel.IsRecordingValidAsync(recordingID);
        }
        
        public void StartOnDemandRecording(System.Guid userID) {
            base.Channel.StartOnDemandRecording(userID);
        }
        
        public System.Threading.Tasks.Task StartOnDemandRecordingAsync(System.Guid userID) {
            return base.Channel.StartOnDemandRecordingAsync(userID);
        }
        
        public void StopOnDemandRecording(System.Guid userID) {
            base.Channel.StopOnDemandRecording(userID);
        }
        
        public System.Threading.Tasks.Task StopOnDemandRecordingAsync(System.Guid userID) {
            return base.Channel.StopOnDemandRecordingAsync(userID);
        }
        
        public void PauseOnDemandRecording(System.Guid userID) {
            base.Channel.PauseOnDemandRecording(userID);
        }
        
        public System.Threading.Tasks.Task PauseOnDemandRecordingAsync(System.Guid userID) {
            return base.Channel.PauseOnDemandRecordingAsync(userID);
        }
        
        public void ResumeOnDemandRecording(System.Guid userID) {
            base.Channel.ResumeOnDemandRecording(userID);
        }
        
        public System.Threading.Tasks.Task ResumeOnDemandRecordingAsync(System.Guid userID) {
            return base.Channel.ResumeOnDemandRecordingAsync(userID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.EncryptionInfo GetEncryptionInfo() {
            return base.Channel.GetEncryptionInfo();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.EncryptionInfo> GetEncryptionInfoAsync() {
            return base.Channel.GetEncryptionInfoAsync();
        }
        
        public string SetNewEncryptionKey(string username1, string password1, string username2, string password2, bool revokeExistingKeys, bool enableEncryption) {
            return base.Channel.SetNewEncryptionKey(username1, password1, username2, password2, revokeExistingKeys, enableEncryption);
        }
        
        public System.Threading.Tasks.Task<string> SetNewEncryptionKeyAsync(string username1, string password1, string username2, string password2, bool revokeExistingKeys, bool enableEncryption) {
            return base.Channel.SetNewEncryptionKeyAsync(username1, password1, username2, password2, revokeExistingKeys, enableEncryption);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ServiceListItem[] GetCallRecordingServiceList() {
            return base.Channel.GetCallRecordingServiceList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ServiceListItem[]> GetCallRecordingServiceListAsync() {
            return base.Channel.GetCallRecordingServiceListAsync();
        }
        
        public string[] GetLocationList() {
            return base.Channel.GetLocationList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetLocationListAsync() {
            return base.Channel.GetLocationListAsync();
        }
        
        public string[] GetDepartmentList() {
            return base.Channel.GetDepartmentList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDepartmentListAsync() {
            return base.Channel.GetDepartmentListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.PbxListItem[] GetPbxList() {
            return base.Channel.GetPbxList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.PbxListItem[]> GetPbxListAsync() {
            return base.Channel.GetPbxListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] GetUserPreferences(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences, bool persistPassed) {
            return base.Channel.GetUserPreferences(preferences, persistPassed);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[]> GetUserPreferencesAsync(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences, bool persistPassed) {
            return base.Channel.GetUserPreferencesAsync(preferences, persistPassed);
        }
        
        public void SetUserPreferences(System.Guid userID, CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences) {
            base.Channel.SetUserPreferences(userID, preferences);
        }
        
        public System.Threading.Tasks.Task SetUserPreferencesAsync(System.Guid userID, CallRex.UnderWriting.CallRexClientService.UserPreferenceItem[] preferences) {
            return base.Channel.SetUserPreferencesAsync(userID, preferences);
        }
        
        public void SetUserPreference(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem preference) {
            base.Channel.SetUserPreference(preference);
        }
        
        public System.Threading.Tasks.Task SetUserPreferenceAsync(CallRex.UnderWriting.CallRexClientService.UserPreferenceItem preference) {
            return base.Channel.SetUserPreferenceAsync(preference);
        }
        
        public CallRex.UnderWriting.CallRexClientService.AuditLog[] GetAuditLogList(System.Guid[] userIds, System.DateTime startDate, System.DateTime endDate, string action, string targetType, System.Nullable<System.Guid> targetId) {
            return base.Channel.GetAuditLogList(userIds, startDate, endDate, action, targetType, targetId);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AuditLog[]> GetAuditLogListAsync(System.Guid[] userIds, System.DateTime startDate, System.DateTime endDate, string action, string targetType, System.Nullable<System.Guid> targetId) {
            return base.Channel.GetAuditLogListAsync(userIds, startDate, endDate, action, targetType, targetId);
        }
        
        public CallRex.UnderWriting.CallRexClientService.AuditActionType[] GetAuditActionTypeList() {
            return base.Channel.GetAuditActionTypeList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AuditActionType[]> GetAuditActionTypeListAsync() {
            return base.Channel.GetAuditActionTypeListAsync();
        }
        
        public void AddAuditLog(CallRex.UnderWriting.CallRexClientService.AuditAction action, CallRex.UnderWriting.CallRexClientService.AuditTargetType targetType, System.Nullable<System.Guid> targetId) {
            base.Channel.AddAuditLog(action, targetType, targetId);
        }
        
        public System.Threading.Tasks.Task AddAuditLogAsync(CallRex.UnderWriting.CallRexClientService.AuditAction action, CallRex.UnderWriting.CallRexClientService.AuditTargetType targetType, System.Nullable<System.Guid> targetId) {
            return base.Channel.AddAuditLogAsync(action, targetType, targetId);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserDetails[] GetComputerRecordingUserDetails(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetComputerRecordingUserDetails(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails[]> GetComputerRecordingUserDetailsAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetComputerRecordingUserDetailsAsync(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public CallRex.UnderWriting.CallRexClientService.GuidPair CheckAvailabilityForComputerMonitoring(System.Guid monitorTarget) {
            return base.Channel.CheckAvailabilityForComputerMonitoring(monitorTarget);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GuidPair> CheckAvailabilityForComputerMonitoringAsync(System.Guid monitorTarget) {
            return base.Channel.CheckAvailabilityForComputerMonitoringAsync(monitorTarget);
        }
        
        public System.Uri PrepareComputerRecordingForStream(System.Guid clientToken, System.Guid screenRecordingID) {
            return base.Channel.PrepareComputerRecordingForStream(clientToken, screenRecordingID);
        }
        
        public System.Threading.Tasks.Task<System.Uri> PrepareComputerRecordingForStreamAsync(System.Guid clientToken, System.Guid screenRecordingID) {
            return base.Channel.PrepareComputerRecordingForStreamAsync(clientToken, screenRecordingID);
        }
        
        public void ReleaseComputerRecordingStreamResources(System.Guid clientToken, System.Guid screenRecordingID) {
            base.Channel.ReleaseComputerRecordingStreamResources(clientToken, screenRecordingID);
        }
        
        public System.Threading.Tasks.Task ReleaseComputerRecordingStreamResourcesAsync(System.Guid clientToken, System.Guid screenRecordingID) {
            return base.Channel.ReleaseComputerRecordingStreamResourcesAsync(clientToken, screenRecordingID);
        }
        
        public void StartOnDemandScreenRecording(System.Guid userID) {
            base.Channel.StartOnDemandScreenRecording(userID);
        }
        
        public System.Threading.Tasks.Task StartOnDemandScreenRecordingAsync(System.Guid userID) {
            return base.Channel.StartOnDemandScreenRecordingAsync(userID);
        }
        
        public void StopOnDemandScreenRecording(System.Guid userID) {
            base.Channel.StopOnDemandScreenRecording(userID);
        }
        
        public System.Threading.Tasks.Task StopOnDemandScreenRecordingAsync(System.Guid userID) {
            return base.Channel.StopOnDemandScreenRecordingAsync(userID);
        }
        
        public void PauseOnDemandScreenRecording(System.Guid userID) {
            base.Channel.PauseOnDemandScreenRecording(userID);
        }
        
        public System.Threading.Tasks.Task PauseOnDemandScreenRecordingAsync(System.Guid userID) {
            return base.Channel.PauseOnDemandScreenRecordingAsync(userID);
        }
        
        public void ResumeOnDemandScreenRecording(System.Guid userID) {
            base.Channel.ResumeOnDemandScreenRecording(userID);
        }
        
        public System.Threading.Tasks.Task ResumeOnDemandScreenRecordingAsync(System.Guid userID) {
            return base.Channel.ResumeOnDemandScreenRecordingAsync(userID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.GuidPair[] GetExpiredCallRecording(System.Guid profileID, System.DateTime endingPriorTo) {
            return base.Channel.GetExpiredCallRecording(profileID, endingPriorTo);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GuidPair[]> GetExpiredCallRecordingAsync(System.Guid profileID, System.DateTime endingPriorTo) {
            return base.Channel.GetExpiredCallRecordingAsync(profileID, endingPriorTo);
        }
        
        public CallRex.UnderWriting.CallRexClientService.GuidPair[] GetExpiredComputerRecording(System.Guid profileID, System.DateTime endingPriorTo) {
            return base.Channel.GetExpiredComputerRecording(profileID, endingPriorTo);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.GuidPair[]> GetExpiredComputerRecordingAsync(System.Guid profileID, System.DateTime endingPriorTo) {
            return base.Channel.GetExpiredComputerRecordingAsync(profileID, endingPriorTo);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ComputerRecordingDeployment[] GetComputerRecordingDeployments() {
            return base.Channel.GetComputerRecordingDeployments();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ComputerRecordingDeployment[]> GetComputerRecordingDeploymentsAsync() {
            return base.Channel.GetComputerRecordingDeploymentsAsync();
        }
        
        public void RemoveComputerRecordingDeployment(System.Guid id) {
            base.Channel.RemoveComputerRecordingDeployment(id);
        }
        
        public System.Threading.Tasks.Task RemoveComputerRecordingDeploymentAsync(System.Guid id) {
            return base.Channel.RemoveComputerRecordingDeploymentAsync(id);
        }
        
        public CallRex.UnderWriting.CallRexClientService.FileTransferInfo GetPermissibleFileTransferAddress(System.Guid recordingID) {
            return base.Channel.GetPermissibleFileTransferAddress(recordingID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.FileTransferInfo> GetPermissibleFileTransferAddressAsync(System.Guid recordingID) {
            return base.Channel.GetPermissibleFileTransferAddressAsync(recordingID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode[] DiscoverADPath(CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode node) {
            return base.Channel.DiscoverADPath(node);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode[]> DiscoverADPathAsync(CallRex.UnderWriting.CallRexClientService.SerializedActiveDirectoryNode node) {
            return base.Channel.DiscoverADPathAsync(node);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ArchiveListItem[] GetArchiveList() {
            return base.Channel.GetArchiveList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ArchiveListItem[]> GetArchiveListAsync() {
            return base.Channel.GetArchiveListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem[] GetArchiveTasks() {
            return base.Channel.GetArchiveTasks();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem[]> GetArchiveTasksAsync() {
            return base.Channel.GetArchiveTasksAsync();
        }
        
        public void UpdateArchiveTask(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli) {
            base.Channel.UpdateArchiveTask(atli);
        }
        
        public System.Threading.Tasks.Task UpdateArchiveTaskAsync(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli) {
            return base.Channel.UpdateArchiveTaskAsync(atli);
        }
        
        public System.Guid AddArchiveTask(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli) {
            return base.Channel.AddArchiveTask(atli);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddArchiveTaskAsync(CallRex.UnderWriting.CallRexClientService.ArchiveTaskListItem atli) {
            return base.Channel.AddArchiveTaskAsync(atli);
        }
        
        public CallRex.UnderWriting.CallRexClientService.DataSourceListItem[] GetRemoteDataSources() {
            return base.Channel.GetRemoteDataSources();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.DataSourceListItem[]> GetRemoteDataSourcesAsync() {
            return base.Channel.GetRemoteDataSourcesAsync();
        }
        
        public System.Guid AddRemoteDataSource(CallRex.UnderWriting.CallRexClientService.RemoteDataSourceCreationItem dsci) {
            return base.Channel.AddRemoteDataSource(dsci);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddRemoteDataSourceAsync(CallRex.UnderWriting.CallRexClientService.RemoteDataSourceCreationItem dsci) {
            return base.Channel.AddRemoteDataSourceAsync(dsci);
        }
        
        public CallRex.UnderWriting.CallRexClientService.DataSourceListItem[] GetArchiveSourceDataSources() {
            return base.Channel.GetArchiveSourceDataSources();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.DataSourceListItem[]> GetArchiveSourceDataSourcesAsync() {
            return base.Channel.GetArchiveSourceDataSourcesAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserListItem[] GetSubordinatesList(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus) {
            return base.Channel.GetSubordinatesList(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly, licenseStatus);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetSubordinatesListAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus) {
            return base.Channel.GetSubordinatesListAsync(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly, licenseStatus);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserListItem[] GetEvaluatorsList() {
            return base.Channel.GetEvaluatorsList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetEvaluatorsListAsync() {
            return base.Channel.GetEvaluatorsListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.EvaluationSummary[] GetEvaluations(System.Guid[] subordinates, System.Guid[] evaluators, System.Guid[] scorecards, System.DateTime rangeFrom, System.DateTime rangeTo, bool includeIncompleteEvaluations, bool includeCompleteEvaluations) {
            return base.Channel.GetEvaluations(subordinates, evaluators, scorecards, rangeFrom, rangeTo, includeIncompleteEvaluations, includeCompleteEvaluations);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.EvaluationSummary[]> GetEvaluationsAsync(System.Guid[] subordinates, System.Guid[] evaluators, System.Guid[] scorecards, System.DateTime rangeFrom, System.DateTime rangeTo, bool includeIncompleteEvaluations, bool includeCompleteEvaluations) {
            return base.Channel.GetEvaluationsAsync(subordinates, evaluators, scorecards, rangeFrom, rangeTo, includeIncompleteEvaluations, includeCompleteEvaluations);
        }
        
        public CallRex.UnderWriting.CallRexClientService.EvaluationDetails GetEvaluation(System.Guid evaluationGuid) {
            return base.Channel.GetEvaluation(evaluationGuid);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.EvaluationDetails> GetEvaluationAsync(System.Guid evaluationGuid) {
            return base.Channel.GetEvaluationAsync(evaluationGuid);
        }
        
        public void DeleteEvaluation(System.Guid evaluationGuid) {
            base.Channel.DeleteEvaluation(evaluationGuid);
        }
        
        public System.Threading.Tasks.Task DeleteEvaluationAsync(System.Guid evaluationGuid) {
            return base.Channel.DeleteEvaluationAsync(evaluationGuid);
        }
        
        public CallRex.UnderWriting.CallRexClientService.Scorecard[] GetScorecards(bool includeDeleted, bool latestVersionOnly) {
            return base.Channel.GetScorecards(includeDeleted, latestVersionOnly);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Scorecard[]> GetScorecardsAsync(bool includeDeleted, bool latestVersionOnly) {
            return base.Channel.GetScorecardsAsync(includeDeleted, latestVersionOnly);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ScorecardCategory[] GetScorecardCategories(bool includeDeleted) {
            return base.Channel.GetScorecardCategories(includeDeleted);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardCategory[]> GetScorecardCategoriesAsync(bool includeDeleted) {
            return base.Channel.GetScorecardCategoriesAsync(includeDeleted);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] GetQuestionCategories(System.Guid scorecardUid) {
            return base.Channel.GetQuestionCategories(scorecardUid);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[]> GetQuestionCategoriesAsync(System.Guid scorecardUid) {
            return base.Channel.GetQuestionCategoriesAsync(scorecardUid);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] GetQuestionsPerCategory(System.Guid questionCategoryUid) {
            return base.Channel.GetQuestionsPerCategory(questionCategoryUid);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[]> GetQuestionsPerCategoryAsync(System.Guid questionCategoryUid) {
            return base.Channel.GetQuestionsPerCategoryAsync(questionCategoryUid);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] GetQuestionsPerScorecard(System.Guid scorecardUid) {
            return base.Channel.GetQuestionsPerScorecard(scorecardUid);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[]> GetQuestionsPerScorecardAsync(System.Guid scorecardUid) {
            return base.Channel.GetQuestionsPerScorecardAsync(scorecardUid);
        }
        
        public void AddCategory(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category) {
            base.Channel.AddCategory(category);
        }
        
        public System.Threading.Tasks.Task AddCategoryAsync(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category) {
            return base.Channel.AddCategoryAsync(category);
        }
        
        public void UpdateCategory(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category) {
            base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task UpdateCategoryAsync(CallRex.UnderWriting.CallRexClientService.ScorecardCategory category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public void UpdateScorecard(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard) {
            base.Channel.UpdateScorecard(scorecard);
        }
        
        public System.Threading.Tasks.Task UpdateScorecardAsync(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard) {
            return base.Channel.UpdateScorecardAsync(scorecard);
        }
        
        public void AddQuestionCategory(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory category) {
            base.Channel.AddQuestionCategory(category);
        }
        
        public System.Threading.Tasks.Task AddQuestionCategoryAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory category) {
            return base.Channel.AddQuestionCategoryAsync(category);
        }
        
        public void AddQuestionCategories(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] categoryList) {
            base.Channel.AddQuestionCategories(categoryList);
        }
        
        public System.Threading.Tasks.Task AddQuestionCategoriesAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestionCategory[] categoryList) {
            return base.Channel.AddQuestionCategoriesAsync(categoryList);
        }
        
        public void AddQuestion(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion question) {
            base.Channel.AddQuestion(question);
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion question) {
            return base.Channel.AddQuestionAsync(question);
        }
        
        public void AddQuestions(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] question) {
            base.Channel.AddQuestions(question);
        }
        
        public System.Threading.Tasks.Task AddQuestionsAsync(CallRex.UnderWriting.CallRexClientService.ScorecardQuestion[] question) {
            return base.Channel.AddQuestionsAsync(question);
        }
        
        public void AddScorecard(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard) {
            base.Channel.AddScorecard(scorecard);
        }
        
        public System.Threading.Tasks.Task AddScorecardAsync(CallRex.UnderWriting.CallRexClientService.Scorecard scorecard) {
            return base.Channel.AddScorecardAsync(scorecard);
        }
        
        public CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] GetAgentEvalRecordedMedia(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue) {
            return base.Channel.GetAgentEvalRecordedMedia(mediaType, userDomain, rangeStart, rangeStop, durationMin, durationMax, direction, CIDCriteria, outgoingNoCriteria, DNISCriteria, flagID, flagValue);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[]> GetAgentEvalRecordedMediaAsync(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue) {
            return base.Channel.GetAgentEvalRecordedMediaAsync(mediaType, userDomain, rangeStart, rangeStop, durationMin, durationMax, direction, CIDCriteria, outgoingNoCriteria, DNISCriteria, flagID, flagValue);
        }
        
        public void BlockAgentEvalCall(System.Guid callLogIDToBlockGuid) {
            base.Channel.BlockAgentEvalCall(callLogIDToBlockGuid);
        }
        
        public System.Threading.Tasks.Task BlockAgentEvalCallAsync(System.Guid callLogIDToBlockGuid) {
            return base.Channel.BlockAgentEvalCallAsync(callLogIDToBlockGuid);
        }
        
        public void SaveEvaluation(CallRex.UnderWriting.CallRexClientService.EvaluationDetails newEvaluation) {
            base.Channel.SaveEvaluation(newEvaluation);
        }
        
        public System.Threading.Tasks.Task SaveEvaluationAsync(CallRex.UnderWriting.CallRexClientService.EvaluationDetails newEvaluation) {
            return base.Channel.SaveEvaluationAsync(newEvaluation);
        }
        
        public void BlockAgentEvalScreenRecording(System.Guid screenRecordingIDToBlockGuid) {
            base.Channel.BlockAgentEvalScreenRecording(screenRecordingIDToBlockGuid);
        }
        
        public System.Threading.Tasks.Task BlockAgentEvalScreenRecordingAsync(System.Guid screenRecordingIDToBlockGuid) {
            return base.Channel.BlockAgentEvalScreenRecordingAsync(screenRecordingIDToBlockGuid);
        }
        
        public bool GetIsCallCenter() {
            return base.Channel.GetIsCallCenter();
        }
        
        public System.Threading.Tasks.Task<bool> GetIsCallCenterAsync() {
            return base.Channel.GetIsCallCenterAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.CallCount[] GetCallCounts(System.Guid[] userIds, CallRex.UnderWriting.CallRexClientService.SearchDateSpecificationType dateRangeType, int dateRangeLastXDays, System.DateTime dateRangeStart, System.DateTime dateRangeEnd, CallRex.UnderWriting.CallRexClientService.CallDirection callDirection, bool onlyIncludeFlagged, CallRex.UnderWriting.CallRexClientService.DateGroupType dateGroupType, CallRex.UnderWriting.CallRexClientService.CallCountGroupType groupType, System.Guid flagId, CallRex.UnderWriting.CallRexClientService.CallCountSortType sortType, int maximumRecords) {
            return base.Channel.GetCallCounts(userIds, dateRangeType, dateRangeLastXDays, dateRangeStart, dateRangeEnd, callDirection, onlyIncludeFlagged, dateGroupType, groupType, flagId, sortType, maximumRecords);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.CallCount[]> GetCallCountsAsync(System.Guid[] userIds, CallRex.UnderWriting.CallRexClientService.SearchDateSpecificationType dateRangeType, int dateRangeLastXDays, System.DateTime dateRangeStart, System.DateTime dateRangeEnd, CallRex.UnderWriting.CallRexClientService.CallDirection callDirection, bool onlyIncludeFlagged, CallRex.UnderWriting.CallRexClientService.DateGroupType dateGroupType, CallRex.UnderWriting.CallRexClientService.CallCountGroupType groupType, System.Guid flagId, CallRex.UnderWriting.CallRexClientService.CallCountSortType sortType, int maximumRecords) {
            return base.Channel.GetCallCountsAsync(userIds, dateRangeType, dateRangeLastXDays, dateRangeStart, dateRangeEnd, callDirection, onlyIncludeFlagged, dateGroupType, groupType, flagId, sortType, maximumRecords);
        }
        
        public byte[] GetRenderedReport(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters) {
            return base.Channel.GetRenderedReport(format, savedReportId, parameters);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetRenderedReportAsync(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters) {
            return base.Channel.GetRenderedReportAsync(format, savedReportId, parameters);
        }
        
        public byte[] GetRenderedReportForDashboard(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters) {
            return base.Channel.GetRenderedReportForDashboard(format, savedReportId, parameters);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetRenderedReportForDashboardAsync(string format, System.Guid savedReportId, System.Collections.Generic.Dictionary<string, string> parameters) {
            return base.Channel.GetRenderedReportForDashboardAsync(format, savedReportId, parameters);
        }
        
        public System.Guid Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<System.Guid> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserDetails LoginUsingWinAuthentication() {
            return base.Channel.LoginUsingWinAuthentication();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails> LoginUsingWinAuthenticationAsync() {
            return base.Channel.LoginUsingWinAuthenticationAsync();
        }
        
        public void ChangePassword(string oldPassword, string newPassword) {
            base.Channel.ChangePassword(oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(oldPassword, newPassword);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserListItem[] GetUserList(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, bool activeUsersOnly) {
            return base.Channel.GetUserList(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly, activeUsersOnly);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetUserListAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, bool activeUsersOnly) {
            return base.Channel.GetUserListAsync(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly, activeUsersOnly);
        }
        
        public void AddUser(CallRex.UnderWriting.CallRexClientService.UserDetails user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(CallRex.UnderWriting.CallRexClientService.UserDetails user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void UpdateUser(CallRex.UnderWriting.CallRexClientService.UserDetails user, bool passwordChanged) {
            base.Channel.UpdateUser(user, passwordChanged);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(CallRex.UnderWriting.CallRexClientService.UserDetails user, bool passwordChanged) {
            return base.Channel.UpdateUserAsync(user, passwordChanged);
        }
        
        public void DeleteUser(System.Guid userID) {
            base.Channel.DeleteUser(userID);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(System.Guid userID) {
            return base.Channel.DeleteUserAsync(userID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserDetails GetUserDetails(System.Guid userID) {
            return base.Channel.GetUserDetails(userID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails> GetUserDetailsAsync(System.Guid userID) {
            return base.Channel.GetUserDetailsAsync(userID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserDetails[] GetAllUserDetails() {
            return base.Channel.GetAllUserDetails();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserDetails[]> GetAllUserDetailsAsync() {
            return base.Channel.GetAllUserDetailsAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetManagedUserListForUser(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetManagedUserListForUser(userID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetManagedUserListForUserAsync(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetManagedUserListForUserAsync(userID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetNonManagedUserListForUser(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetNonManagedUserListForUser(userID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetNonManagedUserListForUserAsync(System.Guid userID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetNonManagedUserListForUserAsync(userID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public void AddManagedUsers(System.Guid supervisorUserID, System.Guid[] managedUserIDs) {
            base.Channel.AddManagedUsers(supervisorUserID, managedUserIDs);
        }
        
        public System.Threading.Tasks.Task AddManagedUsersAsync(System.Guid supervisorUserID, System.Guid[] managedUserIDs) {
            return base.Channel.AddManagedUsersAsync(supervisorUserID, managedUserIDs);
        }
        
        public void RemoveManagedUsers(System.Guid supervisorUserID, System.Guid[] managedUserIDs) {
            base.Channel.RemoveManagedUsers(supervisorUserID, managedUserIDs);
        }
        
        public System.Threading.Tasks.Task RemoveManagedUsersAsync(System.Guid supervisorUserID, System.Guid[] managedUserIDs) {
            return base.Channel.RemoveManagedUsersAsync(supervisorUserID, managedUserIDs);
        }
        
        public string[] GetManagedDepartmentListForUser(System.Guid userID) {
            return base.Channel.GetManagedDepartmentListForUser(userID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetManagedDepartmentListForUserAsync(System.Guid userID) {
            return base.Channel.GetManagedDepartmentListForUserAsync(userID);
        }
        
        public string[] GetNonManagedDepartmentListForUser(System.Guid userID) {
            return base.Channel.GetNonManagedDepartmentListForUser(userID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetNonManagedDepartmentListForUserAsync(System.Guid userID) {
            return base.Channel.GetNonManagedDepartmentListForUserAsync(userID);
        }
        
        public string[] GetManagedLocationListForUser(System.Guid userID) {
            return base.Channel.GetManagedLocationListForUser(userID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetManagedLocationListForUserAsync(System.Guid userID) {
            return base.Channel.GetManagedLocationListForUserAsync(userID);
        }
        
        public string[] GetNonManagedLocationListForUser(System.Guid userID) {
            return base.Channel.GetNonManagedLocationListForUser(userID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetNonManagedLocationListForUserAsync(System.Guid userID) {
            return base.Channel.GetNonManagedLocationListForUserAsync(userID);
        }
        
        public void AddManagedDepartment(System.Guid userID, string departmentName) {
            base.Channel.AddManagedDepartment(userID, departmentName);
        }
        
        public System.Threading.Tasks.Task AddManagedDepartmentAsync(System.Guid userID, string departmentName) {
            return base.Channel.AddManagedDepartmentAsync(userID, departmentName);
        }
        
        public void RemoveManagedDepartment(System.Guid userID, string departmentName) {
            base.Channel.RemoveManagedDepartment(userID, departmentName);
        }
        
        public System.Threading.Tasks.Task RemoveManagedDepartmentAsync(System.Guid userID, string departmentName) {
            return base.Channel.RemoveManagedDepartmentAsync(userID, departmentName);
        }
        
        public void AddManagedDepartments(System.Guid userID, string[] departmentNames) {
            base.Channel.AddManagedDepartments(userID, departmentNames);
        }
        
        public System.Threading.Tasks.Task AddManagedDepartmentsAsync(System.Guid userID, string[] departmentNames) {
            return base.Channel.AddManagedDepartmentsAsync(userID, departmentNames);
        }
        
        public void RemoveManagedDepartments(System.Guid userID, string[] departmentNames) {
            base.Channel.RemoveManagedDepartments(userID, departmentNames);
        }
        
        public System.Threading.Tasks.Task RemoveManagedDepartmentsAsync(System.Guid userID, string[] departmentNames) {
            return base.Channel.RemoveManagedDepartmentsAsync(userID, departmentNames);
        }
        
        public void AddManagedLocation(System.Guid userID, string locationName) {
            base.Channel.AddManagedLocation(userID, locationName);
        }
        
        public System.Threading.Tasks.Task AddManagedLocationAsync(System.Guid userID, string locationName) {
            return base.Channel.AddManagedLocationAsync(userID, locationName);
        }
        
        public void RemoveManagedLocation(System.Guid userID, string locationName) {
            base.Channel.RemoveManagedLocation(userID, locationName);
        }
        
        public System.Threading.Tasks.Task RemoveManagedLocationAsync(System.Guid userID, string locationName) {
            return base.Channel.RemoveManagedLocationAsync(userID, locationName);
        }
        
        public void AddManagedLocations(System.Guid userID, string[] locationNames) {
            base.Channel.AddManagedLocations(userID, locationNames);
        }
        
        public System.Threading.Tasks.Task AddManagedLocationsAsync(System.Guid userID, string[] locationNames) {
            return base.Channel.AddManagedLocationsAsync(userID, locationNames);
        }
        
        public void RemoveManagedLocations(System.Guid userID, string[] locationNames) {
            base.Channel.RemoveManagedLocations(userID, locationNames);
        }
        
        public System.Threading.Tasks.Task RemoveManagedLocationsAsync(System.Guid userID, string[] locationNames) {
            return base.Channel.RemoveManagedLocationsAsync(userID, locationNames);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserListItem[] GetSearchableUserListForUser(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus) {
            return base.Channel.GetSearchableUserListForUser(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly, licenseStatus);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserListItem[]> GetSearchableUserListForUserAsync(string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly, CallRex.UnderWriting.CallRexClientService.UserLicenseStatusType licenseStatus) {
            return base.Channel.GetSearchableUserListForUserAsync(locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly, licenseStatus);
        }
        
        public CallRex.UnderWriting.CallRexClientService.Flag[] GetSearchableFlagsForUser() {
            return base.Channel.GetSearchableFlagsForUser();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Flag[]> GetSearchableFlagsForUserAsync() {
            return base.Channel.GetSearchableFlagsForUserAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.Flag[] GetFlagsListForUser(System.Guid ownerUserId) {
            return base.Channel.GetFlagsListForUser(ownerUserId);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Flag[]> GetFlagsListForUserAsync(System.Guid ownerUserId) {
            return base.Channel.GetFlagsListForUserAsync(ownerUserId);
        }
        
        public void AddFlag(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag) {
            base.Channel.AddFlag(ownerUserId, flag);
        }
        
        public System.Threading.Tasks.Task AddFlagAsync(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag) {
            return base.Channel.AddFlagAsync(ownerUserId, flag);
        }
        
        public void UpdateFlag(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag) {
            base.Channel.UpdateFlag(ownerUserId, flag);
        }
        
        public System.Threading.Tasks.Task UpdateFlagAsync(System.Guid ownerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag) {
            return base.Channel.UpdateFlagAsync(ownerUserId, flag);
        }
        
        public void DeleteFlag(System.Guid OwnerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag) {
            base.Channel.DeleteFlag(OwnerUserId, flag);
        }
        
        public System.Threading.Tasks.Task DeleteFlagAsync(System.Guid OwnerUserId, CallRex.UnderWriting.CallRexClientService.Flag flag) {
            return base.Channel.DeleteFlagAsync(OwnerUserId, flag);
        }
        
        public CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] GetRecordedCalls(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue) {
            return base.Channel.GetRecordedCalls(userDomain, rangeStart, rangeStop, durationMin, durationMax, direction, CIDCriteria, outgoingNoCriteria, DNISCriteria, flagID, flagValue);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[]> GetRecordedCallsAsync(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue) {
            return base.Channel.GetRecordedCallsAsync(userDomain, rangeStart, rangeStop, durationMin, durationMax, direction, CIDCriteria, outgoingNoCriteria, DNISCriteria, flagID, flagValue);
        }
        
        public CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] GetRecordedMediaByID(string recordingId) {
            return base.Channel.GetRecordedMediaByID(recordingId);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[]> GetRecordedMediaByIDAsync(string recordingId) {
            return base.Channel.GetRecordedMediaByIDAsync(recordingId);
        }
        
        public CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[] GetRecordedCallChain(System.Guid UserId, System.Guid RecordingId) {
            return base.Channel.GetRecordedCallChain(UserId, RecordingId);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedCallContainer[]> GetRecordedCallChainAsync(System.Guid UserId, System.Guid RecordingId) {
            return base.Channel.GetRecordedCallChainAsync(UserId, RecordingId);
        }
        
        public CallRex.UnderWriting.CallRexClientService.AttachedDataContainer GetAttachedDataByCallLogID(System.Guid callLogID) {
            return base.Channel.GetAttachedDataByCallLogID(callLogID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> GetAttachedDataByCallLogIDAsync(System.Guid callLogID) {
            return base.Channel.GetAttachedDataByCallLogIDAsync(callLogID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.AttachedDataContainer UpdateAttachedDataByCallLogID(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData) {
            return base.Channel.UpdateAttachedDataByCallLogID(attachedData);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> UpdateAttachedDataByCallLogIDAsync(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData) {
            return base.Channel.UpdateAttachedDataByCallLogIDAsync(attachedData);
        }
        
        public CallRex.UnderWriting.CallRexClientService.AttachedDataContainer GetAttachedDataByScreenRecordingID(System.Guid ScreenRecordingID) {
            return base.Channel.GetAttachedDataByScreenRecordingID(ScreenRecordingID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> GetAttachedDataByScreenRecordingIDAsync(System.Guid ScreenRecordingID) {
            return base.Channel.GetAttachedDataByScreenRecordingIDAsync(ScreenRecordingID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.AttachedDataContainer UpdateAttachedDataByScreenRecordingID(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData) {
            return base.Channel.UpdateAttachedDataByScreenRecordingID(attachedData);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.AttachedDataContainer> UpdateAttachedDataByScreenRecordingIDAsync(CallRex.UnderWriting.CallRexClientService.AttachedDataContainer attachedData) {
            return base.Channel.UpdateAttachedDataByScreenRecordingIDAsync(attachedData);
        }
        
        public CallRex.UnderWriting.CallRexClientService.RecordedCallContainer GetCurrentCallByUserID(System.Guid userID, string telephonyCallIdentifier) {
            return base.Channel.GetCurrentCallByUserID(userID, telephonyCallIdentifier);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedCallContainer> GetCurrentCallByUserIDAsync(System.Guid userID, string telephonyCallIdentifier) {
            return base.Channel.GetCurrentCallByUserIDAsync(userID, telephonyCallIdentifier);
        }
        
        public CallRex.UnderWriting.CallRexClientService.UserMonitorInfo GetUserMonitorInfo(System.Guid userID) {
            return base.Channel.GetUserMonitorInfo(userID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.UserMonitorInfo> GetUserMonitorInfoAsync(System.Guid userID) {
            return base.Channel.GetUserMonitorInfoAsync(userID);
        }
        
        public void AddSavedSearch(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch) {
            base.Channel.AddSavedSearch(savedSearch);
        }
        
        public System.Threading.Tasks.Task AddSavedSearchAsync(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch) {
            return base.Channel.AddSavedSearchAsync(savedSearch);
        }
        
        public void UpdateSavedSearch(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch) {
            base.Channel.UpdateSavedSearch(savedSearch);
        }
        
        public System.Threading.Tasks.Task UpdateSavedSearchAsync(CallRex.UnderWriting.CallRexClientService.SavedSearch savedSearch) {
            return base.Channel.UpdateSavedSearchAsync(savedSearch);
        }
        
        public void DeleteSavedSearch(System.Guid id) {
            base.Channel.DeleteSavedSearch(id);
        }
        
        public System.Threading.Tasks.Task DeleteSavedSearchAsync(System.Guid id) {
            return base.Channel.DeleteSavedSearchAsync(id);
        }
        
        public CallRex.UnderWriting.CallRexClientService.SavedSearch GetSavedSearch(System.Guid id) {
            return base.Channel.GetSavedSearch(id);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedSearch> GetSavedSearchAsync(System.Guid id) {
            return base.Channel.GetSavedSearchAsync(id);
        }
        
        public CallRex.UnderWriting.CallRexClientService.SavedSearch[] GetSavedSearchList() {
            return base.Channel.GetSavedSearchList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedSearch[]> GetSavedSearchListAsync() {
            return base.Channel.GetSavedSearchListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails GetUserSecurityProfile(System.Guid userID) {
            return base.Channel.GetUserSecurityProfile(userID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails> GetUserSecurityProfileAsync(System.Guid userID) {
            return base.Channel.GetUserSecurityProfileAsync(userID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[] GetComputerRecordings(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop) {
            return base.Channel.GetComputerRecordings(userDomain, rangeStart, rangeStop);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ComputerRecordingContainer[]> GetComputerRecordingsAsync(System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop) {
            return base.Channel.GetComputerRecordingsAsync(userDomain, rangeStart, rangeStop);
        }
        
        public CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[] GetRecordedMedia(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue) {
            return base.Channel.GetRecordedMedia(mediaType, userDomain, rangeStart, rangeStop, durationMin, durationMax, direction, CIDCriteria, outgoingNoCriteria, DNISCriteria, flagID, flagValue);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaContainer[]> GetRecordedMediaAsync(CallRex.UnderWriting.CallRexClientService.RecordedMediaType mediaType, System.Guid[] userDomain, System.DateTime rangeStart, System.DateTime rangeStop, int durationMin, int durationMax, CallRex.UnderWriting.CallRexClientService.CallDirection direction, string CIDCriteria, string outgoingNoCriteria, string DNISCriteria, System.Guid flagID, string flagValue) {
            return base.Channel.GetRecordedMediaAsync(mediaType, userDomain, rangeStart, rangeStop, durationMin, durationMax, direction, CIDCriteria, outgoingNoCriteria, DNISCriteria, flagID, flagValue);
        }
        
        public CallRex.UnderWriting.CallRexClientService.RecordedMediaType[] GetSearchableRecordedMediaTypesForUser() {
            return base.Channel.GetSearchableRecordedMediaTypesForUser();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.RecordedMediaType[]> GetSearchableRecordedMediaTypesForUserAsync() {
            return base.Channel.GetSearchableRecordedMediaTypesForUserAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.SavedReport[] GetSavedReportListComplete() {
            return base.Channel.GetSavedReportListComplete();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedReport[]> GetSavedReportListCompleteAsync() {
            return base.Channel.GetSavedReportListCompleteAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.SavedReport[] GetSavedReportList(System.Guid reportid) {
            return base.Channel.GetSavedReportList(reportid);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedReport[]> GetSavedReportListAsync(System.Guid reportid) {
            return base.Channel.GetSavedReportListAsync(reportid);
        }
        
        public void AddSavedReport(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport) {
            base.Channel.AddSavedReport(savedReport);
        }
        
        public System.Threading.Tasks.Task AddSavedReportAsync(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport) {
            return base.Channel.AddSavedReportAsync(savedReport);
        }
        
        public void UpdateSavedReport(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport) {
            base.Channel.UpdateSavedReport(savedReport);
        }
        
        public System.Threading.Tasks.Task UpdateSavedReportAsync(CallRex.UnderWriting.CallRexClientService.SavedReport savedReport) {
            return base.Channel.UpdateSavedReportAsync(savedReport);
        }
        
        public void DeleteSavedReport(System.Guid id) {
            base.Channel.DeleteSavedReport(id);
        }
        
        public System.Threading.Tasks.Task DeleteSavedReportAsync(System.Guid id) {
            return base.Channel.DeleteSavedReportAsync(id);
        }
        
        public CallRex.UnderWriting.CallRexClientService.SavedReport GetSavedReport(System.Guid id) {
            return base.Channel.GetSavedReport(id);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SavedReport> GetSavedReportAsync(System.Guid id) {
            return base.Channel.GetSavedReportAsync(id);
        }
        
        public CallRex.UnderWriting.CallRexClientService.Report[] GetReportList() {
            return base.Channel.GetReportList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.Report[]> GetReportListAsync() {
            return base.Channel.GetReportListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetProfileMemberList(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetProfileMemberList(profileType, profileID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetProfileMemberListAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetProfileMemberListAsync(profileType, profileID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public CallRex.UnderWriting.CallRexClientService.MemberListItem[] GetProfileNonMemberList(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetProfileNonMemberList(profileType, profileID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.MemberListItem[]> GetProfileNonMemberListAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, string locationFilter, bool locationBlanksOnly, string departmentFilter, bool departmentBlanksOnly) {
            return base.Channel.GetProfileNonMemberListAsync(profileType, profileID, locationFilter, locationBlanksOnly, departmentFilter, departmentBlanksOnly);
        }
        
        public void AddUsersToProfile(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs) {
            base.Channel.AddUsersToProfile(profileType, profileID, userIDs);
        }
        
        public System.Threading.Tasks.Task AddUsersToProfileAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs) {
            return base.Channel.AddUsersToProfileAsync(profileType, profileID, userIDs);
        }
        
        public void RemoveUsersFromProfile(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs) {
            base.Channel.RemoveUsersFromProfile(profileType, profileID, userIDs);
        }
        
        public System.Threading.Tasks.Task RemoveUsersFromProfileAsync(CallRex.UnderWriting.CallRexClientService.ProfileType profileType, System.Guid profileID, System.Guid[] userIDs) {
            return base.Channel.RemoveUsersFromProfileAsync(profileType, profileID, userIDs);
        }
        
        public CallRex.UnderWriting.CallRexClientService.SecurityProfileListItem[] GetSecurityProfileList() {
            return base.Channel.GetSecurityProfileList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SecurityProfileListItem[]> GetSecurityProfileListAsync() {
            return base.Channel.GetSecurityProfileListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails GetSecurityProfileDetails(System.Guid profileID) {
            return base.Channel.GetSecurityProfileDetails(profileID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails> GetSecurityProfileDetailsAsync(System.Guid profileID) {
            return base.Channel.GetSecurityProfileDetailsAsync(profileID);
        }
        
        public void AddSecurityProfile(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile) {
            base.Channel.AddSecurityProfile(profile);
        }
        
        public System.Threading.Tasks.Task AddSecurityProfileAsync(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile) {
            return base.Channel.AddSecurityProfileAsync(profile);
        }
        
        public void UpdateSecurityProfile(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile) {
            base.Channel.UpdateSecurityProfile(profile);
        }
        
        public System.Threading.Tasks.Task UpdateSecurityProfileAsync(CallRex.UnderWriting.CallRexClientService.SecurityProfileDetails profile) {
            return base.Channel.UpdateSecurityProfileAsync(profile);
        }
        
        public void DeleteSecurityProfile(System.Guid profileID) {
            base.Channel.DeleteSecurityProfile(profileID);
        }
        
        public System.Threading.Tasks.Task DeleteSecurityProfileAsync(System.Guid profileID) {
            return base.Channel.DeleteSecurityProfileAsync(profileID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.CallRecordingProfileListItem[] GetCallRecordingProfileList() {
            return base.Channel.GetCallRecordingProfileList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.CallRecordingProfileListItem[]> GetCallRecordingProfileListAsync() {
            return base.Channel.GetCallRecordingProfileListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails GetCallRecordingProfile(System.Guid profileID) {
            return base.Channel.GetCallRecordingProfile(profileID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails> GetCallRecordingProfileAsync(System.Guid profileID) {
            return base.Channel.GetCallRecordingProfileAsync(profileID);
        }
        
        public void AddCallRecordingProfile(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile) {
            base.Channel.AddCallRecordingProfile(profile);
        }
        
        public System.Threading.Tasks.Task AddCallRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile) {
            return base.Channel.AddCallRecordingProfileAsync(profile);
        }
        
        public void UpdateCallRecordingProfile(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile) {
            base.Channel.UpdateCallRecordingProfile(profile);
        }
        
        public System.Threading.Tasks.Task UpdateCallRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.CallRecordingProfileDetails profile) {
            return base.Channel.UpdateCallRecordingProfileAsync(profile);
        }
        
        public void DeleteCallRecordingProfile(System.Guid profileID) {
            base.Channel.DeleteCallRecordingProfile(profileID);
        }
        
        public System.Threading.Tasks.Task DeleteCallRecordingProfileAsync(System.Guid profileID) {
            return base.Channel.DeleteCallRecordingProfileAsync(profileID);
        }
        
        public void SetDefaultCallRecordingProfile(System.Guid profileID) {
            base.Channel.SetDefaultCallRecordingProfile(profileID);
        }
        
        public System.Threading.Tasks.Task SetDefaultCallRecordingProfileAsync(System.Guid profileID) {
            return base.Channel.SetDefaultCallRecordingProfileAsync(profileID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileListItem[] GetScreenRecordingProfileList() {
            return base.Channel.GetScreenRecordingProfileList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileListItem[]> GetScreenRecordingProfileListAsync() {
            return base.Channel.GetScreenRecordingProfileListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails GetScreenRecordingProfile(System.Guid profileID) {
            return base.Channel.GetScreenRecordingProfile(profileID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails> GetScreenRecordingProfileAsync(System.Guid profileID) {
            return base.Channel.GetScreenRecordingProfileAsync(profileID);
        }
        
        public void AddScreenRecordingProfile(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile) {
            base.Channel.AddScreenRecordingProfile(profile);
        }
        
        public System.Threading.Tasks.Task AddScreenRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile) {
            return base.Channel.AddScreenRecordingProfileAsync(profile);
        }
        
        public void UpdateScreenRecordingProfile(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile) {
            base.Channel.UpdateScreenRecordingProfile(profile);
        }
        
        public System.Threading.Tasks.Task UpdateScreenRecordingProfileAsync(CallRex.UnderWriting.CallRexClientService.ScreenRecordingProfileDetails profile) {
            return base.Channel.UpdateScreenRecordingProfileAsync(profile);
        }
        
        public void DeleteScreenRecordingProfile(System.Guid profileID) {
            base.Channel.DeleteScreenRecordingProfile(profileID);
        }
        
        public System.Threading.Tasks.Task DeleteScreenRecordingProfileAsync(System.Guid profileID) {
            return base.Channel.DeleteScreenRecordingProfileAsync(profileID);
        }
        
        public void SetDefaultScreenRecordingProfile(System.Guid profileID) {
            base.Channel.SetDefaultScreenRecordingProfile(profileID);
        }
        
        public System.Threading.Tasks.Task SetDefaultScreenRecordingProfileAsync(System.Guid profileID) {
            return base.Channel.SetDefaultScreenRecordingProfileAsync(profileID);
        }
        
        public CallRex.UnderWriting.CallRexClientService.ServiceListItem[] GetServiceList() {
            return base.Channel.GetServiceList();
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ServiceListItem[]> GetServiceListAsync() {
            return base.Channel.GetServiceListAsync();
        }
        
        public CallRex.UnderWriting.CallRexClientService.ServiceSettings GetService(System.Guid serviceID) {
            return base.Channel.GetService(serviceID);
        }
        
        public System.Threading.Tasks.Task<CallRex.UnderWriting.CallRexClientService.ServiceSettings> GetServiceAsync(System.Guid serviceID) {
            return base.Channel.GetServiceAsync(serviceID);
        }
        
        public void AddService(CallRex.UnderWriting.CallRexClientService.ServiceSettings service) {
            base.Channel.AddService(service);
        }
        
        public System.Threading.Tasks.Task AddServiceAsync(CallRex.UnderWriting.CallRexClientService.ServiceSettings service) {
            return base.Channel.AddServiceAsync(service);
        }
        
        public void UpdateService(CallRex.UnderWriting.CallRexClientService.ServiceSettings service) {
            base.Channel.UpdateService(service);
        }
        
        public System.Threading.Tasks.Task UpdateServiceAsync(CallRex.UnderWriting.CallRexClientService.ServiceSettings service) {
            return base.Channel.UpdateServiceAsync(service);
        }
        
        public void DeleteService(System.Guid serviceID) {
            base.Channel.DeleteService(serviceID);
        }
        
        public System.Threading.Tasks.Task DeleteServiceAsync(System.Guid serviceID) {
            return base.Channel.DeleteServiceAsync(serviceID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CallRexClientService.IClientAccessPolicy")]
    public interface IClientAccessPolicy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientAccessPolicy/GetPolicy", ReplyAction="http://tempuri.org/IClientAccessPolicy/GetPolicyResponse")]
        System.IO.Stream GetPolicy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientAccessPolicy/GetPolicy", ReplyAction="http://tempuri.org/IClientAccessPolicy/GetPolicyResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetPolicyAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientAccessPolicyChannel : CallRex.UnderWriting.CallRexClientService.IClientAccessPolicy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientAccessPolicyClient : System.ServiceModel.ClientBase<CallRex.UnderWriting.CallRexClientService.IClientAccessPolicy>, CallRex.UnderWriting.CallRexClientService.IClientAccessPolicy {
        
        public ClientAccessPolicyClient() {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccessPolicyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.Stream GetPolicy() {
            return base.Channel.GetPolicy();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetPolicyAsync() {
            return base.Channel.GetPolicyAsync();
        }
    }
}
