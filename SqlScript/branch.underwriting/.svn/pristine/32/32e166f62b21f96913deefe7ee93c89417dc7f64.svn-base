//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATA.UnderWriting.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IllusDataEntityDataModel : DbContext
    {
        public IllusDataEntityDataModel()
            : base("name=IllusDataEntityDataModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_delete_customerdet(Nullable<int> customerno, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(int));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerdet", customernoParameter, userIdSystemParameter);
        }
    
        public virtual int sp_delete_customerPlandet(Nullable<long> customerPlanno, Nullable<int> userIdSystem)
        {
            var customerPlannoParameter = customerPlanno.HasValue ?
                new ObjectParameter("customerPlanno", customerPlanno) :
                new ObjectParameter("customerPlanno", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerPlandet", customerPlannoParameter, userIdSystemParameter);
        }
    
        public virtual ObjectResult<sp_get_customerdet_Result> sp_get_customerdet(Nullable<long> customerno, Nullable<long> rcustomerno)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var rcustomernoParameter = rcustomerno.HasValue ?
                new ObjectParameter("rcustomerno", rcustomerno) :
                new ObjectParameter("rcustomerno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerdet_Result>("sp_get_customerdet", customernoParameter, rcustomernoParameter);
        }
    
        public virtual ObjectResult<sp_set_customerdet_Result> sp_set_customerdet(Nullable<long> customerno, string clientID, string firstName, string lastName, string lastName2, string middleName, Nullable<System.DateTime> birthdate, string age, string gendercode, string maritalStatuscode, string smoker, string address1, string address2, string city, string state, Nullable<int> countryno, string zipCode, string emailid1, string emailid2, string busAddress1, string busAddress2, string busZipCode, string busCity, Nullable<int> busCountryno, string busState, string agentcode, string notes, string referraltypecode, string busAddress3, string address3, Nullable<int> userid, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<System.DateTime> appointment, Nullable<int> illuscount, Nullable<long> rcustomerno, string customerstatuscode, Nullable<int> calls, Nullable<int> visits, Nullable<System.DateTime> datesynced, Nullable<long> recordid, string refname, string reflastname, string refemail, string ext, string phoneno, Nullable<int> rescountryno, Nullable<long> refcustomerno, string is_deleted, string idno, string company_Id, Nullable<int> userIdSystem, string comany_Name, Nullable<bool> is_Company, Nullable<bool> is_GroupContact)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var lastName2Parameter = lastName2 != null ?
                new ObjectParameter("LastName2", lastName2) :
                new ObjectParameter("LastName2", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var gendercodeParameter = gendercode != null ?
                new ObjectParameter("gendercode", gendercode) :
                new ObjectParameter("gendercode", typeof(string));
    
            var maritalStatuscodeParameter = maritalStatuscode != null ?
                new ObjectParameter("MaritalStatuscode", maritalStatuscode) :
                new ObjectParameter("MaritalStatuscode", typeof(string));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("Smoker", smoker) :
                new ObjectParameter("Smoker", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var countrynoParameter = countryno.HasValue ?
                new ObjectParameter("Countryno", countryno) :
                new ObjectParameter("Countryno", typeof(int));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var emailid1Parameter = emailid1 != null ?
                new ObjectParameter("Emailid1", emailid1) :
                new ObjectParameter("Emailid1", typeof(string));
    
            var emailid2Parameter = emailid2 != null ?
                new ObjectParameter("Emailid2", emailid2) :
                new ObjectParameter("Emailid2", typeof(string));
    
            var busAddress1Parameter = busAddress1 != null ?
                new ObjectParameter("BusAddress1", busAddress1) :
                new ObjectParameter("BusAddress1", typeof(string));
    
            var busAddress2Parameter = busAddress2 != null ?
                new ObjectParameter("BusAddress2", busAddress2) :
                new ObjectParameter("BusAddress2", typeof(string));
    
            var busZipCodeParameter = busZipCode != null ?
                new ObjectParameter("BusZipCode", busZipCode) :
                new ObjectParameter("BusZipCode", typeof(string));
    
            var busCityParameter = busCity != null ?
                new ObjectParameter("BusCity", busCity) :
                new ObjectParameter("BusCity", typeof(string));
    
            var busCountrynoParameter = busCountryno.HasValue ?
                new ObjectParameter("BusCountryno", busCountryno) :
                new ObjectParameter("BusCountryno", typeof(int));
    
            var busStateParameter = busState != null ?
                new ObjectParameter("BusState", busState) :
                new ObjectParameter("BusState", typeof(string));
    
            var agentcodeParameter = agentcode != null ?
                new ObjectParameter("Agentcode", agentcode) :
                new ObjectParameter("Agentcode", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var referraltypecodeParameter = referraltypecode != null ?
                new ObjectParameter("referraltypecode", referraltypecode) :
                new ObjectParameter("referraltypecode", typeof(string));
    
            var busAddress3Parameter = busAddress3 != null ?
                new ObjectParameter("BusAddress3", busAddress3) :
                new ObjectParameter("BusAddress3", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var appointmentParameter = appointment.HasValue ?
                new ObjectParameter("appointment", appointment) :
                new ObjectParameter("appointment", typeof(System.DateTime));
    
            var illuscountParameter = illuscount.HasValue ?
                new ObjectParameter("illuscount", illuscount) :
                new ObjectParameter("illuscount", typeof(int));
    
            var rcustomernoParameter = rcustomerno.HasValue ?
                new ObjectParameter("rcustomerno", rcustomerno) :
                new ObjectParameter("rcustomerno", typeof(long));
    
            var customerstatuscodeParameter = customerstatuscode != null ?
                new ObjectParameter("customerstatuscode", customerstatuscode) :
                new ObjectParameter("customerstatuscode", typeof(string));
    
            var callsParameter = calls.HasValue ?
                new ObjectParameter("calls", calls) :
                new ObjectParameter("calls", typeof(int));
    
            var visitsParameter = visits.HasValue ?
                new ObjectParameter("visits", visits) :
                new ObjectParameter("visits", typeof(int));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var refnameParameter = refname != null ?
                new ObjectParameter("refname", refname) :
                new ObjectParameter("refname", typeof(string));
    
            var reflastnameParameter = reflastname != null ?
                new ObjectParameter("reflastname", reflastname) :
                new ObjectParameter("reflastname", typeof(string));
    
            var refemailParameter = refemail != null ?
                new ObjectParameter("refemail", refemail) :
                new ObjectParameter("refemail", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("ext", ext) :
                new ObjectParameter("ext", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("phoneno", phoneno) :
                new ObjectParameter("phoneno", typeof(string));
    
            var rescountrynoParameter = rescountryno.HasValue ?
                new ObjectParameter("rescountryno", rescountryno) :
                new ObjectParameter("rescountryno", typeof(int));
    
            var refcustomernoParameter = refcustomerno.HasValue ?
                new ObjectParameter("refcustomerno", refcustomerno) :
                new ObjectParameter("refcustomerno", typeof(long));
    
            var is_deletedParameter = is_deleted != null ?
                new ObjectParameter("is_deleted", is_deleted) :
                new ObjectParameter("is_deleted", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            var company_IdParameter = company_Id != null ?
                new ObjectParameter("Company_Id", company_Id) :
                new ObjectParameter("Company_Id", typeof(string));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            var comany_NameParameter = comany_Name != null ?
                new ObjectParameter("Comany_Name", comany_Name) :
                new ObjectParameter("Comany_Name", typeof(string));
    
            var is_CompanyParameter = is_Company.HasValue ?
                new ObjectParameter("Is_Company", is_Company) :
                new ObjectParameter("Is_Company", typeof(bool));
    
            var is_GroupContactParameter = is_GroupContact.HasValue ?
                new ObjectParameter("Is_GroupContact", is_GroupContact) :
                new ObjectParameter("Is_GroupContact", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerdet_Result>("sp_set_customerdet", customernoParameter, clientIDParameter, firstNameParameter, lastNameParameter, lastName2Parameter, middleNameParameter, birthdateParameter, ageParameter, gendercodeParameter, maritalStatuscodeParameter, smokerParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, countrynoParameter, zipCodeParameter, emailid1Parameter, emailid2Parameter, busAddress1Parameter, busAddress2Parameter, busZipCodeParameter, busCityParameter, busCountrynoParameter, busStateParameter, agentcodeParameter, notesParameter, referraltypecodeParameter, busAddress3Parameter, address3Parameter, useridParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, appointmentParameter, illuscountParameter, rcustomernoParameter, customerstatuscodeParameter, callsParameter, visitsParameter, datesyncedParameter, recordidParameter, refnameParameter, reflastnameParameter, refemailParameter, extParameter, phonenoParameter, rescountrynoParameter, refcustomernoParameter, is_deletedParameter, idnoParameter, company_IdParameter, userIdSystemParameter, comany_NameParameter, is_CompanyParameter, is_GroupContactParameter);
        }
    
        public virtual ObjectResult<sp_set_customerPlandet_Result> sp_set_customerPlandet(Nullable<long> customerPlanno, Nullable<System.DateTime> plandate, string productcode, string @class, Nullable<long> customerno, string frequencytypecode, Nullable<int> frequency, Nullable<decimal> insuredamount, Nullable<decimal> premiumamount, Nullable<decimal> annualizedpremium, Nullable<System.DateTime> enddate, Nullable<decimal> projectedpremium, Nullable<decimal> initialcontribution, Nullable<decimal> initialcommission, Nullable<decimal> targetpremium, string insurancelevelcode, string calculatetypecode, string contributiontypecode, string investmentprofilecode, Nullable<decimal> investmentprofilepercent, Nullable<int> activityrisktypeno, Nullable<int> healthrisktypeno, Nullable<int> contributionperiod, string financialgoal, Nullable<int> financialgoalage, Nullable<decimal> financialgoalamount, string currencycode, string rideradb, string riderterm, string rideroir, Nullable<int> countryno, string plantypecode, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<decimal> rideradbamount, Nullable<decimal> ridertermamount, Nullable<int> ridertermuntilage, string riderci, Nullable<decimal> riderciamount, string rideracdb, Nullable<long> rcustomerplanno, Nullable<long> illustrationno, string dataentrytypecode, Nullable<long> plancode, Nullable<int> userid, Nullable<int> contributionuntilage, Nullable<decimal> openingbalance, Nullable<decimal> minimumpremium, Nullable<int> openingyear, Nullable<System.DateTime> planeffectivedate, string illustrationverified, Nullable<decimal> rideradbcost, Nullable<decimal> rideracdbcost, Nullable<decimal> ridertermcost, Nullable<decimal> ridercicost, Nullable<decimal> termperiod, Nullable<decimal> retirementperiod, Nullable<decimal> defermentperiod, Nullable<decimal> annuityamount, Nullable<int> companyno, Nullable<System.DateTime> datesynced, Nullable<long> recordid, string otherplans, string dispillustrationno, Nullable<decimal> benefitamount, string dispplancode, string termcontributiontypecode, string isspecial, string changetype, Nullable<int> boupdatedby, Nullable<int> bolastupdatedby, Nullable<System.DateTime> newstatusdate, string isopeningbalance, string isapproved, string policystatuscode, string ispolicychangesapproved, string is_deleted, string studentname, Nullable<int> studentage, string is_customer_owner, Nullable<long> ownercustomerno, string illustrationstatuscode, string familiar, string repatriacion, string sepulturaLote, string company_Id, Nullable<int> userIdSystem, Nullable<decimal> special_Payment, Nullable<int> provider_Type_Id, Nullable<int> provider_Id, Nullable<int> contributionPeriod_Month, Nullable<decimal> interest_Rate, string destination_Of_Funds, Nullable<decimal> fractionSurcharge)
        {
            var customerPlannoParameter = customerPlanno.HasValue ?
                new ObjectParameter("customerPlanno", customerPlanno) :
                new ObjectParameter("customerPlanno", typeof(long));
    
            var plandateParameter = plandate.HasValue ?
                new ObjectParameter("plandate", plandate) :
                new ObjectParameter("plandate", typeof(System.DateTime));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var frequencytypecodeParameter = frequencytypecode != null ?
                new ObjectParameter("frequencytypecode", frequencytypecode) :
                new ObjectParameter("frequencytypecode", typeof(string));
    
            var frequencyParameter = frequency.HasValue ?
                new ObjectParameter("frequency", frequency) :
                new ObjectParameter("frequency", typeof(int));
    
            var insuredamountParameter = insuredamount.HasValue ?
                new ObjectParameter("insuredamount", insuredamount) :
                new ObjectParameter("insuredamount", typeof(decimal));
    
            var premiumamountParameter = premiumamount.HasValue ?
                new ObjectParameter("premiumamount", premiumamount) :
                new ObjectParameter("premiumamount", typeof(decimal));
    
            var annualizedpremiumParameter = annualizedpremium.HasValue ?
                new ObjectParameter("annualizedpremium", annualizedpremium) :
                new ObjectParameter("annualizedpremium", typeof(decimal));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var projectedpremiumParameter = projectedpremium.HasValue ?
                new ObjectParameter("projectedpremium", projectedpremium) :
                new ObjectParameter("projectedpremium", typeof(decimal));
    
            var initialcontributionParameter = initialcontribution.HasValue ?
                new ObjectParameter("initialcontribution", initialcontribution) :
                new ObjectParameter("initialcontribution", typeof(decimal));
    
            var initialcommissionParameter = initialcommission.HasValue ?
                new ObjectParameter("initialcommission", initialcommission) :
                new ObjectParameter("initialcommission", typeof(decimal));
    
            var targetpremiumParameter = targetpremium.HasValue ?
                new ObjectParameter("targetpremium", targetpremium) :
                new ObjectParameter("targetpremium", typeof(decimal));
    
            var insurancelevelcodeParameter = insurancelevelcode != null ?
                new ObjectParameter("insurancelevelcode", insurancelevelcode) :
                new ObjectParameter("insurancelevelcode", typeof(string));
    
            var calculatetypecodeParameter = calculatetypecode != null ?
                new ObjectParameter("calculatetypecode", calculatetypecode) :
                new ObjectParameter("calculatetypecode", typeof(string));
    
            var contributiontypecodeParameter = contributiontypecode != null ?
                new ObjectParameter("contributiontypecode", contributiontypecode) :
                new ObjectParameter("contributiontypecode", typeof(string));
    
            var investmentprofilecodeParameter = investmentprofilecode != null ?
                new ObjectParameter("investmentprofilecode", investmentprofilecode) :
                new ObjectParameter("investmentprofilecode", typeof(string));
    
            var investmentprofilepercentParameter = investmentprofilepercent.HasValue ?
                new ObjectParameter("investmentprofilepercent", investmentprofilepercent) :
                new ObjectParameter("investmentprofilepercent", typeof(decimal));
    
            var activityrisktypenoParameter = activityrisktypeno.HasValue ?
                new ObjectParameter("activityrisktypeno", activityrisktypeno) :
                new ObjectParameter("activityrisktypeno", typeof(int));
    
            var healthrisktypenoParameter = healthrisktypeno.HasValue ?
                new ObjectParameter("healthrisktypeno", healthrisktypeno) :
                new ObjectParameter("healthrisktypeno", typeof(int));
    
            var contributionperiodParameter = contributionperiod.HasValue ?
                new ObjectParameter("contributionperiod", contributionperiod) :
                new ObjectParameter("contributionperiod", typeof(int));
    
            var financialgoalParameter = financialgoal != null ?
                new ObjectParameter("financialgoal", financialgoal) :
                new ObjectParameter("financialgoal", typeof(string));
    
            var financialgoalageParameter = financialgoalage.HasValue ?
                new ObjectParameter("financialgoalage", financialgoalage) :
                new ObjectParameter("financialgoalage", typeof(int));
    
            var financialgoalamountParameter = financialgoalamount.HasValue ?
                new ObjectParameter("financialgoalamount", financialgoalamount) :
                new ObjectParameter("financialgoalamount", typeof(decimal));
    
            var currencycodeParameter = currencycode != null ?
                new ObjectParameter("currencycode", currencycode) :
                new ObjectParameter("currencycode", typeof(string));
    
            var rideradbParameter = rideradb != null ?
                new ObjectParameter("rideradb", rideradb) :
                new ObjectParameter("rideradb", typeof(string));
    
            var ridertermParameter = riderterm != null ?
                new ObjectParameter("riderterm", riderterm) :
                new ObjectParameter("riderterm", typeof(string));
    
            var rideroirParameter = rideroir != null ?
                new ObjectParameter("rideroir", rideroir) :
                new ObjectParameter("rideroir", typeof(string));
    
            var countrynoParameter = countryno.HasValue ?
                new ObjectParameter("countryno", countryno) :
                new ObjectParameter("countryno", typeof(int));
    
            var plantypecodeParameter = plantypecode != null ?
                new ObjectParameter("plantypecode", plantypecode) :
                new ObjectParameter("plantypecode", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var rideradbamountParameter = rideradbamount.HasValue ?
                new ObjectParameter("rideradbamount", rideradbamount) :
                new ObjectParameter("rideradbamount", typeof(decimal));
    
            var ridertermamountParameter = ridertermamount.HasValue ?
                new ObjectParameter("ridertermamount", ridertermamount) :
                new ObjectParameter("ridertermamount", typeof(decimal));
    
            var ridertermuntilageParameter = ridertermuntilage.HasValue ?
                new ObjectParameter("ridertermuntilage", ridertermuntilage) :
                new ObjectParameter("ridertermuntilage", typeof(int));
    
            var riderciParameter = riderci != null ?
                new ObjectParameter("riderci", riderci) :
                new ObjectParameter("riderci", typeof(string));
    
            var riderciamountParameter = riderciamount.HasValue ?
                new ObjectParameter("riderciamount", riderciamount) :
                new ObjectParameter("riderciamount", typeof(decimal));
    
            var rideracdbParameter = rideracdb != null ?
                new ObjectParameter("rideracdb", rideracdb) :
                new ObjectParameter("rideracdb", typeof(string));
    
            var rcustomerplannoParameter = rcustomerplanno.HasValue ?
                new ObjectParameter("rcustomerplanno", rcustomerplanno) :
                new ObjectParameter("rcustomerplanno", typeof(long));
    
            var illustrationnoParameter = illustrationno.HasValue ?
                new ObjectParameter("illustrationno", illustrationno) :
                new ObjectParameter("illustrationno", typeof(long));
    
            var dataentrytypecodeParameter = dataentrytypecode != null ?
                new ObjectParameter("dataentrytypecode", dataentrytypecode) :
                new ObjectParameter("dataentrytypecode", typeof(string));
    
            var plancodeParameter = plancode.HasValue ?
                new ObjectParameter("plancode", plancode) :
                new ObjectParameter("plancode", typeof(long));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var contributionuntilageParameter = contributionuntilage.HasValue ?
                new ObjectParameter("contributionuntilage", contributionuntilage) :
                new ObjectParameter("contributionuntilage", typeof(int));
    
            var openingbalanceParameter = openingbalance.HasValue ?
                new ObjectParameter("openingbalance", openingbalance) :
                new ObjectParameter("openingbalance", typeof(decimal));
    
            var minimumpremiumParameter = minimumpremium.HasValue ?
                new ObjectParameter("minimumpremium", minimumpremium) :
                new ObjectParameter("minimumpremium", typeof(decimal));
    
            var openingyearParameter = openingyear.HasValue ?
                new ObjectParameter("openingyear", openingyear) :
                new ObjectParameter("openingyear", typeof(int));
    
            var planeffectivedateParameter = planeffectivedate.HasValue ?
                new ObjectParameter("planeffectivedate", planeffectivedate) :
                new ObjectParameter("planeffectivedate", typeof(System.DateTime));
    
            var illustrationverifiedParameter = illustrationverified != null ?
                new ObjectParameter("illustrationverified", illustrationverified) :
                new ObjectParameter("illustrationverified", typeof(string));
    
            var rideradbcostParameter = rideradbcost.HasValue ?
                new ObjectParameter("rideradbcost", rideradbcost) :
                new ObjectParameter("rideradbcost", typeof(decimal));
    
            var rideracdbcostParameter = rideracdbcost.HasValue ?
                new ObjectParameter("rideracdbcost", rideracdbcost) :
                new ObjectParameter("rideracdbcost", typeof(decimal));
    
            var ridertermcostParameter = ridertermcost.HasValue ?
                new ObjectParameter("ridertermcost", ridertermcost) :
                new ObjectParameter("ridertermcost", typeof(decimal));
    
            var ridercicostParameter = ridercicost.HasValue ?
                new ObjectParameter("ridercicost", ridercicost) :
                new ObjectParameter("ridercicost", typeof(decimal));
    
            var termperiodParameter = termperiod.HasValue ?
                new ObjectParameter("termperiod", termperiod) :
                new ObjectParameter("termperiod", typeof(decimal));
    
            var retirementperiodParameter = retirementperiod.HasValue ?
                new ObjectParameter("retirementperiod", retirementperiod) :
                new ObjectParameter("retirementperiod", typeof(decimal));
    
            var defermentperiodParameter = defermentperiod.HasValue ?
                new ObjectParameter("defermentperiod", defermentperiod) :
                new ObjectParameter("defermentperiod", typeof(decimal));
    
            var annuityamountParameter = annuityamount.HasValue ?
                new ObjectParameter("annuityamount", annuityamount) :
                new ObjectParameter("annuityamount", typeof(decimal));
    
            var companynoParameter = companyno.HasValue ?
                new ObjectParameter("companyno", companyno) :
                new ObjectParameter("companyno", typeof(int));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var otherplansParameter = otherplans != null ?
                new ObjectParameter("otherplans", otherplans) :
                new ObjectParameter("otherplans", typeof(string));
    
            var dispillustrationnoParameter = dispillustrationno != null ?
                new ObjectParameter("dispillustrationno", dispillustrationno) :
                new ObjectParameter("dispillustrationno", typeof(string));
    
            var benefitamountParameter = benefitamount.HasValue ?
                new ObjectParameter("benefitamount", benefitamount) :
                new ObjectParameter("benefitamount", typeof(decimal));
    
            var dispplancodeParameter = dispplancode != null ?
                new ObjectParameter("dispplancode", dispplancode) :
                new ObjectParameter("dispplancode", typeof(string));
    
            var termcontributiontypecodeParameter = termcontributiontypecode != null ?
                new ObjectParameter("termcontributiontypecode", termcontributiontypecode) :
                new ObjectParameter("termcontributiontypecode", typeof(string));
    
            var isspecialParameter = isspecial != null ?
                new ObjectParameter("isspecial", isspecial) :
                new ObjectParameter("isspecial", typeof(string));
    
            var changetypeParameter = changetype != null ?
                new ObjectParameter("changetype", changetype) :
                new ObjectParameter("changetype", typeof(string));
    
            var boupdatedbyParameter = boupdatedby.HasValue ?
                new ObjectParameter("boupdatedby", boupdatedby) :
                new ObjectParameter("boupdatedby", typeof(int));
    
            var bolastupdatedbyParameter = bolastupdatedby.HasValue ?
                new ObjectParameter("bolastupdatedby", bolastupdatedby) :
                new ObjectParameter("bolastupdatedby", typeof(int));
    
            var newstatusdateParameter = newstatusdate.HasValue ?
                new ObjectParameter("newstatusdate", newstatusdate) :
                new ObjectParameter("newstatusdate", typeof(System.DateTime));
    
            var isopeningbalanceParameter = isopeningbalance != null ?
                new ObjectParameter("isopeningbalance", isopeningbalance) :
                new ObjectParameter("isopeningbalance", typeof(string));
    
            var isapprovedParameter = isapproved != null ?
                new ObjectParameter("isapproved", isapproved) :
                new ObjectParameter("isapproved", typeof(string));
    
            var policystatuscodeParameter = policystatuscode != null ?
                new ObjectParameter("policystatuscode", policystatuscode) :
                new ObjectParameter("policystatuscode", typeof(string));
    
            var ispolicychangesapprovedParameter = ispolicychangesapproved != null ?
                new ObjectParameter("ispolicychangesapproved", ispolicychangesapproved) :
                new ObjectParameter("ispolicychangesapproved", typeof(string));
    
            var is_deletedParameter = is_deleted != null ?
                new ObjectParameter("is_deleted", is_deleted) :
                new ObjectParameter("is_deleted", typeof(string));
    
            var studentnameParameter = studentname != null ?
                new ObjectParameter("studentname", studentname) :
                new ObjectParameter("studentname", typeof(string));
    
            var studentageParameter = studentage.HasValue ?
                new ObjectParameter("studentage", studentage) :
                new ObjectParameter("studentage", typeof(int));
    
            var is_customer_ownerParameter = is_customer_owner != null ?
                new ObjectParameter("is_customer_owner", is_customer_owner) :
                new ObjectParameter("is_customer_owner", typeof(string));
    
            var ownercustomernoParameter = ownercustomerno.HasValue ?
                new ObjectParameter("ownercustomerno", ownercustomerno) :
                new ObjectParameter("ownercustomerno", typeof(long));
    
            var illustrationstatuscodeParameter = illustrationstatuscode != null ?
                new ObjectParameter("illustrationstatuscode", illustrationstatuscode) :
                new ObjectParameter("illustrationstatuscode", typeof(string));
    
            var familiarParameter = familiar != null ?
                new ObjectParameter("Familiar", familiar) :
                new ObjectParameter("Familiar", typeof(string));
    
            var repatriacionParameter = repatriacion != null ?
                new ObjectParameter("Repatriacion", repatriacion) :
                new ObjectParameter("Repatriacion", typeof(string));
    
            var sepulturaLoteParameter = sepulturaLote != null ?
                new ObjectParameter("SepulturaLote", sepulturaLote) :
                new ObjectParameter("SepulturaLote", typeof(string));
    
            var company_IdParameter = company_Id != null ?
                new ObjectParameter("Company_Id", company_Id) :
                new ObjectParameter("Company_Id", typeof(string));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            var special_PaymentParameter = special_Payment.HasValue ?
                new ObjectParameter("Special_Payment", special_Payment) :
                new ObjectParameter("Special_Payment", typeof(decimal));
    
            var provider_Type_IdParameter = provider_Type_Id.HasValue ?
                new ObjectParameter("Provider_Type_Id", provider_Type_Id) :
                new ObjectParameter("Provider_Type_Id", typeof(int));
    
            var provider_IdParameter = provider_Id.HasValue ?
                new ObjectParameter("Provider_Id", provider_Id) :
                new ObjectParameter("Provider_Id", typeof(int));
    
            var contributionPeriod_MonthParameter = contributionPeriod_Month.HasValue ?
                new ObjectParameter("ContributionPeriod_Month", contributionPeriod_Month) :
                new ObjectParameter("ContributionPeriod_Month", typeof(int));
    
            var interest_RateParameter = interest_Rate.HasValue ?
                new ObjectParameter("Interest_Rate", interest_Rate) :
                new ObjectParameter("Interest_Rate", typeof(decimal));
    
            var destination_Of_FundsParameter = destination_Of_Funds != null ?
                new ObjectParameter("Destination_Of_Funds", destination_Of_Funds) :
                new ObjectParameter("Destination_Of_Funds", typeof(string));
    
            var fractionSurchargeParameter = fractionSurcharge.HasValue ?
                new ObjectParameter("FractionSurcharge", fractionSurcharge) :
                new ObjectParameter("FractionSurcharge", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerPlandet_Result>("sp_set_customerPlandet", customerPlannoParameter, plandateParameter, productcodeParameter, classParameter, customernoParameter, frequencytypecodeParameter, frequencyParameter, insuredamountParameter, premiumamountParameter, annualizedpremiumParameter, enddateParameter, projectedpremiumParameter, initialcontributionParameter, initialcommissionParameter, targetpremiumParameter, insurancelevelcodeParameter, calculatetypecodeParameter, contributiontypecodeParameter, investmentprofilecodeParameter, investmentprofilepercentParameter, activityrisktypenoParameter, healthrisktypenoParameter, contributionperiodParameter, financialgoalParameter, financialgoalageParameter, financialgoalamountParameter, currencycodeParameter, rideradbParameter, ridertermParameter, rideroirParameter, countrynoParameter, plantypecodeParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, rideradbamountParameter, ridertermamountParameter, ridertermuntilageParameter, riderciParameter, riderciamountParameter, rideracdbParameter, rcustomerplannoParameter, illustrationnoParameter, dataentrytypecodeParameter, plancodeParameter, useridParameter, contributionuntilageParameter, openingbalanceParameter, minimumpremiumParameter, openingyearParameter, planeffectivedateParameter, illustrationverifiedParameter, rideradbcostParameter, rideracdbcostParameter, ridertermcostParameter, ridercicostParameter, termperiodParameter, retirementperiodParameter, defermentperiodParameter, annuityamountParameter, companynoParameter, datesyncedParameter, recordidParameter, otherplansParameter, dispillustrationnoParameter, benefitamountParameter, dispplancodeParameter, termcontributiontypecodeParameter, isspecialParameter, changetypeParameter, boupdatedbyParameter, bolastupdatedbyParameter, newstatusdateParameter, isopeningbalanceParameter, isapprovedParameter, policystatuscodeParameter, ispolicychangesapprovedParameter, is_deletedParameter, studentnameParameter, studentageParameter, is_customer_ownerParameter, ownercustomernoParameter, illustrationstatuscodeParameter, familiarParameter, repatriacionParameter, sepulturaLoteParameter, company_IdParameter, userIdSystemParameter, special_PaymentParameter, provider_Type_IdParameter, provider_IdParameter, contributionPeriod_MonthParameter, interest_RateParameter, destination_Of_FundsParameter, fractionSurchargeParameter);
        }
    
        public virtual int sp_delete_customeremaildet(Nullable<long> customerno, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customeremaildet", customernoParameter, userIdSystemParameter);
        }
    
        public virtual int sp_delete_customerphonedet(Nullable<long> customerno, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerphonedet", customernoParameter, userIdSystemParameter);
        }
    
        public virtual int sp_insert_customeremaildet(Nullable<long> customerno, string emailtypecode, string emailid, string additional, Nullable<System.DateTime> datesynced, Nullable<long> recordid, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var emailtypecodeParameter = emailtypecode != null ?
                new ObjectParameter("emailtypecode", emailtypecode) :
                new ObjectParameter("emailtypecode", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            var additionalParameter = additional != null ?
                new ObjectParameter("additional", additional) :
                new ObjectParameter("additional", typeof(string));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_customeremaildet", customernoParameter, emailtypecodeParameter, emailidParameter, additionalParameter, datesyncedParameter, recordidParameter, userIdSystemParameter);
        }
    
        public virtual int sp_insert_customerphonedet(Nullable<long> customerno, string phonetypecode, string intCode, string areacode, string phoneno, string ext, string additional, Nullable<long> rcustomerphoneno, Nullable<System.DateTime> datesynced, Nullable<long> recordid, string specialphonetype, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var phonetypecodeParameter = phonetypecode != null ?
                new ObjectParameter("phonetypecode", phonetypecode) :
                new ObjectParameter("phonetypecode", typeof(string));
    
            var intCodeParameter = intCode != null ?
                new ObjectParameter("IntCode", intCode) :
                new ObjectParameter("IntCode", typeof(string));
    
            var areacodeParameter = areacode != null ?
                new ObjectParameter("Areacode", areacode) :
                new ObjectParameter("Areacode", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("phoneno", phoneno) :
                new ObjectParameter("phoneno", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("ext", ext) :
                new ObjectParameter("ext", typeof(string));
    
            var additionalParameter = additional != null ?
                new ObjectParameter("additional", additional) :
                new ObjectParameter("additional", typeof(string));
    
            var rcustomerphonenoParameter = rcustomerphoneno.HasValue ?
                new ObjectParameter("rcustomerphoneno", rcustomerphoneno) :
                new ObjectParameter("rcustomerphoneno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var specialphonetypeParameter = specialphonetype != null ?
                new ObjectParameter("specialphonetype", specialphonetype) :
                new ObjectParameter("specialphonetype", typeof(string));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_customerphonedet", customernoParameter, phonetypecodeParameter, intCodeParameter, areacodeParameter, phonenoParameter, extParameter, additionalParameter, rcustomerphonenoParameter, datesyncedParameter, recordidParameter, specialphonetypeParameter, userIdSystemParameter);
        }
    
        public virtual int sp_delete_customeroccupationdet(Nullable<long> customerno, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customeroccupationdet", customernoParameter, userIdSystemParameter);
        }
    
        public virtual int sp_delete_customerplanidentificationdet(Nullable<long> customerno, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanidentificationdet", customernoParameter, userIdSystemParameter);
        }
    
        public virtual int sp_insert_customerplanidentificationdet(string insuredtypecode, string identificationtypecode, string identificationcode, Nullable<System.DateTime> expirydate, Nullable<int> countryno, Nullable<long> rcustomeridentificationno, Nullable<System.DateTime> datesynced, Nullable<long> recordid, Nullable<long> customerno, Nullable<int> userIdSystem)
        {
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            var identificationtypecodeParameter = identificationtypecode != null ?
                new ObjectParameter("identificationtypecode", identificationtypecode) :
                new ObjectParameter("identificationtypecode", typeof(string));
    
            var identificationcodeParameter = identificationcode != null ?
                new ObjectParameter("identificationcode", identificationcode) :
                new ObjectParameter("identificationcode", typeof(string));
    
            var expirydateParameter = expirydate.HasValue ?
                new ObjectParameter("expirydate", expirydate) :
                new ObjectParameter("expirydate", typeof(System.DateTime));
    
            var countrynoParameter = countryno.HasValue ?
                new ObjectParameter("countryno", countryno) :
                new ObjectParameter("countryno", typeof(int));
    
            var rcustomeridentificationnoParameter = rcustomeridentificationno.HasValue ?
                new ObjectParameter("rcustomeridentificationno", rcustomeridentificationno) :
                new ObjectParameter("rcustomeridentificationno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_customerplanidentificationdet", insuredtypecodeParameter, identificationtypecodeParameter, identificationcodeParameter, expirydateParameter, countrynoParameter, rcustomeridentificationnoParameter, datesyncedParameter, recordidParameter, customernoParameter, userIdSystemParameter);
        }
    
        public virtual ObjectResult<sp_set_customeroccupationdet_Result> sp_set_customeroccupationdet(Nullable<long> customerno, string companyname, string businesstype, Nullable<int> workyears, Nullable<int> workmonths, string occupationtypecode, string professiontypecode, string tasks, Nullable<decimal> annualfamilyincome, Nullable<long> customeroccupationno, Nullable<long> rcustomeroccupationno, Nullable<System.DateTime> datesynced, Nullable<long> recordid, Nullable<int> userIdSystem)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var businesstypeParameter = businesstype != null ?
                new ObjectParameter("businesstype", businesstype) :
                new ObjectParameter("businesstype", typeof(string));
    
            var workyearsParameter = workyears.HasValue ?
                new ObjectParameter("workyears", workyears) :
                new ObjectParameter("workyears", typeof(int));
    
            var workmonthsParameter = workmonths.HasValue ?
                new ObjectParameter("workmonths", workmonths) :
                new ObjectParameter("workmonths", typeof(int));
    
            var occupationtypecodeParameter = occupationtypecode != null ?
                new ObjectParameter("occupationtypecode", occupationtypecode) :
                new ObjectParameter("occupationtypecode", typeof(string));
    
            var professiontypecodeParameter = professiontypecode != null ?
                new ObjectParameter("professiontypecode", professiontypecode) :
                new ObjectParameter("professiontypecode", typeof(string));
    
            var tasksParameter = tasks != null ?
                new ObjectParameter("tasks", tasks) :
                new ObjectParameter("tasks", typeof(string));
    
            var annualfamilyincomeParameter = annualfamilyincome.HasValue ?
                new ObjectParameter("annualfamilyincome", annualfamilyincome) :
                new ObjectParameter("annualfamilyincome", typeof(decimal));
    
            var customeroccupationnoParameter = customeroccupationno.HasValue ?
                new ObjectParameter("customeroccupationno", customeroccupationno) :
                new ObjectParameter("customeroccupationno", typeof(long));
    
            var rcustomeroccupationnoParameter = rcustomeroccupationno.HasValue ?
                new ObjectParameter("rcustomeroccupationno", rcustomeroccupationno) :
                new ObjectParameter("rcustomeroccupationno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customeroccupationdet_Result>("sp_set_customeroccupationdet", customernoParameter, companynameParameter, businesstypeParameter, workyearsParameter, workmonthsParameter, occupationtypecodeParameter, professiontypecodeParameter, tasksParameter, annualfamilyincomeParameter, customeroccupationnoParameter, rcustomeroccupationnoParameter, datesyncedParameter, recordidParameter, userIdSystemParameter);
        }
    
        public virtual ObjectResult<sp_get_userdet_Result> sp_get_userdet(string nameid)
        {
            var nameidParameter = nameid != null ?
                new ObjectParameter("nameid", nameid) :
                new ObjectParameter("nameid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_userdet_Result>("sp_get_userdet", nameidParameter);
        }
    
        public virtual ObjectResult<sp_set_illustrationsignaturedet_Result> sp_set_illustrationsignaturedet(Nullable<long> customerplanno, string customersign1, string agentsign1, string customersign2, string agentsign2, string customersign3, string agentsign3, string customersign4, string agentsign4, string customersign5, string agentsign5, Nullable<int> sign1pageno, Nullable<int> sign2pageno, Nullable<int> sign3pageno, Nullable<int> sign4pageno, Nullable<int> sign5pageno, string pdffilename, string ispdflocked, Nullable<System.DateTime> datesynced)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var customersign1Parameter = customersign1 != null ?
                new ObjectParameter("customersign1", customersign1) :
                new ObjectParameter("customersign1", typeof(string));
    
            var agentsign1Parameter = agentsign1 != null ?
                new ObjectParameter("agentsign1", agentsign1) :
                new ObjectParameter("agentsign1", typeof(string));
    
            var customersign2Parameter = customersign2 != null ?
                new ObjectParameter("customersign2", customersign2) :
                new ObjectParameter("customersign2", typeof(string));
    
            var agentsign2Parameter = agentsign2 != null ?
                new ObjectParameter("agentsign2", agentsign2) :
                new ObjectParameter("agentsign2", typeof(string));
    
            var customersign3Parameter = customersign3 != null ?
                new ObjectParameter("customersign3", customersign3) :
                new ObjectParameter("customersign3", typeof(string));
    
            var agentsign3Parameter = agentsign3 != null ?
                new ObjectParameter("agentsign3", agentsign3) :
                new ObjectParameter("agentsign3", typeof(string));
    
            var customersign4Parameter = customersign4 != null ?
                new ObjectParameter("customersign4", customersign4) :
                new ObjectParameter("customersign4", typeof(string));
    
            var agentsign4Parameter = agentsign4 != null ?
                new ObjectParameter("agentsign4", agentsign4) :
                new ObjectParameter("agentsign4", typeof(string));
    
            var customersign5Parameter = customersign5 != null ?
                new ObjectParameter("customersign5", customersign5) :
                new ObjectParameter("customersign5", typeof(string));
    
            var agentsign5Parameter = agentsign5 != null ?
                new ObjectParameter("agentsign5", agentsign5) :
                new ObjectParameter("agentsign5", typeof(string));
    
            var sign1pagenoParameter = sign1pageno.HasValue ?
                new ObjectParameter("sign1pageno", sign1pageno) :
                new ObjectParameter("sign1pageno", typeof(int));
    
            var sign2pagenoParameter = sign2pageno.HasValue ?
                new ObjectParameter("sign2pageno", sign2pageno) :
                new ObjectParameter("sign2pageno", typeof(int));
    
            var sign3pagenoParameter = sign3pageno.HasValue ?
                new ObjectParameter("sign3pageno", sign3pageno) :
                new ObjectParameter("sign3pageno", typeof(int));
    
            var sign4pagenoParameter = sign4pageno.HasValue ?
                new ObjectParameter("sign4pageno", sign4pageno) :
                new ObjectParameter("sign4pageno", typeof(int));
    
            var sign5pagenoParameter = sign5pageno.HasValue ?
                new ObjectParameter("sign5pageno", sign5pageno) :
                new ObjectParameter("sign5pageno", typeof(int));
    
            var pdffilenameParameter = pdffilename != null ?
                new ObjectParameter("pdffilename", pdffilename) :
                new ObjectParameter("pdffilename", typeof(string));
    
            var ispdflockedParameter = ispdflocked != null ?
                new ObjectParameter("ispdflocked", ispdflocked) :
                new ObjectParameter("ispdflocked", typeof(string));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_illustrationsignaturedet_Result>("sp_set_illustrationsignaturedet", customerplannoParameter, customersign1Parameter, agentsign1Parameter, customersign2Parameter, agentsign2Parameter, customersign3Parameter, agentsign3Parameter, customersign4Parameter, agentsign4Parameter, customersign5Parameter, agentsign5Parameter, sign1pagenoParameter, sign2pagenoParameter, sign3pagenoParameter, sign4pagenoParameter, sign5pagenoParameter, pdffilenameParameter, ispdflockedParameter, datesyncedParameter);
        }
    
        public virtual ObjectResult<sp_set_userdet_Result> sp_set_userdet(Nullable<long> userid, string usertypecode, string username, string password, Nullable<int> roleno, string emailsent, string emailid, string active, Nullable<System.DateTime> datecreated, Nullable<System.DateTime> updatePassDate, string canlogin, Nullable<System.DateTime> lastlogindate, Nullable<System.DateTime> datesynced, Nullable<System.DateTime> dateupdated, Nullable<int> supervisorid, string designation, Nullable<int> hierarchycode, string isadmin, Nullable<int> usergroupno, string nameid, Nullable<System.Guid> msrepl_tran_version, Nullable<bool> isBlocked, string encryptPassword)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var usertypecodeParameter = usertypecode != null ?
                new ObjectParameter("usertypecode", usertypecode) :
                new ObjectParameter("usertypecode", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var rolenoParameter = roleno.HasValue ?
                new ObjectParameter("roleno", roleno) :
                new ObjectParameter("roleno", typeof(int));
    
            var emailsentParameter = emailsent != null ?
                new ObjectParameter("emailsent", emailsent) :
                new ObjectParameter("emailsent", typeof(string));
    
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var updatePassDateParameter = updatePassDate.HasValue ?
                new ObjectParameter("UpdatePassDate", updatePassDate) :
                new ObjectParameter("UpdatePassDate", typeof(System.DateTime));
    
            var canloginParameter = canlogin != null ?
                new ObjectParameter("canlogin", canlogin) :
                new ObjectParameter("canlogin", typeof(string));
    
            var lastlogindateParameter = lastlogindate.HasValue ?
                new ObjectParameter("Lastlogindate", lastlogindate) :
                new ObjectParameter("Lastlogindate", typeof(System.DateTime));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var supervisoridParameter = supervisorid.HasValue ?
                new ObjectParameter("supervisorid", supervisorid) :
                new ObjectParameter("supervisorid", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var hierarchycodeParameter = hierarchycode.HasValue ?
                new ObjectParameter("hierarchycode", hierarchycode) :
                new ObjectParameter("hierarchycode", typeof(int));
    
            var isadminParameter = isadmin != null ?
                new ObjectParameter("isadmin", isadmin) :
                new ObjectParameter("isadmin", typeof(string));
    
            var usergroupnoParameter = usergroupno.HasValue ?
                new ObjectParameter("usergroupno", usergroupno) :
                new ObjectParameter("usergroupno", typeof(int));
    
            var nameidParameter = nameid != null ?
                new ObjectParameter("nameid", nameid) :
                new ObjectParameter("nameid", typeof(string));
    
            var msrepl_tran_versionParameter = msrepl_tran_version.HasValue ?
                new ObjectParameter("msrepl_tran_version", msrepl_tran_version) :
                new ObjectParameter("msrepl_tran_version", typeof(System.Guid));
    
            var isBlockedParameter = isBlocked.HasValue ?
                new ObjectParameter("IsBlocked", isBlocked) :
                new ObjectParameter("IsBlocked", typeof(bool));
    
            var encryptPasswordParameter = encryptPassword != null ?
                new ObjectParameter("EncryptPassword", encryptPassword) :
                new ObjectParameter("EncryptPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_userdet_Result>("sp_set_userdet", useridParameter, usertypecodeParameter, usernameParameter, passwordParameter, rolenoParameter, emailsentParameter, emailidParameter, activeParameter, datecreatedParameter, updatePassDateParameter, canloginParameter, lastlogindateParameter, datesyncedParameter, dateupdatedParameter, supervisoridParameter, designationParameter, hierarchycodeParameter, isadminParameter, usergroupnoParameter, nameidParameter, msrepl_tran_versionParameter, isBlockedParameter, encryptPasswordParameter);
        }
    
        public virtual ObjectResult<sp_get_illustrationsignaturedet_Result> sp_get_illustrationsignaturedet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_illustrationsignaturedet_Result>("sp_get_illustrationsignaturedet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_max_illustrationno_Result> sp_get_max_illustrationno()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_max_illustrationno_Result>("sp_get_max_illustrationno");
        }
    
        public virtual ObjectResult<sp_get_customerplanbeneficiarydet_Result> sp_get_customerplanbeneficiarydet(Nullable<long> customerplanno, string insuredtypecode, string beneficiarytypecode)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            var beneficiarytypecodeParameter = beneficiarytypecode != null ?
                new ObjectParameter("beneficiarytypecode", beneficiarytypecode) :
                new ObjectParameter("beneficiarytypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanbeneficiarydet_Result>("sp_get_customerplanbeneficiarydet", customerplannoParameter, insuredtypecodeParameter, beneficiarytypecodeParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanbeneficiarydet_Result> sp_set_customerplanbeneficiarydet(Nullable<long> customerplanno, string insuredtypecode, string beneficiarytypecode, string firstname, string middlename, string lastname, Nullable<System.DateTime> dob, string relationshiptypecode, Nullable<decimal> percentvalue, Nullable<long> customerplanbeneficiaryno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<long> rcustomerplanbeneficiaryno, Nullable<System.DateTime> datesynced, Nullable<long> recordid, string secondlastname)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            var beneficiarytypecodeParameter = beneficiarytypecode != null ?
                new ObjectParameter("beneficiarytypecode", beneficiarytypecode) :
                new ObjectParameter("beneficiarytypecode", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var middlenameParameter = middlename != null ?
                new ObjectParameter("middlename", middlename) :
                new ObjectParameter("middlename", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var relationshiptypecodeParameter = relationshiptypecode != null ?
                new ObjectParameter("relationshiptypecode", relationshiptypecode) :
                new ObjectParameter("relationshiptypecode", typeof(string));
    
            var percentvalueParameter = percentvalue.HasValue ?
                new ObjectParameter("percentvalue", percentvalue) :
                new ObjectParameter("percentvalue", typeof(decimal));
    
            var customerplanbeneficiarynoParameter = customerplanbeneficiaryno.HasValue ?
                new ObjectParameter("customerplanbeneficiaryno", customerplanbeneficiaryno) :
                new ObjectParameter("customerplanbeneficiaryno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var rcustomerplanbeneficiarynoParameter = rcustomerplanbeneficiaryno.HasValue ?
                new ObjectParameter("rcustomerplanbeneficiaryno", rcustomerplanbeneficiaryno) :
                new ObjectParameter("rcustomerplanbeneficiaryno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var secondlastnameParameter = secondlastname != null ?
                new ObjectParameter("secondlastname", secondlastname) :
                new ObjectParameter("secondlastname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanbeneficiarydet_Result>("sp_set_customerplanbeneficiarydet", customerplannoParameter, insuredtypecodeParameter, beneficiarytypecodeParameter, firstnameParameter, middlenameParameter, lastnameParameter, dobParameter, relationshiptypecodeParameter, percentvalueParameter, customerplanbeneficiarynoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, rcustomerplanbeneficiarynoParameter, datesyncedParameter, recordidParameter, secondlastnameParameter);
        }
    
        public virtual int sp_delete_customerplanbeneficiarydet(Nullable<long> customerplanbeneficiaryno)
        {
            var customerplanbeneficiarynoParameter = customerplanbeneficiaryno.HasValue ?
                new ObjectParameter("customerplanbeneficiaryno", customerplanbeneficiaryno) :
                new ObjectParameter("customerplanbeneficiaryno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanbeneficiarydet", customerplanbeneficiarynoParameter);
        }
    
        public virtual int sp_delete_customerplanpartnerinsurancedet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanpartnerinsurancedet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanpartnerinsurancedet_Result> sp_get_customerplanpartnerinsurancedet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanpartnerinsurancedet_Result>("sp_get_customerplanpartnerinsurancedet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanpartnerinsurancedet_Result> sp_set_customerplanpartnerinsurancedet(Nullable<long> customerplanno, string firstname, string middlename, string lastname, Nullable<decimal> insuredamount, Nullable<int> age, string gendercode, string maritalstatuscode, string smoker, Nullable<int> activityrisktypeno, Nullable<int> healthrisktypeno, string otherplans, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<decimal> rideroiramount, Nullable<int> untilage, Nullable<long> rcustomerplanpartnerinsuranceno, Nullable<decimal> rideroircost, Nullable<System.DateTime> datesynced, Nullable<long> recordid, string relationshiptypecode, Nullable<long> customerno, string contributiontypecode, string lastName2, Nullable<System.DateTime> birthdate)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var middlenameParameter = middlename != null ?
                new ObjectParameter("middlename", middlename) :
                new ObjectParameter("middlename", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var insuredamountParameter = insuredamount.HasValue ?
                new ObjectParameter("insuredamount", insuredamount) :
                new ObjectParameter("insuredamount", typeof(decimal));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var gendercodeParameter = gendercode != null ?
                new ObjectParameter("gendercode", gendercode) :
                new ObjectParameter("gendercode", typeof(string));
    
            var maritalstatuscodeParameter = maritalstatuscode != null ?
                new ObjectParameter("maritalstatuscode", maritalstatuscode) :
                new ObjectParameter("maritalstatuscode", typeof(string));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("smoker", smoker) :
                new ObjectParameter("smoker", typeof(string));
    
            var activityrisktypenoParameter = activityrisktypeno.HasValue ?
                new ObjectParameter("activityrisktypeno", activityrisktypeno) :
                new ObjectParameter("activityrisktypeno", typeof(int));
    
            var healthrisktypenoParameter = healthrisktypeno.HasValue ?
                new ObjectParameter("healthrisktypeno", healthrisktypeno) :
                new ObjectParameter("healthrisktypeno", typeof(int));
    
            var otherplansParameter = otherplans != null ?
                new ObjectParameter("otherplans", otherplans) :
                new ObjectParameter("otherplans", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var rideroiramountParameter = rideroiramount.HasValue ?
                new ObjectParameter("rideroiramount", rideroiramount) :
                new ObjectParameter("rideroiramount", typeof(decimal));
    
            var untilageParameter = untilage.HasValue ?
                new ObjectParameter("untilage", untilage) :
                new ObjectParameter("untilage", typeof(int));
    
            var rcustomerplanpartnerinsurancenoParameter = rcustomerplanpartnerinsuranceno.HasValue ?
                new ObjectParameter("rcustomerplanpartnerinsuranceno", rcustomerplanpartnerinsuranceno) :
                new ObjectParameter("rcustomerplanpartnerinsuranceno", typeof(long));
    
            var rideroircostParameter = rideroircost.HasValue ?
                new ObjectParameter("rideroircost", rideroircost) :
                new ObjectParameter("rideroircost", typeof(decimal));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var relationshiptypecodeParameter = relationshiptypecode != null ?
                new ObjectParameter("relationshiptypecode", relationshiptypecode) :
                new ObjectParameter("relationshiptypecode", typeof(string));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var contributiontypecodeParameter = contributiontypecode != null ?
                new ObjectParameter("contributiontypecode", contributiontypecode) :
                new ObjectParameter("contributiontypecode", typeof(string));
    
            var lastName2Parameter = lastName2 != null ?
                new ObjectParameter("LastName2", lastName2) :
                new ObjectParameter("LastName2", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanpartnerinsurancedet_Result>("sp_set_customerplanpartnerinsurancedet", customerplannoParameter, firstnameParameter, middlenameParameter, lastnameParameter, insuredamountParameter, ageParameter, gendercodeParameter, maritalstatuscodeParameter, smokerParameter, activityrisktypenoParameter, healthrisktypenoParameter, otherplansParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, rideroiramountParameter, untilageParameter, rcustomerplanpartnerinsurancenoParameter, rideroircostParameter, datesyncedParameter, recordidParameter, relationshiptypecodeParameter, customernoParameter, contributiontypecodeParameter, lastName2Parameter, birthdateParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanotherinsurancedet_Result> sp_get_customerplanotherinsurancedet(Nullable<long> customerplanno, string insuredtypecode)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanotherinsurancedet_Result>("sp_get_customerplanotherinsurancedet", customerplannoParameter, insuredtypecodeParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanotherinsurancedet_Result> sp_set_customerplanotherinsurancedet(Nullable<long> customerplanno, string insuredtypecode, string productcode, Nullable<decimal> insuredamount, Nullable<decimal> annuityamount, Nullable<int> annuityperiod, Nullable<long> customerplanotherinsuranceno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<long> rcustomerplanotherinsuranceno, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var insuredamountParameter = insuredamount.HasValue ?
                new ObjectParameter("insuredamount", insuredamount) :
                new ObjectParameter("insuredamount", typeof(decimal));
    
            var annuityamountParameter = annuityamount.HasValue ?
                new ObjectParameter("annuityamount", annuityamount) :
                new ObjectParameter("annuityamount", typeof(decimal));
    
            var annuityperiodParameter = annuityperiod.HasValue ?
                new ObjectParameter("annuityperiod", annuityperiod) :
                new ObjectParameter("annuityperiod", typeof(int));
    
            var customerplanotherinsurancenoParameter = customerplanotherinsuranceno.HasValue ?
                new ObjectParameter("customerplanotherinsuranceno", customerplanotherinsuranceno) :
                new ObjectParameter("customerplanotherinsuranceno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var rcustomerplanotherinsurancenoParameter = rcustomerplanotherinsuranceno.HasValue ?
                new ObjectParameter("rcustomerplanotherinsuranceno", rcustomerplanotherinsuranceno) :
                new ObjectParameter("rcustomerplanotherinsuranceno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanotherinsurancedet_Result>("sp_set_customerplanotherinsurancedet", customerplannoParameter, insuredtypecodeParameter, productcodeParameter, insuredamountParameter, annuityamountParameter, annuityperiodParameter, customerplanotherinsurancenoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, rcustomerplanotherinsurancenoParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual int sp_delete_customerplanotherinsurancedet(Nullable<long> customerplanotherinsuranceno)
        {
            var customerplanotherinsurancenoParameter = customerplanotherinsuranceno.HasValue ?
                new ObjectParameter("customerplanotherinsuranceno", customerplanotherinsuranceno) :
                new ObjectParameter("customerplanotherinsuranceno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanotherinsurancedet", customerplanotherinsurancenoParameter);
        }
    
        public virtual int sp_delete_customerplanexamdet(Nullable<long> customerplanno, string insuredtypecode, Nullable<int> userIdSystem)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            var userIdSystemParameter = userIdSystem.HasValue ?
                new ObjectParameter("UserIdSystem", userIdSystem) :
                new ObjectParameter("UserIdSystem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanexamdet", customerplannoParameter, insuredtypecodeParameter, userIdSystemParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanexamdet_Result> sp_get_customerplanexamdet(Nullable<long> customerplanno, string insuredtypecode)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanexamdet_Result>("sp_get_customerplanexamdet", customerplannoParameter, insuredtypecodeParameter);
        }
    
        public virtual ObjectResult<sp_get_examcondition_Result> sp_get_examcondition(string productCode, Nullable<int> age, string genderCode, string maritalStatusCode, Nullable<decimal> insuredAmount)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var genderCodeParameter = genderCode != null ?
                new ObjectParameter("GenderCode", genderCode) :
                new ObjectParameter("GenderCode", typeof(string));
    
            var maritalStatusCodeParameter = maritalStatusCode != null ?
                new ObjectParameter("MaritalStatusCode", maritalStatusCode) :
                new ObjectParameter("MaritalStatusCode", typeof(string));
    
            var insuredAmountParameter = insuredAmount.HasValue ?
                new ObjectParameter("InsuredAmount", insuredAmount) :
                new ObjectParameter("InsuredAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_examcondition_Result>("sp_get_examcondition", productCodeParameter, ageParameter, genderCodeParameter, maritalStatusCodeParameter, insuredAmountParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanexamdet_Result> sp_set_customerplanexamdet(string examcode, Nullable<System.DateTime> datecreated, Nullable<System.DateTime> dateupdated, Nullable<int> createdby, Nullable<int> updatedby, Nullable<long> customerexamno, Nullable<long> rcustomerexamno, Nullable<long> customerplanno, string insuredtypecode, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var examcodeParameter = examcode != null ?
                new ObjectParameter("examcode", examcode) :
                new ObjectParameter("examcode", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var customerexamnoParameter = customerexamno.HasValue ?
                new ObjectParameter("customerexamno", customerexamno) :
                new ObjectParameter("customerexamno", typeof(long));
    
            var rcustomerexamnoParameter = rcustomerexamno.HasValue ?
                new ObjectParameter("rcustomerexamno", rcustomerexamno) :
                new ObjectParameter("rcustomerexamno", typeof(long));
    
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var insuredtypecodeParameter = insuredtypecode != null ?
                new ObjectParameter("insuredtypecode", insuredtypecode) :
                new ObjectParameter("insuredtypecode", typeof(string));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanexamdet_Result>("sp_set_customerplanexamdet", examcodeParameter, datecreatedParameter, dateupdatedParameter, createdbyParameter, updatedbyParameter, customerexamnoParameter, rcustomerexamnoParameter, customerplannoParameter, insuredtypecodeParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual ObjectResult<sp_get_totalinsuredamount_Result> sp_get_totalinsuredamount(Nullable<long> customerPlanNo, string insuredTypeCode)
        {
            var customerPlanNoParameter = customerPlanNo.HasValue ?
                new ObjectParameter("CustomerPlanNo", customerPlanNo) :
                new ObjectParameter("CustomerPlanNo", typeof(long));
    
            var insuredTypeCodeParameter = insuredTypeCode != null ?
                new ObjectParameter("InsuredTypeCode", insuredTypeCode) :
                new ObjectParameter("InsuredTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_totalinsuredamount_Result>("sp_get_totalinsuredamount", customerPlanNoParameter, insuredTypeCodeParameter);
        }
    
        public virtual ObjectResult<sp_get_ruleparametervaluesdet_Result> sp_get_ruleparametervaluesdet(Nullable<int> ruleparameterno, string productcode)
        {
            var ruleparameternoParameter = ruleparameterno.HasValue ?
                new ObjectParameter("ruleparameterno", ruleparameterno) :
                new ObjectParameter("ruleparameterno", typeof(int));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_ruleparametervaluesdet_Result>("sp_get_ruleparametervaluesdet", ruleparameternoParameter, productcodeParameter);
        }
    
        public virtual int sp_delete_customerplanloandet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanloandet", customerplannoParameter);
        }
    
        public virtual int sp_delete_customerplanloanrepaydet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanloanrepaydet", customerplannoParameter);
        }
    
        public virtual int sp_delete_customerplanopbaldet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanopbaldet", customerplannoParameter);
        }
    
        public virtual int sp_delete_customerplanvarinsureddet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanvarinsureddet", customerplannoParameter);
        }
    
        public virtual int sp_delete_customerplanvarpremiumdet(Nullable<long> customerplanvarpremiumno)
        {
            var customerplanvarpremiumnoParameter = customerplanvarpremiumno.HasValue ?
                new ObjectParameter("customerplanvarpremiumno", customerplanvarpremiumno) :
                new ObjectParameter("customerplanvarpremiumno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanvarpremiumdet", customerplanvarpremiumnoParameter);
        }
    
        public virtual int sp_delete_customerplanvarprofiledet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanvarprofiledet", customerplannoParameter);
        }
    
        public virtual int sp_delete_customerplanvarsurrenderdet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanvarsurrenderdet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanloandet_Result> sp_get_customerplanloandet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanloandet_Result>("sp_get_customerplanloandet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanloanrepaydet_Result> sp_get_customerplanloanrepaydet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanloanrepaydet_Result>("sp_get_customerplanloanrepaydet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanopbaldet_Result> sp_get_customerplanopbaldet(Nullable<long> customerno, Nullable<long> customerplanno)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanopbaldet_Result>("sp_get_customerplanopbaldet", customernoParameter, customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanvarinsureddet_Result> sp_get_customerplanvarinsureddet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanvarinsureddet_Result>("sp_get_customerplanvarinsureddet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanvarpremiumdet_Result> sp_get_customerplanvarpremiumdet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanvarpremiumdet_Result>("sp_get_customerplanvarpremiumdet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanvarprofiledet_Result> sp_get_customerplanvarprofiledet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanvarprofiledet_Result>("sp_get_customerplanvarprofiledet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanvarsurrenderdet_Result> sp_get_customerplanvarsurrenderdet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanvarsurrenderdet_Result>("sp_get_customerplanvarsurrenderdet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanloandet_Result> sp_set_customerplanloandet(Nullable<long> customerplanno, Nullable<int> fromyearno, Nullable<int> toyearno, Nullable<decimal> loanamount, Nullable<long> customerplanvarloanno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<int> sno, Nullable<long> rcustomerplanloanno, Nullable<long> rcustomerplanloanrepayno, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var fromyearnoParameter = fromyearno.HasValue ?
                new ObjectParameter("fromyearno", fromyearno) :
                new ObjectParameter("fromyearno", typeof(int));
    
            var toyearnoParameter = toyearno.HasValue ?
                new ObjectParameter("toyearno", toyearno) :
                new ObjectParameter("toyearno", typeof(int));
    
            var loanamountParameter = loanamount.HasValue ?
                new ObjectParameter("loanamount", loanamount) :
                new ObjectParameter("loanamount", typeof(decimal));
    
            var customerplanvarloannoParameter = customerplanvarloanno.HasValue ?
                new ObjectParameter("customerplanvarloanno", customerplanvarloanno) :
                new ObjectParameter("customerplanvarloanno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var rcustomerplanloannoParameter = rcustomerplanloanno.HasValue ?
                new ObjectParameter("rcustomerplanloanno", rcustomerplanloanno) :
                new ObjectParameter("rcustomerplanloanno", typeof(long));
    
            var rcustomerplanloanrepaynoParameter = rcustomerplanloanrepayno.HasValue ?
                new ObjectParameter("rcustomerplanloanrepayno", rcustomerplanloanrepayno) :
                new ObjectParameter("rcustomerplanloanrepayno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanloandet_Result>("sp_set_customerplanloandet", customerplannoParameter, fromyearnoParameter, toyearnoParameter, loanamountParameter, customerplanvarloannoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, snoParameter, rcustomerplanloannoParameter, rcustomerplanloanrepaynoParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanloanrepaydet_Result> sp_set_customerplanloanrepaydet(Nullable<long> customerplanno, Nullable<int> fromyearno, Nullable<int> toyearno, Nullable<decimal> paymentamount, Nullable<long> customerplanvarpaymentno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<int> sno, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var fromyearnoParameter = fromyearno.HasValue ?
                new ObjectParameter("fromyearno", fromyearno) :
                new ObjectParameter("fromyearno", typeof(int));
    
            var toyearnoParameter = toyearno.HasValue ?
                new ObjectParameter("toyearno", toyearno) :
                new ObjectParameter("toyearno", typeof(int));
    
            var paymentamountParameter = paymentamount.HasValue ?
                new ObjectParameter("paymentamount", paymentamount) :
                new ObjectParameter("paymentamount", typeof(decimal));
    
            var customerplanvarpaymentnoParameter = customerplanvarpaymentno.HasValue ?
                new ObjectParameter("customerplanvarpaymentno", customerplanvarpaymentno) :
                new ObjectParameter("customerplanvarpaymentno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanloanrepaydet_Result>("sp_set_customerplanloanrepaydet", customerplannoParameter, fromyearnoParameter, toyearnoParameter, paymentamountParameter, customerplanvarpaymentnoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, snoParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanopbaldet_Result> sp_set_customerplanopbaldet(Nullable<long> customerno, Nullable<long> customerplanno, Nullable<decimal> currentvalue, Nullable<decimal> planyear, Nullable<decimal> targetamount, Nullable<decimal> minimumpremium, string frequencytypecode, Nullable<decimal> periodicpremium, Nullable<int> noofunpaidpremiums, string investmentprofilecode, Nullable<decimal> monthlyinsurancecost, Nullable<decimal> forceaccountvalue, Nullable<decimal> openingbalance, string calculatetypeobcode, Nullable<int> createdby, Nullable<System.DateTime> datecreated, Nullable<int> updatedby, Nullable<System.DateTime> dateupdated, string productcode, Nullable<System.DateTime> datesynced, Nullable<long> recordid, Nullable<decimal> totalamountpaid, Nullable<decimal> nopaymentsrecieved, Nullable<decimal> amountdue, Nullable<decimal> illustrationmonth, Nullable<decimal> forcetarget, string isoverride, Nullable<int> fullpaymentyear, Nullable<decimal> expectedpremiums, Nullable<decimal> adjustedaccountvalue, Nullable<decimal> insuredamount)
        {
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var currentvalueParameter = currentvalue.HasValue ?
                new ObjectParameter("currentvalue", currentvalue) :
                new ObjectParameter("currentvalue", typeof(decimal));
    
            var planyearParameter = planyear.HasValue ?
                new ObjectParameter("planyear", planyear) :
                new ObjectParameter("planyear", typeof(decimal));
    
            var targetamountParameter = targetamount.HasValue ?
                new ObjectParameter("targetamount", targetamount) :
                new ObjectParameter("targetamount", typeof(decimal));
    
            var minimumpremiumParameter = minimumpremium.HasValue ?
                new ObjectParameter("minimumpremium", minimumpremium) :
                new ObjectParameter("minimumpremium", typeof(decimal));
    
            var frequencytypecodeParameter = frequencytypecode != null ?
                new ObjectParameter("frequencytypecode", frequencytypecode) :
                new ObjectParameter("frequencytypecode", typeof(string));
    
            var periodicpremiumParameter = periodicpremium.HasValue ?
                new ObjectParameter("periodicpremium", periodicpremium) :
                new ObjectParameter("periodicpremium", typeof(decimal));
    
            var noofunpaidpremiumsParameter = noofunpaidpremiums.HasValue ?
                new ObjectParameter("noofunpaidpremiums", noofunpaidpremiums) :
                new ObjectParameter("noofunpaidpremiums", typeof(int));
    
            var investmentprofilecodeParameter = investmentprofilecode != null ?
                new ObjectParameter("investmentprofilecode", investmentprofilecode) :
                new ObjectParameter("investmentprofilecode", typeof(string));
    
            var monthlyinsurancecostParameter = monthlyinsurancecost.HasValue ?
                new ObjectParameter("monthlyinsurancecost", monthlyinsurancecost) :
                new ObjectParameter("monthlyinsurancecost", typeof(decimal));
    
            var forceaccountvalueParameter = forceaccountvalue.HasValue ?
                new ObjectParameter("forceaccountvalue", forceaccountvalue) :
                new ObjectParameter("forceaccountvalue", typeof(decimal));
    
            var openingbalanceParameter = openingbalance.HasValue ?
                new ObjectParameter("openingbalance", openingbalance) :
                new ObjectParameter("openingbalance", typeof(decimal));
    
            var calculatetypeobcodeParameter = calculatetypeobcode != null ?
                new ObjectParameter("calculatetypeobcode", calculatetypeobcode) :
                new ObjectParameter("calculatetypeobcode", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var totalamountpaidParameter = totalamountpaid.HasValue ?
                new ObjectParameter("totalamountpaid", totalamountpaid) :
                new ObjectParameter("totalamountpaid", typeof(decimal));
    
            var nopaymentsrecievedParameter = nopaymentsrecieved.HasValue ?
                new ObjectParameter("nopaymentsrecieved", nopaymentsrecieved) :
                new ObjectParameter("nopaymentsrecieved", typeof(decimal));
    
            var amountdueParameter = amountdue.HasValue ?
                new ObjectParameter("amountdue", amountdue) :
                new ObjectParameter("amountdue", typeof(decimal));
    
            var illustrationmonthParameter = illustrationmonth.HasValue ?
                new ObjectParameter("illustrationmonth", illustrationmonth) :
                new ObjectParameter("illustrationmonth", typeof(decimal));
    
            var forcetargetParameter = forcetarget.HasValue ?
                new ObjectParameter("forcetarget", forcetarget) :
                new ObjectParameter("forcetarget", typeof(decimal));
    
            var isoverrideParameter = isoverride != null ?
                new ObjectParameter("isoverride", isoverride) :
                new ObjectParameter("isoverride", typeof(string));
    
            var fullpaymentyearParameter = fullpaymentyear.HasValue ?
                new ObjectParameter("fullpaymentyear", fullpaymentyear) :
                new ObjectParameter("fullpaymentyear", typeof(int));
    
            var expectedpremiumsParameter = expectedpremiums.HasValue ?
                new ObjectParameter("expectedpremiums", expectedpremiums) :
                new ObjectParameter("expectedpremiums", typeof(decimal));
    
            var adjustedaccountvalueParameter = adjustedaccountvalue.HasValue ?
                new ObjectParameter("adjustedaccountvalue", adjustedaccountvalue) :
                new ObjectParameter("adjustedaccountvalue", typeof(decimal));
    
            var insuredamountParameter = insuredamount.HasValue ?
                new ObjectParameter("insuredamount", insuredamount) :
                new ObjectParameter("insuredamount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanopbaldet_Result>("sp_set_customerplanopbaldet", customernoParameter, customerplannoParameter, currentvalueParameter, planyearParameter, targetamountParameter, minimumpremiumParameter, frequencytypecodeParameter, periodicpremiumParameter, noofunpaidpremiumsParameter, investmentprofilecodeParameter, monthlyinsurancecostParameter, forceaccountvalueParameter, openingbalanceParameter, calculatetypeobcodeParameter, createdbyParameter, datecreatedParameter, updatedbyParameter, dateupdatedParameter, productcodeParameter, datesyncedParameter, recordidParameter, totalamountpaidParameter, nopaymentsrecievedParameter, amountdueParameter, illustrationmonthParameter, forcetargetParameter, isoverrideParameter, fullpaymentyearParameter, expectedpremiumsParameter, adjustedaccountvalueParameter, insuredamountParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanvarinsureddet_Result> sp_set_customerplanvarinsureddet(Nullable<long> customerplanno, Nullable<int> fromyearno, Nullable<int> toyearno, Nullable<decimal> insuredamount, Nullable<long> customerplanvarinsuredno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<int> sno, Nullable<long> rcustomerplanvarinsuredno, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var fromyearnoParameter = fromyearno.HasValue ?
                new ObjectParameter("fromyearno", fromyearno) :
                new ObjectParameter("fromyearno", typeof(int));
    
            var toyearnoParameter = toyearno.HasValue ?
                new ObjectParameter("toyearno", toyearno) :
                new ObjectParameter("toyearno", typeof(int));
    
            var insuredamountParameter = insuredamount.HasValue ?
                new ObjectParameter("insuredamount", insuredamount) :
                new ObjectParameter("insuredamount", typeof(decimal));
    
            var customerplanvarinsurednoParameter = customerplanvarinsuredno.HasValue ?
                new ObjectParameter("customerplanvarinsuredno", customerplanvarinsuredno) :
                new ObjectParameter("customerplanvarinsuredno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var rcustomerplanvarinsurednoParameter = rcustomerplanvarinsuredno.HasValue ?
                new ObjectParameter("rcustomerplanvarinsuredno", rcustomerplanvarinsuredno) :
                new ObjectParameter("rcustomerplanvarinsuredno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanvarinsureddet_Result>("sp_set_customerplanvarinsureddet", customerplannoParameter, fromyearnoParameter, toyearnoParameter, insuredamountParameter, customerplanvarinsurednoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, snoParameter, rcustomerplanvarinsurednoParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanvarpremiumdet_Result> sp_set_customerplanvarpremiumdet(Nullable<long> customerplanno, Nullable<int> fromyearno, Nullable<int> toyearno, Nullable<decimal> premiumamount, Nullable<long> customerplanvarpremiumno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<int> sno, Nullable<long> rcustomerplanvarpremiumno, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var fromyearnoParameter = fromyearno.HasValue ?
                new ObjectParameter("fromyearno", fromyearno) :
                new ObjectParameter("fromyearno", typeof(int));
    
            var toyearnoParameter = toyearno.HasValue ?
                new ObjectParameter("toyearno", toyearno) :
                new ObjectParameter("toyearno", typeof(int));
    
            var premiumamountParameter = premiumamount.HasValue ?
                new ObjectParameter("premiumamount", premiumamount) :
                new ObjectParameter("premiumamount", typeof(decimal));
    
            var customerplanvarpremiumnoParameter = customerplanvarpremiumno.HasValue ?
                new ObjectParameter("customerplanvarpremiumno", customerplanvarpremiumno) :
                new ObjectParameter("customerplanvarpremiumno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var rcustomerplanvarpremiumnoParameter = rcustomerplanvarpremiumno.HasValue ?
                new ObjectParameter("rcustomerplanvarpremiumno", rcustomerplanvarpremiumno) :
                new ObjectParameter("rcustomerplanvarpremiumno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanvarpremiumdet_Result>("sp_set_customerplanvarpremiumdet", customerplannoParameter, fromyearnoParameter, toyearnoParameter, premiumamountParameter, customerplanvarpremiumnoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, snoParameter, rcustomerplanvarpremiumnoParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanvarprofiledet_Result> sp_set_customerplanvarprofiledet(Nullable<long> customerplanno, Nullable<int> fromyearno, Nullable<int> toyearno, string investmentprofilecode, Nullable<long> customerplanvarprofileno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<int> sno, Nullable<long> rcustomerplanvarprofiledetno, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var fromyearnoParameter = fromyearno.HasValue ?
                new ObjectParameter("fromyearno", fromyearno) :
                new ObjectParameter("fromyearno", typeof(int));
    
            var toyearnoParameter = toyearno.HasValue ?
                new ObjectParameter("toyearno", toyearno) :
                new ObjectParameter("toyearno", typeof(int));
    
            var investmentprofilecodeParameter = investmentprofilecode != null ?
                new ObjectParameter("investmentprofilecode", investmentprofilecode) :
                new ObjectParameter("investmentprofilecode", typeof(string));
    
            var customerplanvarprofilenoParameter = customerplanvarprofileno.HasValue ?
                new ObjectParameter("customerplanvarprofileno", customerplanvarprofileno) :
                new ObjectParameter("customerplanvarprofileno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var rcustomerplanvarprofiledetnoParameter = rcustomerplanvarprofiledetno.HasValue ?
                new ObjectParameter("rcustomerplanvarprofiledetno", rcustomerplanvarprofiledetno) :
                new ObjectParameter("rcustomerplanvarprofiledetno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanvarprofiledet_Result>("sp_set_customerplanvarprofiledet", customerplannoParameter, fromyearnoParameter, toyearnoParameter, investmentprofilecodeParameter, customerplanvarprofilenoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, snoParameter, rcustomerplanvarprofiledetnoParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanvarsurrenderdet_Result> sp_set_customerplanvarsurrenderdet(Nullable<long> customerplanno, Nullable<int> fromyearno, Nullable<int> toyearno, Nullable<decimal> surrenderamount, Nullable<long> customerplansurrenderno, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<int> sno, Nullable<long> rcustomerplanvarsurrenderno, Nullable<System.DateTime> datesynced, Nullable<long> recordid)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var fromyearnoParameter = fromyearno.HasValue ?
                new ObjectParameter("fromyearno", fromyearno) :
                new ObjectParameter("fromyearno", typeof(int));
    
            var toyearnoParameter = toyearno.HasValue ?
                new ObjectParameter("toyearno", toyearno) :
                new ObjectParameter("toyearno", typeof(int));
    
            var surrenderamountParameter = surrenderamount.HasValue ?
                new ObjectParameter("surrenderamount", surrenderamount) :
                new ObjectParameter("surrenderamount", typeof(decimal));
    
            var customerplansurrendernoParameter = customerplansurrenderno.HasValue ?
                new ObjectParameter("customerplansurrenderno", customerplansurrenderno) :
                new ObjectParameter("customerplansurrenderno", typeof(long));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var rcustomerplanvarsurrendernoParameter = rcustomerplanvarsurrenderno.HasValue ?
                new ObjectParameter("rcustomerplanvarsurrenderno", rcustomerplanvarsurrenderno) :
                new ObjectParameter("rcustomerplanvarsurrenderno", typeof(long));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanvarsurrenderdet_Result>("sp_set_customerplanvarsurrenderdet", customerplannoParameter, fromyearnoParameter, toyearnoParameter, surrenderamountParameter, customerplansurrendernoParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, snoParameter, rcustomerplanvarsurrendernoParameter, datesyncedParameter, recordidParameter);
        }
    
        public virtual ObjectResult<sp_get_invprofilecompareratesdet_Result> sp_get_invprofilecompareratesdet(string classcode, string productcode, string investmentprofilecode)
        {
            var classcodeParameter = classcode != null ?
                new ObjectParameter("classcode", classcode) :
                new ObjectParameter("classcode", typeof(string));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var investmentprofilecodeParameter = investmentprofilecode != null ?
                new ObjectParameter("investmentprofilecode", investmentprofilecode) :
                new ObjectParameter("investmentprofilecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_invprofilecompareratesdet_Result>("sp_get_invprofilecompareratesdet", classcodeParameter, productcodeParameter, investmentprofilecodeParameter);
        }
    
        public virtual ObjectResult<sp_get_productcanceldet_Result> sp_get_productcanceldet(string productcode, Nullable<int> retirementperiod)
        {
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var retirementperiodParameter = retirementperiod.HasValue ?
                new ObjectParameter("retirementperiod", retirementperiod) :
                new ObjectParameter("retirementperiod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_productcanceldet_Result>("sp_get_productcanceldet", productcodeParameter, retirementperiodParameter);
        }
    
        public virtual ObjectResult<sp_get_productcanceldetailsdet_Result> sp_get_productcanceldetailsdet(Nullable<int> productcancelno)
        {
            var productcancelnoParameter = productcancelno.HasValue ?
                new ObjectParameter("productcancelno", productcancelno) :
                new ObjectParameter("productcancelno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_productcanceldetailsdet_Result>("sp_get_productcanceldetailsdet", productcancelnoParameter);
        }
    
        public virtual ObjectResult<sp_get_frequencycostdet_Result> sp_get_frequencycostdet(string productcode, string frequencytypecode)
        {
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var frequencytypecodeParameter = frequencytypecode != null ?
                new ObjectParameter("frequencytypecode", frequencytypecode) :
                new ObjectParameter("frequencytypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_frequencycostdet_Result>("sp_get_frequencycostdet", productcodeParameter, frequencytypecodeParameter);
        }
    
        public virtual int sp_delete_customerplanannuitydet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanannuitydet", customerplannoParameter);
        }
    
        public virtual int sp_delete_customerplanlifedet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplanlifedet", customerplannoParameter);
        }
    
        public virtual int sp_delete_customerplantermdet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_customerplantermdet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanannuitydet_Result> sp_get_customerplanannuitydet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanannuitydet_Result>("sp_get_customerplanannuitydet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplanlifedet_Result> sp_get_customerplanlifedet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplanlifedet_Result>("sp_get_customerplanlifedet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_get_customerplantermdet_Result> sp_get_customerplantermdet(Nullable<long> customerplanno)
        {
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerplantermdet_Result>("sp_get_customerplantermdet", customerplannoParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanannuitydet_Result> sp_set_customerplanannuitydet(Nullable<long> customerplanannuityno, Nullable<long> customerplanno, Nullable<int> age, Nullable<int> year, Nullable<decimal> accumulatedcontributions, Nullable<decimal> deathbenefit, Nullable<decimal> benefitexclusion, Nullable<decimal> accountvalue, Nullable<decimal> surrendervalue, Nullable<decimal> annualpartialwithdrawal)
        {
            var customerplanannuitynoParameter = customerplanannuityno.HasValue ?
                new ObjectParameter("customerplanannuityno", customerplanannuityno) :
                new ObjectParameter("customerplanannuityno", typeof(long));
    
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var accumulatedcontributionsParameter = accumulatedcontributions.HasValue ?
                new ObjectParameter("accumulatedcontributions", accumulatedcontributions) :
                new ObjectParameter("accumulatedcontributions", typeof(decimal));
    
            var deathbenefitParameter = deathbenefit.HasValue ?
                new ObjectParameter("deathbenefit", deathbenefit) :
                new ObjectParameter("deathbenefit", typeof(decimal));
    
            var benefitexclusionParameter = benefitexclusion.HasValue ?
                new ObjectParameter("benefitexclusion", benefitexclusion) :
                new ObjectParameter("benefitexclusion", typeof(decimal));
    
            var accountvalueParameter = accountvalue.HasValue ?
                new ObjectParameter("accountvalue", accountvalue) :
                new ObjectParameter("accountvalue", typeof(decimal));
    
            var surrendervalueParameter = surrendervalue.HasValue ?
                new ObjectParameter("surrendervalue", surrendervalue) :
                new ObjectParameter("surrendervalue", typeof(decimal));
    
            var annualpartialwithdrawalParameter = annualpartialwithdrawal.HasValue ?
                new ObjectParameter("annualpartialwithdrawal", annualpartialwithdrawal) :
                new ObjectParameter("annualpartialwithdrawal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanannuitydet_Result>("sp_set_customerplanannuitydet", customerplanannuitynoParameter, customerplannoParameter, ageParameter, yearParameter, accumulatedcontributionsParameter, deathbenefitParameter, benefitexclusionParameter, accountvalueParameter, surrendervalueParameter, annualpartialwithdrawalParameter);
        }
    
        public virtual ObjectResult<sp_set_customerplanlifedet_Result> sp_set_customerplanlifedet(Nullable<long> customerplanlifeno, Nullable<long> customerplanno, Nullable<int> age, Nullable<int> year, Nullable<decimal> premium, Nullable<decimal> accountvalue1, Nullable<decimal> surrendervalue1, Nullable<decimal> deathbenefit1, Nullable<decimal> accountvalue2, Nullable<decimal> surrendervalue2, Nullable<decimal> deathbenefit2, Nullable<decimal> accountvalue3, Nullable<decimal> surrendervalue3, Nullable<decimal> deathbenefit3)
        {
            var customerplanlifenoParameter = customerplanlifeno.HasValue ?
                new ObjectParameter("customerplanlifeno", customerplanlifeno) :
                new ObjectParameter("customerplanlifeno", typeof(long));
    
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var premiumParameter = premium.HasValue ?
                new ObjectParameter("premium", premium) :
                new ObjectParameter("premium", typeof(decimal));
    
            var accountvalue1Parameter = accountvalue1.HasValue ?
                new ObjectParameter("accountvalue1", accountvalue1) :
                new ObjectParameter("accountvalue1", typeof(decimal));
    
            var surrendervalue1Parameter = surrendervalue1.HasValue ?
                new ObjectParameter("surrendervalue1", surrendervalue1) :
                new ObjectParameter("surrendervalue1", typeof(decimal));
    
            var deathbenefit1Parameter = deathbenefit1.HasValue ?
                new ObjectParameter("deathbenefit1", deathbenefit1) :
                new ObjectParameter("deathbenefit1", typeof(decimal));
    
            var accountvalue2Parameter = accountvalue2.HasValue ?
                new ObjectParameter("accountvalue2", accountvalue2) :
                new ObjectParameter("accountvalue2", typeof(decimal));
    
            var surrendervalue2Parameter = surrendervalue2.HasValue ?
                new ObjectParameter("surrendervalue2", surrendervalue2) :
                new ObjectParameter("surrendervalue2", typeof(decimal));
    
            var deathbenefit2Parameter = deathbenefit2.HasValue ?
                new ObjectParameter("deathbenefit2", deathbenefit2) :
                new ObjectParameter("deathbenefit2", typeof(decimal));
    
            var accountvalue3Parameter = accountvalue3.HasValue ?
                new ObjectParameter("accountvalue3", accountvalue3) :
                new ObjectParameter("accountvalue3", typeof(decimal));
    
            var surrendervalue3Parameter = surrendervalue3.HasValue ?
                new ObjectParameter("surrendervalue3", surrendervalue3) :
                new ObjectParameter("surrendervalue3", typeof(decimal));
    
            var deathbenefit3Parameter = deathbenefit3.HasValue ?
                new ObjectParameter("deathbenefit3", deathbenefit3) :
                new ObjectParameter("deathbenefit3", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplanlifedet_Result>("sp_set_customerplanlifedet", customerplanlifenoParameter, customerplannoParameter, ageParameter, yearParameter, premiumParameter, accountvalue1Parameter, surrendervalue1Parameter, deathbenefit1Parameter, accountvalue2Parameter, surrendervalue2Parameter, deathbenefit2Parameter, accountvalue3Parameter, surrendervalue3Parameter, deathbenefit3Parameter);
        }
    
        public virtual ObjectResult<sp_set_customerplantermdet_Result> sp_set_customerplantermdet(Nullable<long> customerplantermno, Nullable<long> customerplanno, Nullable<int> tableno, Nullable<int> age, Nullable<int> year, Nullable<decimal> primabasiccoverage, Nullable<decimal> premiumextras, Nullable<decimal> totalpremium, Nullable<decimal> accumulatedpremiums, Nullable<decimal> deathbenefit)
        {
            var customerplantermnoParameter = customerplantermno.HasValue ?
                new ObjectParameter("customerplantermno", customerplantermno) :
                new ObjectParameter("customerplantermno", typeof(long));
    
            var customerplannoParameter = customerplanno.HasValue ?
                new ObjectParameter("customerplanno", customerplanno) :
                new ObjectParameter("customerplanno", typeof(long));
    
            var tablenoParameter = tableno.HasValue ?
                new ObjectParameter("tableno", tableno) :
                new ObjectParameter("tableno", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var primabasiccoverageParameter = primabasiccoverage.HasValue ?
                new ObjectParameter("primabasiccoverage", primabasiccoverage) :
                new ObjectParameter("primabasiccoverage", typeof(decimal));
    
            var premiumextrasParameter = premiumextras.HasValue ?
                new ObjectParameter("premiumextras", premiumextras) :
                new ObjectParameter("premiumextras", typeof(decimal));
    
            var totalpremiumParameter = totalpremium.HasValue ?
                new ObjectParameter("totalpremium", totalpremium) :
                new ObjectParameter("totalpremium", typeof(decimal));
    
            var accumulatedpremiumsParameter = accumulatedpremiums.HasValue ?
                new ObjectParameter("accumulatedpremiums", accumulatedpremiums) :
                new ObjectParameter("accumulatedpremiums", typeof(decimal));
    
            var deathbenefitParameter = deathbenefit.HasValue ?
                new ObjectParameter("deathbenefit", deathbenefit) :
                new ObjectParameter("deathbenefit", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_set_customerplantermdet_Result>("sp_set_customerplantermdet", customerplantermnoParameter, customerplannoParameter, tablenoParameter, ageParameter, yearParameter, primabasiccoverageParameter, premiumextrasParameter, totalpremiumParameter, accumulatedpremiumsParameter, deathbenefitParameter);
        }
    
        public virtual ObjectResult<sp_get_rpt_investments_inflacion_Result> sp_get_rpt_investments_inflacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_investments_inflacion_Result>("sp_get_rpt_investments_inflacion");
        }
    
        public virtual ObjectResult<sp_get_rpt_compass_investment_details_Result> sp_get_rpt_compass_investment_details(Nullable<int> returnTypeid)
        {
            var returnTypeidParameter = returnTypeid.HasValue ?
                new ObjectParameter("ReturnTypeid", returnTypeid) :
                new ObjectParameter("ReturnTypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_compass_investment_details_Result>("sp_get_rpt_compass_investment_details", returnTypeidParameter);
        }
    
        public virtual ObjectResult<sp_get_rpt_investment_slide3_Result> sp_get_rpt_investment_slide3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_investment_slide3_Result>("sp_get_rpt_investment_slide3");
        }
    
        public virtual ObjectResult<sp_get_rpt_investment_slide4_Result> sp_get_rpt_investment_slide4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_investment_slide4_Result>("sp_get_rpt_investment_slide4");
        }
    
        public virtual ObjectResult<sp_get_rpt_investment_slide5_chart1_Result> sp_get_rpt_investment_slide5_chart1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_investment_slide5_chart1_Result>("sp_get_rpt_investment_slide5_chart1");
        }
    
        public virtual ObjectResult<sp_get_rpt_investment_slide5_chart2_Result> sp_get_rpt_investment_slide5_chart2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_investment_slide5_chart2_Result>("sp_get_rpt_investment_slide5_chart2");
        }
    
        public virtual ObjectResult<sp_get_rpt_investment_slide6_Result> sp_get_rpt_investment_slide6()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_investment_slide6_Result>("sp_get_rpt_investment_slide6");
        }
    
        public virtual ObjectResult<sp_get_rpt_InvestType_Result> sp_get_rpt_InvestType(string fundType, string fundCategory, string region)
        {
            var fundTypeParameter = fundType != null ?
                new ObjectParameter("FundType", fundType) :
                new ObjectParameter("FundType", typeof(string));
    
            var fundCategoryParameter = fundCategory != null ?
                new ObjectParameter("FundCategory", fundCategory) :
                new ObjectParameter("FundCategory", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_InvestType_Result>("sp_get_rpt_InvestType", fundTypeParameter, fundCategoryParameter, regionParameter);
        }
    
        public virtual ObjectResult<sp_get_rpt_returns_on_investments_Result> sp_get_rpt_returns_on_investments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_returns_on_investments_Result>("sp_get_rpt_returns_on_investments");
        }
    
        public virtual ObjectResult<sp_get_profile_de_inversion_Result> sp_get_profile_de_inversion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_profile_de_inversion_Result>("sp_get_profile_de_inversion");
        }
    
        public virtual ObjectResult<sp_get_profile_de_inversion_euro_Result> sp_get_profile_de_inversion_euro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_profile_de_inversion_euro_Result>("sp_get_profile_de_inversion_euro");
        }
    
        public virtual ObjectResult<sp_get_rpt_Axys_fixedincome_slide12_Result> sp_get_rpt_Axys_fixedincome_slide12()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Axys_fixedincome_slide12_Result>("sp_get_rpt_Axys_fixedincome_slide12");
        }
    
        public virtual ObjectResult<sp_get_rpt_Axys_Highperform_slide12_Result> sp_get_rpt_Axys_Highperform_slide12()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Axys_Highperform_slide12_Result>("sp_get_rpt_Axys_Highperform_slide12");
        }
    
        public virtual ObjectResult<sp_get_rpt_Axys_lowrisk_slide12_Result> sp_get_rpt_Axys_lowrisk_slide12()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Axys_lowrisk_slide12_Result>("sp_get_rpt_Axys_lowrisk_slide12");
        }
    
        public virtual ObjectResult<sp_get_rpt_Axys_slide10_Result> sp_get_rpt_Axys_slide10()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Axys_slide10_Result>("sp_get_rpt_Axys_slide10");
        }
    
        public virtual ObjectResult<sp_get_rpt_Axys_slide11_Result> sp_get_rpt_Axys_slide11()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Axys_slide11_Result>("sp_get_rpt_Axys_slide11");
        }
    
        public virtual ObjectResult<sp_get_rpt_axys_slide5_Result> sp_get_rpt_axys_slide5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_axys_slide5_Result>("sp_get_rpt_axys_slide5");
        }
    
        public virtual ObjectResult<sp_get_rpt_axys_slide6_Result> sp_get_rpt_axys_slide6()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_axys_slide6_Result>("sp_get_rpt_axys_slide6");
        }
    
        public virtual ObjectResult<sp_get_rpt_axys_slide8_Result> sp_get_rpt_axys_slide8()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_axys_slide8_Result>("sp_get_rpt_axys_slide8");
        }
    
        public virtual ObjectResult<sp_get_egr_age_Result> sp_get_egr_age()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_egr_age_Result>("sp_get_egr_age");
        }
    
        public virtual ObjectResult<sp_get_egr_slide10_Result> sp_get_egr_slide10()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_egr_slide10_Result>("sp_get_egr_slide10");
        }
    
        public virtual ObjectResult<sp_get_egr_slide7_Result> sp_get_egr_slide7()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_egr_slide7_Result>("sp_get_egr_slide7");
        }
    
        public virtual ObjectResult<sp_get_egr_slide8_Result> sp_get_egr_slide8()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_egr_slide8_Result>("sp_get_egr_slide8");
        }
    
        public virtual ObjectResult<sp_get_egr_slide9_Result> sp_get_egr_slide9()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_egr_slide9_Result>("sp_get_egr_slide9");
        }
    
        public virtual ObjectResult<sp_get_rpt_Compass_Slide5_Result> sp_get_rpt_Compass_Slide5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Compass_Slide5_Result>("sp_get_rpt_Compass_Slide5");
        }
    
        public virtual ObjectResult<sp_get_rpt_Legacy_10_principles_Result> sp_get_rpt_Legacy_10_principles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Legacy_10_principles_Result>("sp_get_rpt_Legacy_10_principles");
        }
    
        public virtual ObjectResult<sp_get_rpt_lifeexpectancy_Result> sp_get_rpt_lifeexpectancy()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_lifeexpectancy_Result>("sp_get_rpt_lifeexpectancy");
        }
    
        public virtual ObjectResult<sp_get_rpt_compass_investment_master_Result> sp_get_rpt_compass_investment_master()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_compass_investment_master_Result>("sp_get_rpt_compass_investment_master");
        }
    
        public virtual ObjectResult<sp_get_rpt_Compass_slide7_Result> sp_get_rpt_Compass_slide7()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_rpt_Compass_slide7_Result>("sp_get_rpt_Compass_slide7");
        }
    
        public virtual ObjectResult<sp_get_companydet_Result> sp_get_companydet(Nullable<int> companyno)
        {
            var companynoParameter = companyno.HasValue ?
                new ObjectParameter("companyno", companyno) :
                new ObjectParameter("companyno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_companydet_Result>("sp_get_companydet", companynoParameter);
        }
    
        public virtual ObjectResult<sp_get_CustomerPlanDetGlobalPolicy_Result> sp_get_CustomerPlanDetGlobalPolicy(Nullable<int> corp_Id, Nullable<int> region_Id, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> city_Id, Nullable<int> office_Id, Nullable<int> case_Seq_No, Nullable<int> hist_Seq_No, Nullable<long> customerPlanNo)
        {
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var region_IdParameter = region_Id.HasValue ?
                new ObjectParameter("Region_Id", region_Id) :
                new ObjectParameter("Region_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var office_IdParameter = office_Id.HasValue ?
                new ObjectParameter("Office_Id", office_Id) :
                new ObjectParameter("Office_Id", typeof(int));
    
            var case_Seq_NoParameter = case_Seq_No.HasValue ?
                new ObjectParameter("Case_Seq_No", case_Seq_No) :
                new ObjectParameter("Case_Seq_No", typeof(int));
    
            var hist_Seq_NoParameter = hist_Seq_No.HasValue ?
                new ObjectParameter("Hist_Seq_No", hist_Seq_No) :
                new ObjectParameter("Hist_Seq_No", typeof(int));
    
            var customerPlanNoParameter = customerPlanNo.HasValue ?
                new ObjectParameter("CustomerPlanNo", customerPlanNo) :
                new ObjectParameter("CustomerPlanNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_CustomerPlanDetGlobalPolicy_Result>("sp_get_CustomerPlanDetGlobalPolicy", corp_IdParameter, region_IdParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, city_IdParameter, office_IdParameter, case_Seq_NoParameter, hist_Seq_NoParameter, customerPlanNoParameter);
        }
    
        public virtual int sp_insert_CustomerPlanDetGlobalPolicy(Nullable<int> corp_Id, Nullable<int> region_Id, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> city_Id, Nullable<int> office_Id, Nullable<int> case_Seq_No, Nullable<int> hist_Seq_No, Nullable<long> customerPlanNo)
        {
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var region_IdParameter = region_Id.HasValue ?
                new ObjectParameter("Region_Id", region_Id) :
                new ObjectParameter("Region_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var office_IdParameter = office_Id.HasValue ?
                new ObjectParameter("Office_Id", office_Id) :
                new ObjectParameter("Office_Id", typeof(int));
    
            var case_Seq_NoParameter = case_Seq_No.HasValue ?
                new ObjectParameter("Case_Seq_No", case_Seq_No) :
                new ObjectParameter("Case_Seq_No", typeof(int));
    
            var hist_Seq_NoParameter = hist_Seq_No.HasValue ?
                new ObjectParameter("Hist_Seq_No", hist_Seq_No) :
                new ObjectParameter("Hist_Seq_No", typeof(int));
    
            var customerPlanNoParameter = customerPlanNo.HasValue ?
                new ObjectParameter("CustomerPlanNo", customerPlanNo) :
                new ObjectParameter("CustomerPlanNo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_CustomerPlanDetGlobalPolicy", corp_IdParameter, region_IdParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, city_IdParameter, office_IdParameter, case_Seq_NoParameter, hist_Seq_NoParameter, customerPlanNoParameter);
        }
    
        public virtual ObjectResult<sp_get_dropdown_Result> sp_get_dropdown(string type, string company_Id, string productcode, string life, string plangroupcode, string education, string retirement, string terminsurance, string @class, string ridertypecode, Nullable<int> age, Nullable<int> corp_Id, Nullable<int> region_Id, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> provider_Type_Id)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var company_IdParameter = company_Id != null ?
                new ObjectParameter("Company_Id", company_Id) :
                new ObjectParameter("Company_Id", typeof(string));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var lifeParameter = life != null ?
                new ObjectParameter("life", life) :
                new ObjectParameter("life", typeof(string));
    
            var plangroupcodeParameter = plangroupcode != null ?
                new ObjectParameter("plangroupcode", plangroupcode) :
                new ObjectParameter("plangroupcode", typeof(string));
    
            var educationParameter = education != null ?
                new ObjectParameter("education", education) :
                new ObjectParameter("education", typeof(string));
    
            var retirementParameter = retirement != null ?
                new ObjectParameter("retirement", retirement) :
                new ObjectParameter("retirement", typeof(string));
    
            var terminsuranceParameter = terminsurance != null ?
                new ObjectParameter("terminsurance", terminsurance) :
                new ObjectParameter("terminsurance", typeof(string));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            var ridertypecodeParameter = ridertypecode != null ?
                new ObjectParameter("ridertypecode", ridertypecode) :
                new ObjectParameter("ridertypecode", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var region_IdParameter = region_Id.HasValue ?
                new ObjectParameter("Region_Id", region_Id) :
                new ObjectParameter("Region_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var provider_Type_IdParameter = provider_Type_Id.HasValue ?
                new ObjectParameter("Provider_Type_Id", provider_Type_Id) :
                new ObjectParameter("Provider_Type_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_dropdown_Result>("sp_get_dropdown", typeParameter, company_IdParameter, productcodeParameter, lifeParameter, plangroupcodeParameter, educationParameter, retirementParameter, terminsuranceParameter, classParameter, ridertypecodeParameter, ageParameter, corp_IdParameter, region_IdParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, provider_Type_IdParameter);
        }
    
        public virtual int ActualizaUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaUsuarios");
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentcallsvisits")]
        public virtual IQueryable<agentcallsvisits_Result> agentcallsvisits(string charttype, Nullable<long> userid)
        {
            var charttypeParameter = charttype != null ?
                new ObjectParameter("charttype", charttype) :
                new ObjectParameter("charttype", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentcallsvisits_Result>("[IllusDataEntityDataModel].[agentcallsvisits](@charttype, @userid)", charttypeParameter, useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentclosingplan")]
        public virtual IQueryable<agentclosingplan_Result> agentclosingplan(string periodtypecode, Nullable<long> userid)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentclosingplan_Result>("[IllusDataEntityDataModel].[agentclosingplan](@periodtypecode, @userid)", periodtypecodeParameter, useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentclosingproductfamily")]
        public virtual IQueryable<agentclosingproductfamily_Result> agentclosingproductfamily(string periodtypecode, Nullable<long> userid)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentclosingproductfamily_Result>("[IllusDataEntityDataModel].[agentclosingproductfamily](@periodtypecode, @userid)", periodtypecodeParameter, useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentclosingproducts")]
        public virtual IQueryable<agentclosingproducts_Result> agentclosingproducts(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentclosingproducts_Result>("[IllusDataEntityDataModel].[agentclosingproducts](@userid)", useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentclosingproductschart")]
        public virtual IQueryable<agentclosingproductschart_Result> agentclosingproductschart(Nullable<long> userid, string periodtype)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var periodtypeParameter = periodtype != null ?
                new ObjectParameter("periodtype", periodtype) :
                new ObjectParameter("periodtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentclosingproductschart_Result>("[IllusDataEntityDataModel].[agentclosingproductschart](@userid, @periodtype)", useridParameter, periodtypeParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentclosings")]
        public virtual IQueryable<agentclosings_Result> agentclosings(string periodtypecode, string period, string from, string to, Nullable<long> userid, string logitem, string plangroup, string product)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var logitemParameter = logitem != null ?
                new ObjectParameter("logitem", logitem) :
                new ObjectParameter("logitem", typeof(string));
    
            var plangroupParameter = plangroup != null ?
                new ObjectParameter("plangroup", plangroup) :
                new ObjectParameter("plangroup", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentclosings_Result>("[IllusDataEntityDataModel].[agentclosings](@periodtypecode, @period, @from, @to, @userid, @logitem, @plangroup, @product)", periodtypecodeParameter, periodParameter, fromParameter, toParameter, useridParameter, logitemParameter, plangroupParameter, productParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentgoalperformance")]
        public virtual IQueryable<agentgoalperformance_Result> agentgoalperformance(string logitemcode, Nullable<int> userid, string periodtypecode)
        {
            var logitemcodeParameter = logitemcode != null ?
                new ObjectParameter("logitemcode", logitemcode) :
                new ObjectParameter("logitemcode", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentgoalperformance_Result>("[IllusDataEntityDataModel].[agentgoalperformance](@logitemcode, @userid, @periodtypecode)", logitemcodeParameter, useridParameter, periodtypecodeParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentgoalperformancegrid")]
        public virtual IQueryable<agentgoalperformancegrid_Result> agentgoalperformancegrid(string logitemcode, Nullable<int> userid, string periodtypecode)
        {
            var logitemcodeParameter = logitemcode != null ?
                new ObjectParameter("logitemcode", logitemcode) :
                new ObjectParameter("logitemcode", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentgoalperformancegrid_Result>("[IllusDataEntityDataModel].[agentgoalperformancegrid](@logitemcode, @userid, @periodtypecode)", logitemcodeParameter, useridParameter, periodtypecodeParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentgoalperformanceyear")]
        public virtual IQueryable<agentgoalperformanceyear_Result> agentgoalperformanceyear(string logitemcode, Nullable<int> userid, Nullable<int> year, string product)
        {
            var logitemcodeParameter = logitemcode != null ?
                new ObjectParameter("logitemcode", logitemcode) :
                new ObjectParameter("logitemcode", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentgoalperformanceyear_Result>("[IllusDataEntityDataModel].[agentgoalperformanceyear](@logitemcode, @userid, @year, @product)", logitemcodeParameter, useridParameter, yearParameter, productParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentgoalperformanceyearplangroup")]
        public virtual IQueryable<agentgoalperformanceyearplangroup_Result> agentgoalperformanceyearplangroup(string logitemcode, Nullable<int> userid, Nullable<int> year, string plangroup)
        {
            var logitemcodeParameter = logitemcode != null ?
                new ObjectParameter("logitemcode", logitemcode) :
                new ObjectParameter("logitemcode", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var plangroupParameter = plangroup != null ?
                new ObjectParameter("plangroup", plangroup) :
                new ObjectParameter("plangroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentgoalperformanceyearplangroup_Result>("[IllusDataEntityDataModel].[agentgoalperformanceyearplangroup](@logitemcode, @userid, @year, @plangroup)", logitemcodeParameter, useridParameter, yearParameter, plangroupParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentlogsummary")]
        public virtual IQueryable<agentlogsummary_Result> agentlogsummary(string fromdate, string todate, string logitemcode, string summarytype, Nullable<int> userid)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var logitemcodeParameter = logitemcode != null ?
                new ObjectParameter("logitemcode", logitemcode) :
                new ObjectParameter("logitemcode", typeof(string));
    
            var summarytypeParameter = summarytype != null ?
                new ObjectParameter("summarytype", summarytype) :
                new ObjectParameter("summarytype", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentlogsummary_Result>("[IllusDataEntityDataModel].[agentlogsummary](@fromdate, @todate, @logitemcode, @summarytype, @userid)", fromdateParameter, todateParameter, logitemcodeParameter, summarytypeParameter, useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "agentsalesvsclosings")]
        public virtual IQueryable<agentsalesvsclosings_Result> agentsalesvsclosings(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<agentsalesvsclosings_Result>("[IllusDataEntityDataModel].[agentsalesvsclosings](@userid)", useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "backofficeillus")]
        public virtual IQueryable<backofficeillus_Result> backofficeillus(string level, Nullable<int> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> customerno, string dispillno, Nullable<int> csrid, string dispplanno, Nullable<int> agentid, string filter, Nullable<int> loginuserid)
        {
            var levelParameter = level != null ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var dispillnoParameter = dispillno != null ?
                new ObjectParameter("dispillno", dispillno) :
                new ObjectParameter("dispillno", typeof(string));
    
            var csridParameter = csrid.HasValue ?
                new ObjectParameter("csrid", csrid) :
                new ObjectParameter("csrid", typeof(int));
    
            var dispplannoParameter = dispplanno != null ?
                new ObjectParameter("dispplanno", dispplanno) :
                new ObjectParameter("dispplanno", typeof(string));
    
            var agentidParameter = agentid.HasValue ?
                new ObjectParameter("agentid", agentid) :
                new ObjectParameter("agentid", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            var loginuseridParameter = loginuserid.HasValue ?
                new ObjectParameter("loginuserid", loginuserid) :
                new ObjectParameter("loginuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<backofficeillus_Result>("[IllusDataEntityDataModel].[backofficeillus](@level, @userid, @fromdate, @todate, @customerno, @dispillno, @csrid, @dispplanno, @agentid, @filter, @loginuserid)", levelParameter, useridParameter, fromdateParameter, todateParameter, customernoParameter, dispillnoParameter, csridParameter, dispplannoParameter, agentidParameter, filterParameter, loginuseridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "backofficepolicynumber")]
        public virtual IQueryable<backofficepolicynumber_Result> backofficepolicynumber(string level, Nullable<int> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> customerno, string dispillno, Nullable<int> csrid, string dispplanno, Nullable<int> agentid, string filter, Nullable<int> loginuserid)
        {
            var levelParameter = level != null ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var dispillnoParameter = dispillno != null ?
                new ObjectParameter("dispillno", dispillno) :
                new ObjectParameter("dispillno", typeof(string));
    
            var csridParameter = csrid.HasValue ?
                new ObjectParameter("csrid", csrid) :
                new ObjectParameter("csrid", typeof(int));
    
            var dispplannoParameter = dispplanno != null ?
                new ObjectParameter("dispplanno", dispplanno) :
                new ObjectParameter("dispplanno", typeof(string));
    
            var agentidParameter = agentid.HasValue ?
                new ObjectParameter("agentid", agentid) :
                new ObjectParameter("agentid", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            var loginuseridParameter = loginuserid.HasValue ?
                new ObjectParameter("loginuserid", loginuserid) :
                new ObjectParameter("loginuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<backofficepolicynumber_Result>("[IllusDataEntityDataModel].[backofficepolicynumber](@level, @userid, @fromdate, @todate, @customerno, @dispillno, @csrid, @dispplanno, @agentid, @filter, @loginuserid)", levelParameter, useridParameter, fromdateParameter, todateParameter, customernoParameter, dispillnoParameter, csridParameter, dispplannoParameter, agentidParameter, filterParameter, loginuseridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "backofficepolicynumberpending")]
        public virtual IQueryable<backofficepolicynumberpending_Result> backofficepolicynumberpending(string level, Nullable<int> userid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<long> customerno, string dispillno, Nullable<int> csrid, string dispplanno, Nullable<int> agentid, string filter, Nullable<int> loginuserid)
        {
            var levelParameter = level != null ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var dispillnoParameter = dispillno != null ?
                new ObjectParameter("dispillno", dispillno) :
                new ObjectParameter("dispillno", typeof(string));
    
            var csridParameter = csrid.HasValue ?
                new ObjectParameter("csrid", csrid) :
                new ObjectParameter("csrid", typeof(int));
    
            var dispplannoParameter = dispplanno != null ?
                new ObjectParameter("dispplanno", dispplanno) :
                new ObjectParameter("dispplanno", typeof(string));
    
            var agentidParameter = agentid.HasValue ?
                new ObjectParameter("agentid", agentid) :
                new ObjectParameter("agentid", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            var loginuseridParameter = loginuserid.HasValue ?
                new ObjectParameter("loginuserid", loginuserid) :
                new ObjectParameter("loginuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<backofficepolicynumberpending_Result>("[IllusDataEntityDataModel].[backofficepolicynumberpending](@level, @userid, @fromdate, @todate, @customerno, @dispillno, @csrid, @dispplanno, @agentid, @filter, @loginuserid)", levelParameter, useridParameter, fromdateParameter, todateParameter, customernoParameter, dispillnoParameter, csridParameter, dispplannoParameter, agentidParameter, filterParameter, loginuseridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "calendarapp")]
        public virtual IQueryable<calendarapp_Result> calendarapp(string fromdate, string todate, Nullable<int> userID, Nullable<bool> cadena, string nameID)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var cadenaParameter = cadena.HasValue ?
                new ObjectParameter("Cadena", cadena) :
                new ObjectParameter("Cadena", typeof(bool));
    
            var nameIDParameter = nameID != null ?
                new ObjectParameter("NameID", nameID) :
                new ObjectParameter("NameID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<calendarapp_Result>("[IllusDataEntityDataModel].[calendarapp](@fromdate, @todate, @UserID, @Cadena, @NameID)", fromdateParameter, todateParameter, userIDParameter, cadenaParameter, nameIDParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "calendarData")]
        public virtual IQueryable<calendarData_Result> calendarData(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> userID, Nullable<bool> cadena, string nameID)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var cadenaParameter = cadena.HasValue ?
                new ObjectParameter("Cadena", cadena) :
                new ObjectParameter("Cadena", typeof(bool));
    
            var nameIDParameter = nameID != null ?
                new ObjectParameter("NameID", nameID) :
                new ObjectParameter("NameID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<calendarData_Result>("[IllusDataEntityDataModel].[calendarData](@fromdate, @todate, @UserID, @Cadena, @NameID)", fromdateParameter, todateParameter, userIDParameter, cadenaParameter, nameIDParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "calenderapp")]
        public virtual IQueryable<calenderapp_Result> calenderapp(string fromdate, string todate, Nullable<int> userID, Nullable<bool> cadena, string nameID)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var cadenaParameter = cadena.HasValue ?
                new ObjectParameter("Cadena", cadena) :
                new ObjectParameter("Cadena", typeof(bool));
    
            var nameIDParameter = nameID != null ?
                new ObjectParameter("NameID", nameID) :
                new ObjectParameter("NameID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<calenderapp_Result>("[IllusDataEntityDataModel].[calenderapp](@fromdate, @todate, @UserID, @Cadena, @NameID)", fromdateParameter, todateParameter, userIDParameter, cadenaParameter, nameIDParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "calenderappNEW")]
        public virtual IQueryable<calenderappNEW_Result> calenderappNEW(string fromdate, string todate, Nullable<int> userID)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<calenderappNEW_Result>("[IllusDataEntityDataModel].[calenderappNEW](@fromdate, @todate, @UserID)", fromdateParameter, todateParameter, userIDParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "callsvsvisits")]
        public virtual IQueryable<callsvsvisits_Result> callsvsvisits(string periodtypecode, string period, string from, string to, Nullable<long> userid)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<callsvsvisits_Result>("[IllusDataEntityDataModel].[callsvsvisits](@periodtypecode, @period, @from, @to, @userid)", periodtypecodeParameter, periodParameter, fromParameter, toParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Case_Review_Upload()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Case_Review_Upload");
        }
    
        [DbFunction("IllusDataEntityDataModel", "closingsbyproducts")]
        public virtual IQueryable<closingsbyproducts_Result> closingsbyproducts(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<closingsbyproducts_Result>("[IllusDataEntityDataModel].[closingsbyproducts](@fromdate, @todate)", fromdateParameter, todateParameter);
        }
    
        public virtual int DireccionEmailFullName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DireccionEmailFullName");
        }
    
        public virtual ObjectResult<Nullable<int>> FN_GET_CANTIDAD_CONTACT_POR_MES_OR_ALL(Nullable<int> nAMEID, Nullable<System.DateTime> dATE1, Nullable<System.DateTime> dATE2)
        {
            var nAMEIDParameter = nAMEID.HasValue ?
                new ObjectParameter("NAMEID", nAMEID) :
                new ObjectParameter("NAMEID", typeof(int));
    
            var dATE1Parameter = dATE1.HasValue ?
                new ObjectParameter("DATE1", dATE1) :
                new ObjectParameter("DATE1", typeof(System.DateTime));
    
            var dATE2Parameter = dATE2.HasValue ?
                new ObjectParameter("DATE2", dATE2) :
                new ObjectParameter("DATE2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FN_GET_CANTIDAD_CONTACT_POR_MES_OR_ALL", nAMEIDParameter, dATE1Parameter, dATE2Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FN_GET_CANTIDAD_INLUSTRACIONES_POR_MES_OR_ALL(Nullable<int> nAMEID, Nullable<System.DateTime> dATE1, Nullable<System.DateTime> dATE2)
        {
            var nAMEIDParameter = nAMEID.HasValue ?
                new ObjectParameter("NAMEID", nAMEID) :
                new ObjectParameter("NAMEID", typeof(int));
    
            var dATE1Parameter = dATE1.HasValue ?
                new ObjectParameter("DATE1", dATE1) :
                new ObjectParameter("DATE1", typeof(System.DateTime));
    
            var dATE2Parameter = dATE2.HasValue ?
                new ObjectParameter("DATE2", dATE2) :
                new ObjectParameter("DATE2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FN_GET_CANTIDAD_INLUSTRACIONES_POR_MES_OR_ALL", nAMEIDParameter, dATE1Parameter, dATE2Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FN_GET_CANTIDAD_LOGIN_POR_MES_OR_ALL(string nAMEID, Nullable<System.DateTime> dATE1, Nullable<System.DateTime> dATE2)
        {
            var nAMEIDParameter = nAMEID != null ?
                new ObjectParameter("NAMEID", nAMEID) :
                new ObjectParameter("NAMEID", typeof(string));
    
            var dATE1Parameter = dATE1.HasValue ?
                new ObjectParameter("DATE1", dATE1) :
                new ObjectParameter("DATE1", typeof(System.DateTime));
    
            var dATE2Parameter = dATE2.HasValue ?
                new ObjectParameter("DATE2", dATE2) :
                new ObjectParameter("DATE2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FN_GET_CANTIDAD_LOGIN_POR_MES_OR_ALL", nAMEIDParameter, dATE1Parameter, dATE2Parameter);
        }
    
        public virtual int GettingLastedWeeksAgentLogs(string subManagerName, string logType, string visitWith, Nullable<System.DateTime> date, string estatus)
        {
            var subManagerNameParameter = subManagerName != null ?
                new ObjectParameter("subManagerName", subManagerName) :
                new ObjectParameter("subManagerName", typeof(string));
    
            var logTypeParameter = logType != null ?
                new ObjectParameter("logType", logType) :
                new ObjectParameter("logType", typeof(string));
    
            var visitWithParameter = visitWith != null ?
                new ObjectParameter("visitWith", visitWith) :
                new ObjectParameter("visitWith", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var estatusParameter = estatus != null ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GettingLastedWeeksAgentLogs", subManagerNameParameter, logTypeParameter, visitWithParameter, dateParameter, estatusParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "GettingWeekDaysAtSpecificWeek")]
        public virtual IQueryable<GettingWeekDaysAtSpecificWeek_Result> GettingWeekDaysAtSpecificWeek(Nullable<System.DateTime> date, Nullable<int> specificWeekNumber)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var specificWeekNumberParameter = specificWeekNumber.HasValue ?
                new ObjectParameter("SpecificWeekNumber", specificWeekNumber) :
                new ObjectParameter("SpecificWeekNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GettingWeekDaysAtSpecificWeek_Result>("[IllusDataEntityDataModel].[GettingWeekDaysAtSpecificWeek](@Date, @SpecificWeekNumber)", dateParameter, specificWeekNumberParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "goalsvsachieved")]
        public virtual IQueryable<goalsvsachieved_Result> goalsvsachieved(string periodtypecode, string period, string from, string to, Nullable<long> userid, string logitem)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var logitemParameter = logitem != null ?
                new ObjectParameter("logitem", logitem) :
                new ObjectParameter("logitem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<goalsvsachieved_Result>("[IllusDataEntityDataModel].[goalsvsachieved](@periodtypecode, @period, @from, @to, @userid, @logitem)", periodtypecodeParameter, periodParameter, fromParameter, toParameter, useridParameter, logitemParameter);
        }
    
        public virtual int NuevosUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NuevosUsuarios");
        }
    
        [DbFunction("IllusDataEntityDataModel", "portfolioagent")]
        public virtual IQueryable<portfolioagent_Result> portfolioagent(Nullable<long> userid, string treestate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var treestateParameter = treestate != null ?
                new ObjectParameter("treestate", treestate) :
                new ObjectParameter("treestate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<portfolioagent_Result>("[IllusDataEntityDataModel].[portfolioagent](@userid, @treestate)", useridParameter, treestateParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "portfolioagentapproval")]
        public virtual IQueryable<portfolioagentapproval_Result> portfolioagentapproval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<portfolioagentapproval_Result>("[IllusDataEntityDataModel].[portfolioagentapproval]()");
        }
    
        [DbFunction("IllusDataEntityDataModel", "recentillustration")]
        public virtual IQueryable<recentillustration_Result> recentillustration(string periodtypecode, string period, string from, string to, Nullable<long> userid, string plangroup, string product)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var plangroupParameter = plangroup != null ?
                new ObjectParameter("plangroup", plangroup) :
                new ObjectParameter("plangroup", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<recentillustration_Result>("[IllusDataEntityDataModel].[recentillustration](@periodtypecode, @period, @from, @to, @userid, @plangroup, @product)", periodtypecodeParameter, periodParameter, fromParameter, toParameter, useridParameter, plangroupParameter, productParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "recentwork")]
        public virtual IQueryable<recentwork_Result> recentwork(string periodtypecode, string period, string from, string to, Nullable<long> userid, string logitem)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var logitemParameter = logitem != null ?
                new ObjectParameter("logitem", logitem) :
                new ObjectParameter("logitem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<recentwork_Result>("[IllusDataEntityDataModel].[recentwork](@periodtypecode, @period, @from, @to, @userid, @logitem)", periodtypecodeParameter, periodParameter, fromParameter, toParameter, useridParameter, logitemParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "referalcount")]
        public virtual IQueryable<referalcount_Result> referalcount(string periodtypecode, string period, string from, string to, Nullable<long> userid)
        {
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<referalcount_Result>("[IllusDataEntityDataModel].[referalcount](@periodtypecode, @period, @from, @to, @userid)", periodtypecodeParameter, periodParameter, fromParameter, toParameter, useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "referralsourceforsales")]
        public virtual IQueryable<referralsourceforsales_Result> referralsourceforsales(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<referralsourceforsales_Result>("[IllusDataEntityDataModel].[referralsourceforsales](@userid)", useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "referraltypeleads")]
        public virtual IQueryable<referraltypeleads_Result> referraltypeleads(Nullable<int> userid, string periodtypecode)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var periodtypecodeParameter = periodtypecode != null ?
                new ObjectParameter("periodtypecode", periodtypecode) :
                new ObjectParameter("periodtypecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<referraltypeleads_Result>("[IllusDataEntityDataModel].[referraltypeleads](@userid, @periodtypecode)", useridParameter, periodtypecodeParameter);
        }
    
        public virtual int ReportofVisitforWeek(string nameId, Nullable<int> year, Nullable<int> week)
        {
            var nameIdParameter = nameId != null ?
                new ObjectParameter("NameId", nameId) :
                new ObjectParameter("NameId", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("Week", week) :
                new ObjectParameter("Week", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReportofVisitforWeek", nameIdParameter, yearParameter, weekParameter);
        }
    
        public virtual int resetIdentities(Nullable<long> seed)
        {
            var seedParameter = seed.HasValue ?
                new ObjectParameter("seed", seed) :
                new ObjectParameter("seed", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("resetIdentities", seedParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "salesvsgoals")]
        public virtual IQueryable<salesvsgoals_Result> salesvsgoals(string fromdate, string todate, Nullable<long> userid)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<salesvsgoals_Result>("[IllusDataEntityDataModel].[salesvsgoals](@fromdate, @todate, @userid)", fromdateParameter, todateParameter, useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "salesvsgoalschart")]
        public virtual IQueryable<salesvsgoalschart_Result> salesvsgoalschart(string fromdate, string todate, Nullable<long> userid, string sale, string salepersgoal, string salediff, string closings, string closingspersgoal, string closingsdiff, string saletarget, string salepremium, string salepremiumdiff, string closingtarget, string closingpremium, string closingpremiumdiff)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            var saleParameter = sale != null ?
                new ObjectParameter("sale", sale) :
                new ObjectParameter("sale", typeof(string));
    
            var salepersgoalParameter = salepersgoal != null ?
                new ObjectParameter("salepersgoal", salepersgoal) :
                new ObjectParameter("salepersgoal", typeof(string));
    
            var salediffParameter = salediff != null ?
                new ObjectParameter("salediff", salediff) :
                new ObjectParameter("salediff", typeof(string));
    
            var closingsParameter = closings != null ?
                new ObjectParameter("closings", closings) :
                new ObjectParameter("closings", typeof(string));
    
            var closingspersgoalParameter = closingspersgoal != null ?
                new ObjectParameter("closingspersgoal", closingspersgoal) :
                new ObjectParameter("closingspersgoal", typeof(string));
    
            var closingsdiffParameter = closingsdiff != null ?
                new ObjectParameter("closingsdiff", closingsdiff) :
                new ObjectParameter("closingsdiff", typeof(string));
    
            var saletargetParameter = saletarget != null ?
                new ObjectParameter("saletarget", saletarget) :
                new ObjectParameter("saletarget", typeof(string));
    
            var salepremiumParameter = salepremium != null ?
                new ObjectParameter("salepremium", salepremium) :
                new ObjectParameter("salepremium", typeof(string));
    
            var salepremiumdiffParameter = salepremiumdiff != null ?
                new ObjectParameter("salepremiumdiff", salepremiumdiff) :
                new ObjectParameter("salepremiumdiff", typeof(string));
    
            var closingtargetParameter = closingtarget != null ?
                new ObjectParameter("closingtarget", closingtarget) :
                new ObjectParameter("closingtarget", typeof(string));
    
            var closingpremiumParameter = closingpremium != null ?
                new ObjectParameter("closingpremium", closingpremium) :
                new ObjectParameter("closingpremium", typeof(string));
    
            var closingpremiumdiffParameter = closingpremiumdiff != null ?
                new ObjectParameter("closingpremiumdiff", closingpremiumdiff) :
                new ObjectParameter("closingpremiumdiff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<salesvsgoalschart_Result>("[IllusDataEntityDataModel].[salesvsgoalschart](@fromdate, @todate, @userid, @sale, @salepersgoal, @salediff, @closings, @closingspersgoal, @closingsdiff, @saletarget, @salepremium, @salepremiumdiff, @closingtarget, @closingpremium, @closingpremiumdiff)", fromdateParameter, todateParameter, useridParameter, saleParameter, salepersgoalParameter, salediffParameter, closingsParameter, closingspersgoalParameter, closingsdiffParameter, saletargetParameter, salepremiumParameter, salepremiumdiffParameter, closingtargetParameter, closingpremiumParameter, closingpremiumdiffParameter);
        }
    
        public virtual ObjectResult<SP_customerdet_Select_Result> SP_customerdet_Select(Nullable<int> proceso, Nullable<long> customerno, string clientID, string firstName, string lastName, string lastName2, string middleName, Nullable<System.DateTime> birthdate, string age, string gendercode, string maritalStatuscode, string smoker, string address1, string address2, string city, string state, Nullable<int> countryno, string zipCode, string emailid1, string emailid2, string busAddress1, string busAddress2, string busZipCode, string busCity, Nullable<int> busCountryno, string busState, string agentcode, string notes, string referraltypecode, string busAddress3, string address3, Nullable<int> userid, Nullable<System.DateTime> datecreated, Nullable<int> createdby, Nullable<System.DateTime> dateupdated, Nullable<int> updatedby, Nullable<System.DateTime> appointment, Nullable<int> illuscount, Nullable<long> rcustomerno, string customerstatuscode, Nullable<int> calls, Nullable<int> visits, Nullable<System.DateTime> datesynced, Nullable<long> recordid, string refname, string reflastname, string refemail, string ext, string phoneno, Nullable<int> rescountryno, Nullable<long> refcustomerno, string is_deleted, string idno)
        {
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(int));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var lastName2Parameter = lastName2 != null ?
                new ObjectParameter("LastName2", lastName2) :
                new ObjectParameter("LastName2", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var gendercodeParameter = gendercode != null ?
                new ObjectParameter("gendercode", gendercode) :
                new ObjectParameter("gendercode", typeof(string));
    
            var maritalStatuscodeParameter = maritalStatuscode != null ?
                new ObjectParameter("MaritalStatuscode", maritalStatuscode) :
                new ObjectParameter("MaritalStatuscode", typeof(string));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("Smoker", smoker) :
                new ObjectParameter("Smoker", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var countrynoParameter = countryno.HasValue ?
                new ObjectParameter("Countryno", countryno) :
                new ObjectParameter("Countryno", typeof(int));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var emailid1Parameter = emailid1 != null ?
                new ObjectParameter("Emailid1", emailid1) :
                new ObjectParameter("Emailid1", typeof(string));
    
            var emailid2Parameter = emailid2 != null ?
                new ObjectParameter("Emailid2", emailid2) :
                new ObjectParameter("Emailid2", typeof(string));
    
            var busAddress1Parameter = busAddress1 != null ?
                new ObjectParameter("BusAddress1", busAddress1) :
                new ObjectParameter("BusAddress1", typeof(string));
    
            var busAddress2Parameter = busAddress2 != null ?
                new ObjectParameter("BusAddress2", busAddress2) :
                new ObjectParameter("BusAddress2", typeof(string));
    
            var busZipCodeParameter = busZipCode != null ?
                new ObjectParameter("BusZipCode", busZipCode) :
                new ObjectParameter("BusZipCode", typeof(string));
    
            var busCityParameter = busCity != null ?
                new ObjectParameter("BusCity", busCity) :
                new ObjectParameter("BusCity", typeof(string));
    
            var busCountrynoParameter = busCountryno.HasValue ?
                new ObjectParameter("BusCountryno", busCountryno) :
                new ObjectParameter("BusCountryno", typeof(int));
    
            var busStateParameter = busState != null ?
                new ObjectParameter("BusState", busState) :
                new ObjectParameter("BusState", typeof(string));
    
            var agentcodeParameter = agentcode != null ?
                new ObjectParameter("Agentcode", agentcode) :
                new ObjectParameter("Agentcode", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var referraltypecodeParameter = referraltypecode != null ?
                new ObjectParameter("referraltypecode", referraltypecode) :
                new ObjectParameter("referraltypecode", typeof(string));
    
            var busAddress3Parameter = busAddress3 != null ?
                new ObjectParameter("BusAddress3", busAddress3) :
                new ObjectParameter("BusAddress3", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var appointmentParameter = appointment.HasValue ?
                new ObjectParameter("appointment", appointment) :
                new ObjectParameter("appointment", typeof(System.DateTime));
    
            var illuscountParameter = illuscount.HasValue ?
                new ObjectParameter("illuscount", illuscount) :
                new ObjectParameter("illuscount", typeof(int));
    
            var rcustomernoParameter = rcustomerno.HasValue ?
                new ObjectParameter("rcustomerno", rcustomerno) :
                new ObjectParameter("rcustomerno", typeof(long));
    
            var customerstatuscodeParameter = customerstatuscode != null ?
                new ObjectParameter("customerstatuscode", customerstatuscode) :
                new ObjectParameter("customerstatuscode", typeof(string));
    
            var callsParameter = calls.HasValue ?
                new ObjectParameter("calls", calls) :
                new ObjectParameter("calls", typeof(int));
    
            var visitsParameter = visits.HasValue ?
                new ObjectParameter("visits", visits) :
                new ObjectParameter("visits", typeof(int));
    
            var datesyncedParameter = datesynced.HasValue ?
                new ObjectParameter("datesynced", datesynced) :
                new ObjectParameter("datesynced", typeof(System.DateTime));
    
            var recordidParameter = recordid.HasValue ?
                new ObjectParameter("recordid", recordid) :
                new ObjectParameter("recordid", typeof(long));
    
            var refnameParameter = refname != null ?
                new ObjectParameter("refname", refname) :
                new ObjectParameter("refname", typeof(string));
    
            var reflastnameParameter = reflastname != null ?
                new ObjectParameter("reflastname", reflastname) :
                new ObjectParameter("reflastname", typeof(string));
    
            var refemailParameter = refemail != null ?
                new ObjectParameter("refemail", refemail) :
                new ObjectParameter("refemail", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("ext", ext) :
                new ObjectParameter("ext", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("phoneno", phoneno) :
                new ObjectParameter("phoneno", typeof(string));
    
            var rescountrynoParameter = rescountryno.HasValue ?
                new ObjectParameter("rescountryno", rescountryno) :
                new ObjectParameter("rescountryno", typeof(int));
    
            var refcustomernoParameter = refcustomerno.HasValue ?
                new ObjectParameter("refcustomerno", refcustomerno) :
                new ObjectParameter("refcustomerno", typeof(long));
    
            var is_deletedParameter = is_deleted != null ?
                new ObjectParameter("is_deleted", is_deleted) :
                new ObjectParameter("is_deleted", typeof(string));
    
            var idnoParameter = idno != null ?
                new ObjectParameter("idno", idno) :
                new ObjectParameter("idno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_customerdet_Select_Result>("SP_customerdet_Select", procesoParameter, customernoParameter, clientIDParameter, firstNameParameter, lastNameParameter, lastName2Parameter, middleNameParameter, birthdateParameter, ageParameter, gendercodeParameter, maritalStatuscodeParameter, smokerParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, countrynoParameter, zipCodeParameter, emailid1Parameter, emailid2Parameter, busAddress1Parameter, busAddress2Parameter, busZipCodeParameter, busCityParameter, busCountrynoParameter, busStateParameter, agentcodeParameter, notesParameter, referraltypecodeParameter, busAddress3Parameter, address3Parameter, useridParameter, datecreatedParameter, createdbyParameter, dateupdatedParameter, updatedbyParameter, appointmentParameter, illuscountParameter, rcustomernoParameter, customerstatuscodeParameter, callsParameter, visitsParameter, datesyncedParameter, recordidParameter, refnameParameter, reflastnameParameter, refemailParameter, extParameter, phonenoParameter, rescountrynoParameter, refcustomernoParameter, is_deletedParameter, idnoParameter);
        }
    
        public virtual int SP_Insured_Select(Nullable<int> proceso, string customer, string illustration, string first_Name, string middle_Name, string last_Name, string name, string relationship, string agentID, Nullable<int> customer_Plan_No, string plan_Code, string plan, string payment_Frequency_Code, Nullable<int> payment_Frequency, Nullable<decimal> insured_Ammount, Nullable<decimal> premium_Ammount, Nullable<decimal> annual_Premium, Nullable<decimal> initial_Contribution, Nullable<decimal> target_Premium, Nullable<System.DateTime> date)
        {
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(int));
    
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            var illustrationParameter = illustration != null ?
                new ObjectParameter("Illustration", illustration) :
                new ObjectParameter("Illustration", typeof(string));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var middle_NameParameter = middle_Name != null ?
                new ObjectParameter("Middle_Name", middle_Name) :
                new ObjectParameter("Middle_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var agentIDParameter = agentID != null ?
                new ObjectParameter("AgentID", agentID) :
                new ObjectParameter("AgentID", typeof(string));
    
            var customer_Plan_NoParameter = customer_Plan_No.HasValue ?
                new ObjectParameter("Customer_Plan_No", customer_Plan_No) :
                new ObjectParameter("Customer_Plan_No", typeof(int));
    
            var plan_CodeParameter = plan_Code != null ?
                new ObjectParameter("Plan_Code", plan_Code) :
                new ObjectParameter("Plan_Code", typeof(string));
    
            var planParameter = plan != null ?
                new ObjectParameter("Plan", plan) :
                new ObjectParameter("Plan", typeof(string));
    
            var payment_Frequency_CodeParameter = payment_Frequency_Code != null ?
                new ObjectParameter("Payment_Frequency_Code", payment_Frequency_Code) :
                new ObjectParameter("Payment_Frequency_Code", typeof(string));
    
            var payment_FrequencyParameter = payment_Frequency.HasValue ?
                new ObjectParameter("Payment_Frequency", payment_Frequency) :
                new ObjectParameter("Payment_Frequency", typeof(int));
    
            var insured_AmmountParameter = insured_Ammount.HasValue ?
                new ObjectParameter("Insured_Ammount", insured_Ammount) :
                new ObjectParameter("Insured_Ammount", typeof(decimal));
    
            var premium_AmmountParameter = premium_Ammount.HasValue ?
                new ObjectParameter("Premium_Ammount", premium_Ammount) :
                new ObjectParameter("Premium_Ammount", typeof(decimal));
    
            var annual_PremiumParameter = annual_Premium.HasValue ?
                new ObjectParameter("Annual_Premium", annual_Premium) :
                new ObjectParameter("Annual_Premium", typeof(decimal));
    
            var initial_ContributionParameter = initial_Contribution.HasValue ?
                new ObjectParameter("Initial_Contribution", initial_Contribution) :
                new ObjectParameter("Initial_Contribution", typeof(decimal));
    
            var target_PremiumParameter = target_Premium.HasValue ?
                new ObjectParameter("Target_Premium", target_Premium) :
                new ObjectParameter("Target_Premium", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insured_Select", procesoParameter, customerParameter, illustrationParameter, first_NameParameter, middle_NameParameter, last_NameParameter, nameParameter, relationshipParameter, agentIDParameter, customer_Plan_NoParameter, plan_CodeParameter, planParameter, payment_Frequency_CodeParameter, payment_FrequencyParameter, insured_AmmountParameter, premium_AmmountParameter, annual_PremiumParameter, initial_ContributionParameter, target_PremiumParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_New_Business_Insured_Upload(string customer)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_New_Business_Insured_Upload", customerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_New_Business_Ready_to_Process_Cmd(Nullable<int> proceso, Nullable<long> customer, string illustration)
        {
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(int));
    
            var customerParameter = customer.HasValue ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(long));
    
            var illustrationParameter = illustration != null ?
                new ObjectParameter("Illustration", illustration) :
                new ObjectParameter("Illustration", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_New_Business_Ready_to_Process_Cmd", procesoParameter, customerParameter, illustrationParameter);
        }
    
        public virtual ObjectResult<SP_User_Select_Result> SP_User_Select(Nullable<int> proceso, string type, string nameId, Nullable<int> userId, string email, Nullable<int> iD_Status, Nullable<int> iD_Supervisor)
        {
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var nameIdParameter = nameId != null ?
                new ObjectParameter("NameId", nameId) :
                new ObjectParameter("NameId", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var iD_StatusParameter = iD_Status.HasValue ?
                new ObjectParameter("ID_Status", iD_Status) :
                new ObjectParameter("ID_Status", typeof(int));
    
            var iD_SupervisorParameter = iD_Supervisor.HasValue ?
                new ObjectParameter("ID_Supervisor", iD_Supervisor) :
                new ObjectParameter("ID_Supervisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_User_Select_Result>("SP_User_Select", procesoParameter, typeParameter, nameIdParameter, userIdParameter, emailParameter, iD_StatusParameter, iD_SupervisorParameter);
        }
    
        public virtual ObjectResult<SP_vw_New_Business_Login_Select_Result> SP_vw_New_Business_Login_Select(Nullable<int> proceso, Nullable<int> iD, string nameId, string type, string user_Name, string first_Name, string middle_Name, string last_Name, string name, Nullable<System.DateTime> birth_Date, string email_I, string email_II, string address_I, string address_II, string address_III, string city, string state, Nullable<int> country, string zip_Code, Nullable<int> rol, string email, string status, Nullable<System.DateTime> date)
        {
            var procesoParameter = proceso.HasValue ?
                new ObjectParameter("Proceso", proceso) :
                new ObjectParameter("Proceso", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameIdParameter = nameId != null ?
                new ObjectParameter("NameId", nameId) :
                new ObjectParameter("NameId", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var user_NameParameter = user_Name != null ?
                new ObjectParameter("User_Name", user_Name) :
                new ObjectParameter("User_Name", typeof(string));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var middle_NameParameter = middle_Name != null ?
                new ObjectParameter("Middle_Name", middle_Name) :
                new ObjectParameter("Middle_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birth_DateParameter = birth_Date.HasValue ?
                new ObjectParameter("Birth_Date", birth_Date) :
                new ObjectParameter("Birth_Date", typeof(System.DateTime));
    
            var email_IParameter = email_I != null ?
                new ObjectParameter("Email_I", email_I) :
                new ObjectParameter("Email_I", typeof(string));
    
            var email_IIParameter = email_II != null ?
                new ObjectParameter("Email_II", email_II) :
                new ObjectParameter("Email_II", typeof(string));
    
            var address_IParameter = address_I != null ?
                new ObjectParameter("Address_I", address_I) :
                new ObjectParameter("Address_I", typeof(string));
    
            var address_IIParameter = address_II != null ?
                new ObjectParameter("Address_II", address_II) :
                new ObjectParameter("Address_II", typeof(string));
    
            var address_IIIParameter = address_III != null ?
                new ObjectParameter("Address_III", address_III) :
                new ObjectParameter("Address_III", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(int));
    
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_vw_New_Business_Login_Select_Result>("SP_vw_New_Business_Login_Select", procesoParameter, iDParameter, nameIdParameter, typeParameter, user_NameParameter, first_NameParameter, middle_NameParameter, last_NameParameter, nameParameter, birth_DateParameter, email_IParameter, email_IIParameter, address_IParameter, address_IIParameter, address_IIIParameter, cityParameter, stateParameter, countryParameter, zip_CodeParameter, rolParameter, emailParameter, statusParameter, dateParameter);
        }
    
        public virtual int spa_ClearSyncTransactionMaster(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spa_ClearSyncTransactionMaster", fechaParameter);
        }
    
        public virtual int SPC_GET_ACTIVIDAD_QUEUE_POR_ANO(Nullable<int> yEAR)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_GET_ACTIVIDAD_QUEUE_POR_ANO", yEARParameter);
        }
    
        public virtual int SPC_GET_ACTIVIDAD_QUEUE_POR_ANO_temporal(Nullable<int> yEAR)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_GET_ACTIVIDAD_QUEUE_POR_ANO_temporal", yEARParameter);
        }
    
        public virtual ObjectResult<SPC_GET_MEETING_AGENT_Result> SPC_GET_MEETING_AGENT(Nullable<int> userid, string tipo)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_MEETING_AGENT_Result>("SPC_GET_MEETING_AGENT", useridParameter, tipoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS_Result> SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS(Nullable<int> userid, string tipo, Nullable<int> stament, Nullable<System.DateTime> dATEINI, Nullable<System.DateTime> dATEFIN)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var stamentParameter = stament.HasValue ?
                new ObjectParameter("Stament", stament) :
                new ObjectParameter("Stament", typeof(int));
    
            var dATEINIParameter = dATEINI.HasValue ?
                new ObjectParameter("DATEINI", dATEINI) :
                new ObjectParameter("DATEINI", typeof(System.DateTime));
    
            var dATEFINParameter = dATEFIN.HasValue ?
                new ObjectParameter("DATEFIN", dATEFIN) :
                new ObjectParameter("DATEFIN", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS_Result>("SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS", useridParameter, tipoParameter, stamentParameter, dATEINIParameter, dATEFINParameter);
        }
    
        public virtual ObjectResult<SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS_WORKED_Result> SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS_WORKED(Nullable<int> userid, string tipo, Nullable<int> stament, Nullable<System.DateTime> dATEINI, Nullable<System.DateTime> dATEFIN)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var stamentParameter = stament.HasValue ?
                new ObjectParameter("Stament", stament) :
                new ObjectParameter("Stament", typeof(int));
    
            var dATEINIParameter = dATEINI.HasValue ?
                new ObjectParameter("DATEINI", dATEINI) :
                new ObjectParameter("DATEINI", typeof(System.DateTime));
    
            var dATEFINParameter = dATEFIN.HasValue ?
                new ObjectParameter("DATEFIN", dATEFIN) :
                new ObjectParameter("DATEFIN", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS_WORKED_Result>("SPC_GET_MEETING_AGENT_BY_DATE_AND_STAMENTS_WORKED", useridParameter, tipoParameter, stamentParameter, dATEINIParameter, dATEFINParameter);
        }
    
        public virtual int SPC_INSERT_APPOINTMENTS_WORKED(Nullable<long> aGENTLOGNO, string workBy, Nullable<int> wokByID)
        {
            var aGENTLOGNOParameter = aGENTLOGNO.HasValue ?
                new ObjectParameter("AGENTLOGNO", aGENTLOGNO) :
                new ObjectParameter("AGENTLOGNO", typeof(long));
    
            var workByParameter = workBy != null ?
                new ObjectParameter("WorkBy", workBy) :
                new ObjectParameter("WorkBy", typeof(string));
    
            var wokByIDParameter = wokByID.HasValue ?
                new ObjectParameter("WokByID", wokByID) :
                new ObjectParameter("WokByID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_INSERT_APPOINTMENTS_WORKED", aGENTLOGNOParameter, workByParameter, wokByIDParameter);
        }
    
        public virtual int SPC_INSERTA_ACTIVIDAD_QUEUE(string nombre, string oficina, Nullable<int> cantidadLogin, Nullable<int> cantidadLoginM1, Nullable<int> cantidadLoginM2, Nullable<int> cantidadLoginM3, Nullable<int> cantidadLoginM4, Nullable<int> cantidadInlustraciones, Nullable<int> cantidadInlustracionesM1, Nullable<int> cantidadInlustracionesM2, Nullable<int> cantidadInlustracionesM3, Nullable<int> cantidadInlustracionesM4, Nullable<int> cantidadContacto1, Nullable<int> cantidadContactoM11, Nullable<int> cantidadContactoM21, Nullable<int> cantidadContactoM31, Nullable<int> cantidadContactoM41, string nameID, Nullable<int> userId, Nullable<int> polizaEfectivas)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var oficinaParameter = oficina != null ?
                new ObjectParameter("Oficina", oficina) :
                new ObjectParameter("Oficina", typeof(string));
    
            var cantidadLoginParameter = cantidadLogin.HasValue ?
                new ObjectParameter("CantidadLogin", cantidadLogin) :
                new ObjectParameter("CantidadLogin", typeof(int));
    
            var cantidadLoginM1Parameter = cantidadLoginM1.HasValue ?
                new ObjectParameter("CantidadLoginM1", cantidadLoginM1) :
                new ObjectParameter("CantidadLoginM1", typeof(int));
    
            var cantidadLoginM2Parameter = cantidadLoginM2.HasValue ?
                new ObjectParameter("CantidadLoginM2", cantidadLoginM2) :
                new ObjectParameter("CantidadLoginM2", typeof(int));
    
            var cantidadLoginM3Parameter = cantidadLoginM3.HasValue ?
                new ObjectParameter("CantidadLoginM3", cantidadLoginM3) :
                new ObjectParameter("CantidadLoginM3", typeof(int));
    
            var cantidadLoginM4Parameter = cantidadLoginM4.HasValue ?
                new ObjectParameter("CantidadLoginM4", cantidadLoginM4) :
                new ObjectParameter("CantidadLoginM4", typeof(int));
    
            var cantidadInlustracionesParameter = cantidadInlustraciones.HasValue ?
                new ObjectParameter("CantidadInlustraciones", cantidadInlustraciones) :
                new ObjectParameter("CantidadInlustraciones", typeof(int));
    
            var cantidadInlustracionesM1Parameter = cantidadInlustracionesM1.HasValue ?
                new ObjectParameter("CantidadInlustracionesM1", cantidadInlustracionesM1) :
                new ObjectParameter("CantidadInlustracionesM1", typeof(int));
    
            var cantidadInlustracionesM2Parameter = cantidadInlustracionesM2.HasValue ?
                new ObjectParameter("CantidadInlustracionesM2", cantidadInlustracionesM2) :
                new ObjectParameter("CantidadInlustracionesM2", typeof(int));
    
            var cantidadInlustracionesM3Parameter = cantidadInlustracionesM3.HasValue ?
                new ObjectParameter("CantidadInlustracionesM3", cantidadInlustracionesM3) :
                new ObjectParameter("CantidadInlustracionesM3", typeof(int));
    
            var cantidadInlustracionesM4Parameter = cantidadInlustracionesM4.HasValue ?
                new ObjectParameter("CantidadInlustracionesM4", cantidadInlustracionesM4) :
                new ObjectParameter("CantidadInlustracionesM4", typeof(int));
    
            var cantidadContacto1Parameter = cantidadContacto1.HasValue ?
                new ObjectParameter("CantidadContacto1", cantidadContacto1) :
                new ObjectParameter("CantidadContacto1", typeof(int));
    
            var cantidadContactoM11Parameter = cantidadContactoM11.HasValue ?
                new ObjectParameter("CantidadContactoM11", cantidadContactoM11) :
                new ObjectParameter("CantidadContactoM11", typeof(int));
    
            var cantidadContactoM21Parameter = cantidadContactoM21.HasValue ?
                new ObjectParameter("CantidadContactoM21", cantidadContactoM21) :
                new ObjectParameter("CantidadContactoM21", typeof(int));
    
            var cantidadContactoM31Parameter = cantidadContactoM31.HasValue ?
                new ObjectParameter("CantidadContactoM31", cantidadContactoM31) :
                new ObjectParameter("CantidadContactoM31", typeof(int));
    
            var cantidadContactoM41Parameter = cantidadContactoM41.HasValue ?
                new ObjectParameter("CantidadContactoM41", cantidadContactoM41) :
                new ObjectParameter("CantidadContactoM41", typeof(int));
    
            var nameIDParameter = nameID != null ?
                new ObjectParameter("nameID", nameID) :
                new ObjectParameter("nameID", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var polizaEfectivasParameter = polizaEfectivas.HasValue ?
                new ObjectParameter("PolizaEfectivas", polizaEfectivas) :
                new ObjectParameter("PolizaEfectivas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_INSERTA_ACTIVIDAD_QUEUE", nombreParameter, oficinaParameter, cantidadLoginParameter, cantidadLoginM1Parameter, cantidadLoginM2Parameter, cantidadLoginM3Parameter, cantidadLoginM4Parameter, cantidadInlustracionesParameter, cantidadInlustracionesM1Parameter, cantidadInlustracionesM2Parameter, cantidadInlustracionesM3Parameter, cantidadInlustracionesM4Parameter, cantidadContacto1Parameter, cantidadContactoM11Parameter, cantidadContactoM21Parameter, cantidadContactoM31Parameter, cantidadContactoM41Parameter, nameIDParameter, userIdParameter, polizaEfectivasParameter);
        }
    
        public virtual int spDesactivaUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDesactivaUsuarios");
        }
    
        public virtual int SPROC_GetNewBussinesGlobalSearch(string nameId, string poliza, string clientName, string clientLastName, string policySearch, Nullable<System.DateTime> psearchFrom, Nullable<System.DateTime> psearchTo, string estado, string plan, string periodicity, string paymentType, string payment, Nullable<System.DateTime> paymentFrom, Nullable<System.DateTime> paymentTo, string agente, Nullable<System.DateTime> queue_From, Nullable<System.DateTime> queue_To, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<int> cantReg, ObjectParameter tot_Reg)
        {
            var nameIdParameter = nameId != null ?
                new ObjectParameter("NameId", nameId) :
                new ObjectParameter("NameId", typeof(string));
    
            var polizaParameter = poliza != null ?
                new ObjectParameter("Poliza", poliza) :
                new ObjectParameter("Poliza", typeof(string));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var clientLastNameParameter = clientLastName != null ?
                new ObjectParameter("ClientLastName", clientLastName) :
                new ObjectParameter("ClientLastName", typeof(string));
    
            var policySearchParameter = policySearch != null ?
                new ObjectParameter("PolicySearch", policySearch) :
                new ObjectParameter("PolicySearch", typeof(string));
    
            var psearchFromParameter = psearchFrom.HasValue ?
                new ObjectParameter("PsearchFrom", psearchFrom) :
                new ObjectParameter("PsearchFrom", typeof(System.DateTime));
    
            var psearchToParameter = psearchTo.HasValue ?
                new ObjectParameter("PsearchTo", psearchTo) :
                new ObjectParameter("PsearchTo", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var planParameter = plan != null ?
                new ObjectParameter("Plan", plan) :
                new ObjectParameter("Plan", typeof(string));
    
            var periodicityParameter = periodicity != null ?
                new ObjectParameter("Periodicity", periodicity) :
                new ObjectParameter("Periodicity", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var paymentParameter = payment != null ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(string));
    
            var paymentFromParameter = paymentFrom.HasValue ?
                new ObjectParameter("PaymentFrom", paymentFrom) :
                new ObjectParameter("PaymentFrom", typeof(System.DateTime));
    
            var paymentToParameter = paymentTo.HasValue ?
                new ObjectParameter("PaymentTo", paymentTo) :
                new ObjectParameter("PaymentTo", typeof(System.DateTime));
    
            var agenteParameter = agente != null ?
                new ObjectParameter("Agente", agente) :
                new ObjectParameter("Agente", typeof(string));
    
            var queue_FromParameter = queue_From.HasValue ?
                new ObjectParameter("Queue_From", queue_From) :
                new ObjectParameter("Queue_From", typeof(System.DateTime));
    
            var queue_ToParameter = queue_To.HasValue ?
                new ObjectParameter("Queue_To", queue_To) :
                new ObjectParameter("Queue_To", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var cantRegParameter = cantReg.HasValue ?
                new ObjectParameter("CantReg", cantReg) :
                new ObjectParameter("CantReg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPROC_GetNewBussinesGlobalSearch", nameIdParameter, polizaParameter, clientNameParameter, clientLastNameParameter, policySearchParameter, psearchFromParameter, psearchToParameter, estadoParameter, planParameter, periodicityParameter, paymentTypeParameter, paymentParameter, paymentFromParameter, paymentToParameter, agenteParameter, queue_FromParameter, queue_ToParameter, pageIndexParameter, pageSizeParameter, cantRegParameter, tot_Reg);
        }
    
        public virtual int SPROC_GetNewBussinesGlobalSearch_old(string nAMEID, string pOLIZA, string cLIENTNAME, string cLIENTLASTNAME, string pOLICYSEARCH, Nullable<System.DateTime> pSEARCHFROM, Nullable<System.DateTime> pSEARCHTO, string eSTADO, string pLAN, string pERIODICITY, string pAYMENTTYPE, string pAYMENT, Nullable<System.DateTime> pAYMENTFROM, Nullable<System.DateTime> pAYMENTTO, string aGENTE, Nullable<System.DateTime> qUEUE_FROM, Nullable<System.DateTime> qUEUE_TO, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<int> cantReg, ObjectParameter tOT_REG)
        {
            var nAMEIDParameter = nAMEID != null ?
                new ObjectParameter("NAMEID", nAMEID) :
                new ObjectParameter("NAMEID", typeof(string));
    
            var pOLIZAParameter = pOLIZA != null ?
                new ObjectParameter("POLIZA", pOLIZA) :
                new ObjectParameter("POLIZA", typeof(string));
    
            var cLIENTNAMEParameter = cLIENTNAME != null ?
                new ObjectParameter("CLIENTNAME", cLIENTNAME) :
                new ObjectParameter("CLIENTNAME", typeof(string));
    
            var cLIENTLASTNAMEParameter = cLIENTLASTNAME != null ?
                new ObjectParameter("CLIENTLASTNAME", cLIENTLASTNAME) :
                new ObjectParameter("CLIENTLASTNAME", typeof(string));
    
            var pOLICYSEARCHParameter = pOLICYSEARCH != null ?
                new ObjectParameter("POLICYSEARCH", pOLICYSEARCH) :
                new ObjectParameter("POLICYSEARCH", typeof(string));
    
            var pSEARCHFROMParameter = pSEARCHFROM.HasValue ?
                new ObjectParameter("PSEARCHFROM", pSEARCHFROM) :
                new ObjectParameter("PSEARCHFROM", typeof(System.DateTime));
    
            var pSEARCHTOParameter = pSEARCHTO.HasValue ?
                new ObjectParameter("PSEARCHTO", pSEARCHTO) :
                new ObjectParameter("PSEARCHTO", typeof(System.DateTime));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var pLANParameter = pLAN != null ?
                new ObjectParameter("PLAN", pLAN) :
                new ObjectParameter("PLAN", typeof(string));
    
            var pERIODICITYParameter = pERIODICITY != null ?
                new ObjectParameter("PERIODICITY", pERIODICITY) :
                new ObjectParameter("PERIODICITY", typeof(string));
    
            var pAYMENTTYPEParameter = pAYMENTTYPE != null ?
                new ObjectParameter("PAYMENTTYPE", pAYMENTTYPE) :
                new ObjectParameter("PAYMENTTYPE", typeof(string));
    
            var pAYMENTParameter = pAYMENT != null ?
                new ObjectParameter("PAYMENT", pAYMENT) :
                new ObjectParameter("PAYMENT", typeof(string));
    
            var pAYMENTFROMParameter = pAYMENTFROM.HasValue ?
                new ObjectParameter("PAYMENTFROM", pAYMENTFROM) :
                new ObjectParameter("PAYMENTFROM", typeof(System.DateTime));
    
            var pAYMENTTOParameter = pAYMENTTO.HasValue ?
                new ObjectParameter("PAYMENTTO", pAYMENTTO) :
                new ObjectParameter("PAYMENTTO", typeof(System.DateTime));
    
            var aGENTEParameter = aGENTE != null ?
                new ObjectParameter("AGENTE", aGENTE) :
                new ObjectParameter("AGENTE", typeof(string));
    
            var qUEUE_FROMParameter = qUEUE_FROM.HasValue ?
                new ObjectParameter("QUEUE_FROM", qUEUE_FROM) :
                new ObjectParameter("QUEUE_FROM", typeof(System.DateTime));
    
            var qUEUE_TOParameter = qUEUE_TO.HasValue ?
                new ObjectParameter("QUEUE_TO", qUEUE_TO) :
                new ObjectParameter("QUEUE_TO", typeof(System.DateTime));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var cantRegParameter = cantReg.HasValue ?
                new ObjectParameter("CantReg", cantReg) :
                new ObjectParameter("CantReg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPROC_GetNewBussinesGlobalSearch_old", nAMEIDParameter, pOLIZAParameter, cLIENTNAMEParameter, cLIENTLASTNAMEParameter, pOLICYSEARCHParameter, pSEARCHFROMParameter, pSEARCHTOParameter, eSTADOParameter, pLANParameter, pERIODICITYParameter, pAYMENTTYPEParameter, pAYMENTParameter, pAYMENTFROMParameter, pAYMENTTOParameter, aGENTEParameter, qUEUE_FROMParameter, qUEUE_TOParameter, pageIndexParameter, pageSizeParameter, cantRegParameter, tOT_REG);
        }
    
        public virtual int spu_GetWeekAgentYears(string nameID)
        {
            var nameIDParameter = nameID != null ?
                new ObjectParameter("NameID", nameID) :
                new ObjectParameter("NameID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spu_GetWeekAgentYears", nameIDParameter);
        }
    
        public virtual ObjectResult<spu_GetWeekInterval_Result> spu_GetWeekInterval(string nameID, Nullable<int> year)
        {
            var nameIDParameter = nameID != null ?
                new ObjectParameter("NameID", nameID) :
                new ObjectParameter("NameID", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spu_GetWeekInterval_Result>("spu_GetWeekInterval", nameIDParameter, yearParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "test_001")]
        public virtual IQueryable<test_001_Result> test_001(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<test_001_Result>("[IllusDataEntityDataModel].[test_001](@fromdate, @todate)", fromdateParameter, todateParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "userhierachy")]
        public virtual IQueryable<userhierachy_Result> userhierachy(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<userhierachy_Result>("[IllusDataEntityDataModel].[userhierachy](@userid)", useridParameter);
        }
    
        [DbFunction("IllusDataEntityDataModel", "useringroup")]
        public virtual IQueryable<Nullable<long>> useringroup(Nullable<long> loginuserid)
        {
            var loginuseridParameter = loginuserid.HasValue ?
                new ObjectParameter("loginuserid", loginuserid) :
                new ObjectParameter("loginuserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<long>>("[IllusDataEntityDataModel].[useringroup](@loginuserid)", loginuseridParameter);
        }
    
        public virtual int sp_change_customerplandet_status_automatically()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_change_customerplandet_status_automatically");
        }
    
        public virtual ObjectResult<SP_GET_CustomerPlanDet_Count_Quo_20161128_Result> SP_GET_CustomerPlanDet_Count_Quo_20161128(Nullable<int> corpId, Nullable<int> agent_Id, Nullable<int> companyId, Nullable<System.DateTime> dateTo, Nullable<System.DateTime> dateFrom, Nullable<int> officeId, Nullable<int> bl_Id)
        {
            var corpIdParameter = corpId.HasValue ?
                new ObjectParameter("CorpId", corpId) :
                new ObjectParameter("CorpId", typeof(int));
    
            var agent_IdParameter = agent_Id.HasValue ?
                new ObjectParameter("Agent_Id", agent_Id) :
                new ObjectParameter("Agent_Id", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var officeIdParameter = officeId.HasValue ?
                new ObjectParameter("OfficeId", officeId) :
                new ObjectParameter("OfficeId", typeof(int));
    
            var bl_IdParameter = bl_Id.HasValue ?
                new ObjectParameter("Bl_Id", bl_Id) :
                new ObjectParameter("Bl_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CustomerPlanDet_Count_Quo_20161128_Result>("SP_GET_CustomerPlanDet_Count_Quo_20161128", corpIdParameter, agent_IdParameter, companyIdParameter, dateToParameter, dateFromParameter, officeIdParameter, bl_IdParameter);
        }
    
        public virtual ObjectResult<sp_get_customerPlandet_Old_Result> sp_get_customerPlandet_Old(Nullable<long> customerPlanno, Nullable<long> customerno, Nullable<long> rcustomerno, Nullable<int> userId, Nullable<int> companyId, Nullable<System.DateTime> dateTo, Nullable<System.DateTime> dateFrom, Nullable<int> corpId, Nullable<int> regionId, Nullable<int> countryId, Nullable<int> domesticregId, Nullable<int> stateProvId, Nullable<int> cityId, Nullable<int> officeId, Nullable<int> caseSeqNo, Nullable<int> histSeqNo, Nullable<int> language_Id, Nullable<bool> getHistorical, string illustrationStatusCode, string tabFilter, string agentNameId, string agentType, string assignedSubscriberNameId)
        {
            var customerPlannoParameter = customerPlanno.HasValue ?
                new ObjectParameter("customerPlanno", customerPlanno) :
                new ObjectParameter("customerPlanno", typeof(long));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("customerno", customerno) :
                new ObjectParameter("customerno", typeof(long));
    
            var rcustomernoParameter = rcustomerno.HasValue ?
                new ObjectParameter("rcustomerno", rcustomerno) :
                new ObjectParameter("rcustomerno", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var corpIdParameter = corpId.HasValue ?
                new ObjectParameter("CorpId", corpId) :
                new ObjectParameter("CorpId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var domesticregIdParameter = domesticregId.HasValue ?
                new ObjectParameter("DomesticregId", domesticregId) :
                new ObjectParameter("DomesticregId", typeof(int));
    
            var stateProvIdParameter = stateProvId.HasValue ?
                new ObjectParameter("StateProvId", stateProvId) :
                new ObjectParameter("StateProvId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var officeIdParameter = officeId.HasValue ?
                new ObjectParameter("OfficeId", officeId) :
                new ObjectParameter("OfficeId", typeof(int));
    
            var caseSeqNoParameter = caseSeqNo.HasValue ?
                new ObjectParameter("CaseSeqNo", caseSeqNo) :
                new ObjectParameter("CaseSeqNo", typeof(int));
    
            var histSeqNoParameter = histSeqNo.HasValue ?
                new ObjectParameter("HistSeqNo", histSeqNo) :
                new ObjectParameter("HistSeqNo", typeof(int));
    
            var language_IdParameter = language_Id.HasValue ?
                new ObjectParameter("Language_Id", language_Id) :
                new ObjectParameter("Language_Id", typeof(int));
    
            var getHistoricalParameter = getHistorical.HasValue ?
                new ObjectParameter("GetHistorical", getHistorical) :
                new ObjectParameter("GetHistorical", typeof(bool));
    
            var illustrationStatusCodeParameter = illustrationStatusCode != null ?
                new ObjectParameter("IllustrationStatusCode", illustrationStatusCode) :
                new ObjectParameter("IllustrationStatusCode", typeof(string));
    
            var tabFilterParameter = tabFilter != null ?
                new ObjectParameter("TabFilter", tabFilter) :
                new ObjectParameter("TabFilter", typeof(string));
    
            var agentNameIdParameter = agentNameId != null ?
                new ObjectParameter("AgentNameId", agentNameId) :
                new ObjectParameter("AgentNameId", typeof(string));
    
            var agentTypeParameter = agentType != null ?
                new ObjectParameter("AgentType", agentType) :
                new ObjectParameter("AgentType", typeof(string));
    
            var assignedSubscriberNameIdParameter = assignedSubscriberNameId != null ?
                new ObjectParameter("AssignedSubscriberNameId", assignedSubscriberNameId) :
                new ObjectParameter("AssignedSubscriberNameId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerPlandet_Old_Result>("sp_get_customerPlandet_Old", customerPlannoParameter, customernoParameter, rcustomernoParameter, userIdParameter, companyIdParameter, dateToParameter, dateFromParameter, corpIdParameter, regionIdParameter, countryIdParameter, domesticregIdParameter, stateProvIdParameter, cityIdParameter, officeIdParameter, caseSeqNoParameter, histSeqNoParameter, language_IdParameter, getHistoricalParameter, illustrationStatusCodeParameter, tabFilterParameter, agentNameIdParameter, agentTypeParameter, assignedSubscriberNameIdParameter);
        }
    
        public virtual ObjectResult<sp_get_customerPlandet_Result> sp_get_customerPlandet(Nullable<long> customerPlanno, Nullable<long> customerno, Nullable<long> rCustomerno, Nullable<int> userId, Nullable<int> companyId, Nullable<System.DateTime> dateTo, Nullable<System.DateTime> dateFrom, Nullable<int> corpId, Nullable<int> regionId, Nullable<int> countryId, Nullable<int> domesticregId, Nullable<int> stateProvId, Nullable<int> cityId, Nullable<int> officeId, Nullable<int> caseSeqNo, Nullable<int> histSeqNo, Nullable<int> language_Id, Nullable<bool> getHistorical, string illustrationStatusCode, string tabFilter, string agentNameId, string agentType, string assignedSubscriberNameId)
        {
            var customerPlannoParameter = customerPlanno.HasValue ?
                new ObjectParameter("CustomerPlanno", customerPlanno) :
                new ObjectParameter("CustomerPlanno", typeof(long));
    
            var customernoParameter = customerno.HasValue ?
                new ObjectParameter("Customerno", customerno) :
                new ObjectParameter("Customerno", typeof(long));
    
            var rCustomernoParameter = rCustomerno.HasValue ?
                new ObjectParameter("rCustomerno", rCustomerno) :
                new ObjectParameter("rCustomerno", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var corpIdParameter = corpId.HasValue ?
                new ObjectParameter("CorpId", corpId) :
                new ObjectParameter("CorpId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var domesticregIdParameter = domesticregId.HasValue ?
                new ObjectParameter("DomesticregId", domesticregId) :
                new ObjectParameter("DomesticregId", typeof(int));
    
            var stateProvIdParameter = stateProvId.HasValue ?
                new ObjectParameter("StateProvId", stateProvId) :
                new ObjectParameter("StateProvId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var officeIdParameter = officeId.HasValue ?
                new ObjectParameter("OfficeId", officeId) :
                new ObjectParameter("OfficeId", typeof(int));
    
            var caseSeqNoParameter = caseSeqNo.HasValue ?
                new ObjectParameter("CaseSeqNo", caseSeqNo) :
                new ObjectParameter("CaseSeqNo", typeof(int));
    
            var histSeqNoParameter = histSeqNo.HasValue ?
                new ObjectParameter("HistSeqNo", histSeqNo) :
                new ObjectParameter("HistSeqNo", typeof(int));
    
            var language_IdParameter = language_Id.HasValue ?
                new ObjectParameter("Language_Id", language_Id) :
                new ObjectParameter("Language_Id", typeof(int));
    
            var getHistoricalParameter = getHistorical.HasValue ?
                new ObjectParameter("GetHistorical", getHistorical) :
                new ObjectParameter("GetHistorical", typeof(bool));
    
            var illustrationStatusCodeParameter = illustrationStatusCode != null ?
                new ObjectParameter("IllustrationStatusCode", illustrationStatusCode) :
                new ObjectParameter("IllustrationStatusCode", typeof(string));
    
            var tabFilterParameter = tabFilter != null ?
                new ObjectParameter("TabFilter", tabFilter) :
                new ObjectParameter("TabFilter", typeof(string));
    
            var agentNameIdParameter = agentNameId != null ?
                new ObjectParameter("AgentNameId", agentNameId) :
                new ObjectParameter("AgentNameId", typeof(string));
    
            var agentTypeParameter = agentType != null ?
                new ObjectParameter("AgentType", agentType) :
                new ObjectParameter("AgentType", typeof(string));
    
            var assignedSubscriberNameIdParameter = assignedSubscriberNameId != null ?
                new ObjectParameter("AssignedSubscriberNameId", assignedSubscriberNameId) :
                new ObjectParameter("AssignedSubscriberNameId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_customerPlandet_Result>("sp_get_customerPlandet", customerPlannoParameter, customernoParameter, rCustomernoParameter, userIdParameter, companyIdParameter, dateToParameter, dateFromParameter, corpIdParameter, regionIdParameter, countryIdParameter, domesticregIdParameter, stateProvIdParameter, cityIdParameter, officeIdParameter, caseSeqNoParameter, histSeqNoParameter, language_IdParameter, getHistoricalParameter, illustrationStatusCodeParameter, tabFilterParameter, agentNameIdParameter, agentTypeParameter, assignedSubscriberNameIdParameter);
        }
    }
}
