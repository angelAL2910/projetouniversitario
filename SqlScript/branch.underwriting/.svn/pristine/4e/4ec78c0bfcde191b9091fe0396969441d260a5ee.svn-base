//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB.NewBusiness.ServicesApi.PolicyIllustrationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessageData", Namespace="http://schemas.datacontract.org/2004/07/ServicesApi.UnderWriting.Common.Model")]
    [System.SerializableAttribute()]
    public partial class ReturnMessageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ListMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WEB.NewBusiness.ServicesApi.PolicyIllustrationService.ReturnMessageData.StatusProcess StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ListMessage {
            get {
                return this.ListMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMessageField, value) != true)) {
                    this.ListMessageField = value;
                    this.RaisePropertyChanged("ListMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WEB.NewBusiness.ServicesApi.PolicyIllustrationService.ReturnMessageData.StatusProcess Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ReturnMessageData.StatusProcess", Namespace="http://schemas.datacontract.org/2004/07/ServicesApi.UnderWriting.Common.Model")]
        public enum StatusProcess : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Error = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Success = 1,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicesApi.PolicyIllustrationService.IPolicyIllustrationService")]
    public interface IPolicyIllustrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyIllustrationService/SetPolicyInformation", ReplyAction="http://tempuri.org/IPolicyIllustrationService/SetPolicyInformationResponse")]
        WEB.NewBusiness.ServicesApi.PolicyIllustrationService.ReturnMessageData SetPolicyInformation(string customerPlanNo, string corpId, string regionId, string countryId, string domesticregId, string stateProvId, string cityId, string officeId, string userId, string companyId, string projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPolicyIllustrationService/SetPolicyInformation", ReplyAction="http://tempuri.org/IPolicyIllustrationService/SetPolicyInformationResponse")]
        System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.PolicyIllustrationService.ReturnMessageData> SetPolicyInformationAsync(string customerPlanNo, string corpId, string regionId, string countryId, string domesticregId, string stateProvId, string cityId, string officeId, string userId, string companyId, string projectId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPolicyIllustrationServiceChannel : WEB.NewBusiness.ServicesApi.PolicyIllustrationService.IPolicyIllustrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PolicyIllustrationServiceClient : System.ServiceModel.ClientBase<WEB.NewBusiness.ServicesApi.PolicyIllustrationService.IPolicyIllustrationService>, WEB.NewBusiness.ServicesApi.PolicyIllustrationService.IPolicyIllustrationService {
        
        public PolicyIllustrationServiceClient() {
        }
        
        public PolicyIllustrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PolicyIllustrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyIllustrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PolicyIllustrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WEB.NewBusiness.ServicesApi.PolicyIllustrationService.ReturnMessageData SetPolicyInformation(string customerPlanNo, string corpId, string regionId, string countryId, string domesticregId, string stateProvId, string cityId, string officeId, string userId, string companyId, string projectId) {
            return base.Channel.SetPolicyInformation(customerPlanNo, corpId, regionId, countryId, domesticregId, stateProvId, cityId, officeId, userId, companyId, projectId);
        }
        
        public System.Threading.Tasks.Task<WEB.NewBusiness.ServicesApi.PolicyIllustrationService.ReturnMessageData> SetPolicyInformationAsync(string customerPlanNo, string corpId, string regionId, string countryId, string domesticregId, string stateProvId, string cityId, string officeId, string userId, string companyId, string projectId) {
            return base.Channel.SetPolicyInformationAsync(customerPlanNo, corpId, regionId, countryId, domesticregId, stateProvId, cityId, officeId, userId, companyId, projectId);
        }
    }
}
