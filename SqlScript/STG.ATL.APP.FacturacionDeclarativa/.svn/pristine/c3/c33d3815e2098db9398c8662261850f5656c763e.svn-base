//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Declarative.Invoicing.Data.EdmxModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Declarative_InvoicesEntities : DbContext
    {
        public Declarative_InvoicesEntities()
            : base("name=Declarative_InvoicesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SP_GET_QUEUE_Result> SP_GET_QUEUE(string policy, Nullable<System.DateTime> dateBilling)
        {
            var policyParameter = policy != null ?
                new ObjectParameter("Policy", policy) :
                new ObjectParameter("Policy", typeof(string));
    
            var dateBillingParameter = dateBilling.HasValue ?
                new ObjectParameter("DateBilling", dateBilling) :
                new ObjectParameter("DateBilling", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUEUE_Result>("SP_GET_QUEUE", policyParameter, dateBillingParameter);
        }
    
        public virtual ObjectResult<SP_SET_INVOICE_DETAIL_DATA_Result> SP_SET_INVOICE_DETAIL_DATA(Nullable<int> id, Nullable<int> invoice_Detail_Id, Nullable<int> item, string client_Name, Nullable<int> make_Id, string make_Name, Nullable<int> model_Id, string model_Name, Nullable<int> year, string chassis, string plate, Nullable<System.DateTime> date_Process, Nullable<decimal> amount, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var invoice_Detail_IdParameter = invoice_Detail_Id.HasValue ?
                new ObjectParameter("Invoice_Detail_Id", invoice_Detail_Id) :
                new ObjectParameter("Invoice_Detail_Id", typeof(int));
    
            var itemParameter = item.HasValue ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(int));
    
            var client_NameParameter = client_Name != null ?
                new ObjectParameter("Client_Name", client_Name) :
                new ObjectParameter("Client_Name", typeof(string));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            var make_NameParameter = make_Name != null ?
                new ObjectParameter("Make_Name", make_Name) :
                new ObjectParameter("Make_Name", typeof(string));
    
            var model_IdParameter = model_Id.HasValue ?
                new ObjectParameter("Model_Id", model_Id) :
                new ObjectParameter("Model_Id", typeof(int));
    
            var model_NameParameter = model_Name != null ?
                new ObjectParameter("Model_Name", model_Name) :
                new ObjectParameter("Model_Name", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var chassisParameter = chassis != null ?
                new ObjectParameter("Chassis", chassis) :
                new ObjectParameter("Chassis", typeof(string));
    
            var plateParameter = plate != null ?
                new ObjectParameter("Plate", plate) :
                new ObjectParameter("Plate", typeof(string));
    
            var date_ProcessParameter = date_Process.HasValue ?
                new ObjectParameter("Date_Process", date_Process) :
                new ObjectParameter("Date_Process", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_INVOICE_DETAIL_DATA_Result>("SP_SET_INVOICE_DETAIL_DATA", idParameter, invoice_Detail_IdParameter, itemParameter, client_NameParameter, make_IdParameter, make_NameParameter, model_IdParameter, model_NameParameter, yearParameter, chassisParameter, plateParameter, date_ProcessParameter, amountParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_SET_INVOICE_HEADER_DATA_Result> SP_SET_INVOICE_HEADER_DATA(Nullable<int> id, Nullable<long> coreQuotNumber, Nullable<int> secuenciaMov, string invoice_Number, Nullable<decimal> invoice_Amount, Nullable<System.DateTime> invoicing_Period, Nullable<System.DateTime> last_Exclusion, Nullable<System.DateTime> last_Inclusion, Nullable<int> user_Id, Nullable<System.DateTime> initial_Date, Nullable<System.DateTime> end_Date, Nullable<int> policyInfoId, Nullable<int> periodPolicyId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var coreQuotNumberParameter = coreQuotNumber.HasValue ?
                new ObjectParameter("CoreQuotNumber", coreQuotNumber) :
                new ObjectParameter("CoreQuotNumber", typeof(long));
    
            var secuenciaMovParameter = secuenciaMov.HasValue ?
                new ObjectParameter("SecuenciaMov", secuenciaMov) :
                new ObjectParameter("SecuenciaMov", typeof(int));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var invoice_AmountParameter = invoice_Amount.HasValue ?
                new ObjectParameter("Invoice_Amount", invoice_Amount) :
                new ObjectParameter("Invoice_Amount", typeof(decimal));
    
            var invoicing_PeriodParameter = invoicing_Period.HasValue ?
                new ObjectParameter("Invoicing_Period", invoicing_Period) :
                new ObjectParameter("Invoicing_Period", typeof(System.DateTime));
    
            var last_ExclusionParameter = last_Exclusion.HasValue ?
                new ObjectParameter("Last_Exclusion", last_Exclusion) :
                new ObjectParameter("Last_Exclusion", typeof(System.DateTime));
    
            var last_InclusionParameter = last_Inclusion.HasValue ?
                new ObjectParameter("Last_Inclusion", last_Inclusion) :
                new ObjectParameter("Last_Inclusion", typeof(System.DateTime));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var initial_DateParameter = initial_Date.HasValue ?
                new ObjectParameter("initial_Date", initial_Date) :
                new ObjectParameter("initial_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            var policyInfoIdParameter = policyInfoId.HasValue ?
                new ObjectParameter("PolicyInfoId", policyInfoId) :
                new ObjectParameter("PolicyInfoId", typeof(int));
    
            var periodPolicyIdParameter = periodPolicyId.HasValue ?
                new ObjectParameter("PeriodPolicyId", periodPolicyId) :
                new ObjectParameter("PeriodPolicyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_INVOICE_HEADER_DATA_Result>("SP_SET_INVOICE_HEADER_DATA", idParameter, coreQuotNumberParameter, secuenciaMovParameter, invoice_NumberParameter, invoice_AmountParameter, invoicing_PeriodParameter, last_ExclusionParameter, last_InclusionParameter, user_IdParameter, initial_DateParameter, end_DateParameter, policyInfoIdParameter, periodPolicyIdParameter);
        }
    
        public virtual int SP_SET_PERIOD_INVOICED(Nullable<int> policyInfoId, Nullable<int> periodId, Nullable<System.DateTime> processDate)
        {
            var policyInfoIdParameter = policyInfoId.HasValue ?
                new ObjectParameter("PolicyInfoId", policyInfoId) :
                new ObjectParameter("PolicyInfoId", typeof(int));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_PERIOD_INVOICED", policyInfoIdParameter, periodIdParameter, processDateParameter);
        }
    
        public virtual ObjectResult<SP_GET_PERIODS_Result> SP_GET_PERIODS(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PERIODS_Result>("SP_GET_PERIODS", dateParameter);
        }
    
        public virtual ObjectResult<SP_GET_HISTORIC_Result> SP_GET_HISTORIC(string policy)
        {
            var policyParameter = policy != null ?
                new ObjectParameter("Policy", policy) :
                new ObjectParameter("Policy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HISTORIC_Result>("SP_GET_HISTORIC", policyParameter);
        }
    }
}
