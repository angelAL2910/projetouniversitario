//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Declarative.Invoicing.THServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="THParams", Namespace="http://schemas.datacontract.org/2004/07/ThunderheadWSWrapper")]
    [System.SerializableAttribute()]
    public partial class THParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int batchCollectField;
        
        private int batchConfigResIDField;
        
        private string batchnameField;
        
        private int finOptionField;
        
        private int jobTypeField;
        
        private string passwordField;
        
        private int projectIDField;
        
        private string userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int batchCollect {
            get {
                return this.batchCollectField;
            }
            set {
                if ((this.batchCollectField.Equals(value) != true)) {
                    this.batchCollectField = value;
                    this.RaisePropertyChanged("batchCollect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int batchConfigResID {
            get {
                return this.batchConfigResIDField;
            }
            set {
                if ((this.batchConfigResIDField.Equals(value) != true)) {
                    this.batchConfigResIDField = value;
                    this.RaisePropertyChanged("batchConfigResID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string batchname {
            get {
                return this.batchnameField;
            }
            set {
                if ((object.ReferenceEquals(this.batchnameField, value) != true)) {
                    this.batchnameField = value;
                    this.RaisePropertyChanged("batchname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int finOption {
            get {
                return this.finOptionField;
            }
            set {
                if ((this.finOptionField.Equals(value) != true)) {
                    this.finOptionField = value;
                    this.RaisePropertyChanged("finOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int jobType {
            get {
                return this.jobTypeField;
            }
            set {
                if ((this.jobTypeField.Equals(value) != true)) {
                    this.jobTypeField = value;
                    this.RaisePropertyChanged("jobType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int projectID {
            get {
                return this.projectIDField;
            }
            set {
                if ((this.projectIDField.Equals(value) != true)) {
                    this.projectIDField = value;
                    this.RaisePropertyChanged("projectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChannelDocumentWrapper", Namespace="http://schemas.datacontract.org/2004/07/ThunderheadWSWrapper")]
    [System.SerializableAttribute()]
    public partial class ChannelDocumentWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] XmlbinaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatString {
            get {
                return this.FormatStringField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatStringField, value) != true)) {
                    this.FormatStringField = value;
                    this.RaisePropertyChanged("FormatString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Xmlbinary {
            get {
                return this.XmlbinaryField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlbinaryField, value) != true)) {
                    this.XmlbinaryField = value;
                    this.RaisePropertyChanged("Xmlbinary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="THServices.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/executePreview", ReplyAction="http://tempuri.org/IWCFService/executePreviewResponse")]
        Declarative.Invoicing.THServices.ChannelDocumentWrapper[] executePreview(Declarative.Invoicing.THServices.THParams parameters, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/executePreview", ReplyAction="http://tempuri.org/IWCFService/executePreviewResponse")]
        System.Threading.Tasks.Task<Declarative.Invoicing.THServices.ChannelDocumentWrapper[]> executePreviewAsync(Declarative.Invoicing.THServices.THParams parameters, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/submitBatch", ReplyAction="http://tempuri.org/IWCFService/submitBatchResponse")]
        int submitBatch(Declarative.Invoicing.THServices.THParams parameters, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/submitBatch", ReplyAction="http://tempuri.org/IWCFService/submitBatchResponse")]
        System.Threading.Tasks.Task<int> submitBatchAsync(Declarative.Invoicing.THServices.THParams parameters, byte[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : Declarative.Invoicing.THServices.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<Declarative.Invoicing.THServices.IWCFService>, Declarative.Invoicing.THServices.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Declarative.Invoicing.THServices.ChannelDocumentWrapper[] executePreview(Declarative.Invoicing.THServices.THParams parameters, byte[] data) {
            return base.Channel.executePreview(parameters, data);
        }
        
        public System.Threading.Tasks.Task<Declarative.Invoicing.THServices.ChannelDocumentWrapper[]> executePreviewAsync(Declarative.Invoicing.THServices.THParams parameters, byte[] data) {
            return base.Channel.executePreviewAsync(parameters, data);
        }
        
        public int submitBatch(Declarative.Invoicing.THServices.THParams parameters, byte[] data) {
            return base.Channel.submitBatch(parameters, data);
        }
        
        public System.Threading.Tasks.Task<int> submitBatchAsync(Declarative.Invoicing.THServices.THParams parameters, byte[] data) {
            return base.Channel.submitBatchAsync(parameters, data);
        }
    }
}
