//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STL.CALLBACK.Data.EdmxModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class POS_SITEEntities : DbContext
    {
        public POS_SITEEntities()
            : base("name=POS_SITEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SP_FILL_DROP_DOWN_Result> SP_FILL_DROP_DOWN(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FILL_DROP_DOWN_Result>("SP_FILL_DROP_DOWN", filtroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SET_CALL_BACK_LOG(string firstName, string secondName, Nullable<int> phoneType, string phoneNumber, string reference)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var secondNameParameter = secondName != null ?
                new ObjectParameter("SecondName", secondName) :
                new ObjectParameter("SecondName", typeof(string));
    
            var phoneTypeParameter = phoneType.HasValue ?
                new ObjectParameter("PhoneType", phoneType) :
                new ObjectParameter("PhoneType", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SET_CALL_BACK_LOG", firstNameParameter, secondNameParameter, phoneTypeParameter, phoneNumberParameter, referenceParameter);
        }
    
        public virtual ObjectResult<SP_GET_PARAMETERS_Result> SP_GET_PARAMETERS(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PARAMETERS_Result>("SP_GET_PARAMETERS", nameParameter);
        }
    
        public virtual int SP_SET_LOG_VISITS(Nullable<int> contactFormId, string iP, string iPInfo, string system)
        {
            var contactFormIdParameter = contactFormId.HasValue ?
                new ObjectParameter("ContactFormId", contactFormId) :
                new ObjectParameter("ContactFormId", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var iPInfoParameter = iPInfo != null ?
                new ObjectParameter("IPInfo", iPInfo) :
                new ObjectParameter("IPInfo", typeof(string));
    
            var systemParameter = system != null ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_LOG_VISITS", contactFormIdParameter, iPParameter, iPInfoParameter, systemParameter);
        }
    }
}
