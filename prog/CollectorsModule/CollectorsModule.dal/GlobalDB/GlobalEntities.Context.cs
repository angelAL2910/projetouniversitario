//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CollectorsModule.dal.GlobalDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GlobalEntities : DbContext
    {
        public GlobalEntities()
            : base("name=GlobalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ST_BANK_ACCOUNT_TYPE> ST_BANK_ACCOUNT_TYPE { get; set; }
        public virtual DbSet<vwClient> vwClients { get; set; }
        public virtual DbSet<ST_CARD_TYPE> ST_CARD_TYPE { get; set; }
        public virtual DbSet<ST_CURRENCY> ST_CURRENCY { get; set; }
        public virtual DbSet<ST_BUSINESS_LINE> ST_BUSINESS_LINE { get; set; }
        public virtual DbSet<ST_PRODUCT> ST_PRODUCT { get; set; }
        public virtual DbSet<VW_COLLECTORS_POLICIES_BY_CONTACTID> VW_COLLECTORS_POLICIES_BY_CONTACTID { get; set; }
        public virtual DbSet<VW_GET_TRANSLATE> VW_GET_TRANSLATE { get; set; }
        public virtual DbSet<VW_GET_PAYMENT_HISTORY> VW_GET_PAYMENT_HISTORY { get; set; }
        public virtual DbSet<VWSecurityUser> VWSecurityUsers { get; set; }
    
        public virtual ObjectResult<SPC_GET_PAYMENT_HISTORY_WITH_FILTERS_Result> SPC_GET_PAYMENT_HISTORY_WITH_FILTERS(Nullable<int> corp_Id, Nullable<int> region_Id, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> city_Id, Nullable<int> office_Id, Nullable<int> case_Seq_No, Nullable<int> hist_Seq_No, Nullable<System.DateTime> fromTransaction_Date, Nullable<System.DateTime> toTransaction_Date, Nullable<int> userId, string policy_No, string office_Desc, string bl_Desc, string currency_Desc)
        {
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var region_IdParameter = region_Id.HasValue ?
                new ObjectParameter("Region_Id", region_Id) :
                new ObjectParameter("Region_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var office_IdParameter = office_Id.HasValue ?
                new ObjectParameter("Office_Id", office_Id) :
                new ObjectParameter("Office_Id", typeof(int));
    
            var case_Seq_NoParameter = case_Seq_No.HasValue ?
                new ObjectParameter("Case_Seq_No", case_Seq_No) :
                new ObjectParameter("Case_Seq_No", typeof(int));
    
            var hist_Seq_NoParameter = hist_Seq_No.HasValue ?
                new ObjectParameter("Hist_Seq_No", hist_Seq_No) :
                new ObjectParameter("Hist_Seq_No", typeof(int));
    
            var fromTransaction_DateParameter = fromTransaction_Date.HasValue ?
                new ObjectParameter("FromTransaction_Date", fromTransaction_Date) :
                new ObjectParameter("FromTransaction_Date", typeof(System.DateTime));
    
            var toTransaction_DateParameter = toTransaction_Date.HasValue ?
                new ObjectParameter("ToTransaction_Date", toTransaction_Date) :
                new ObjectParameter("ToTransaction_Date", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var policy_NoParameter = policy_No != null ?
                new ObjectParameter("Policy_No", policy_No) :
                new ObjectParameter("Policy_No", typeof(string));
    
            var office_DescParameter = office_Desc != null ?
                new ObjectParameter("Office_Desc", office_Desc) :
                new ObjectParameter("Office_Desc", typeof(string));
    
            var bl_DescParameter = bl_Desc != null ?
                new ObjectParameter("Bl_Desc", bl_Desc) :
                new ObjectParameter("Bl_Desc", typeof(string));
    
            var currency_DescParameter = currency_Desc != null ?
                new ObjectParameter("Currency_Desc", currency_Desc) :
                new ObjectParameter("Currency_Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_PAYMENT_HISTORY_WITH_FILTERS_Result>("SPC_GET_PAYMENT_HISTORY_WITH_FILTERS", corp_IdParameter, region_IdParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, city_IdParameter, office_IdParameter, case_Seq_NoParameter, hist_Seq_NoParameter, fromTransaction_DateParameter, toTransaction_DateParameter, userIdParameter, policy_NoParameter, office_DescParameter, bl_DescParameter, currency_DescParameter);
        }
    
        public virtual ObjectResult<SP_SET_PM_PROVIDER_TRANSACTION_INFO_KEY_Result> SP_SET_PM_PROVIDER_TRANSACTION_INFO_KEY(Nullable<int> provider_Id, Nullable<int> transaction_Type_Catalog_Id, Nullable<int> provider_Transaction_Type_Id, Nullable<int> userId)
        {
            var provider_IdParameter = provider_Id.HasValue ?
                new ObjectParameter("Provider_Id", provider_Id) :
                new ObjectParameter("Provider_Id", typeof(int));
    
            var transaction_Type_Catalog_IdParameter = transaction_Type_Catalog_Id.HasValue ?
                new ObjectParameter("Transaction_Type_Catalog_Id", transaction_Type_Catalog_Id) :
                new ObjectParameter("Transaction_Type_Catalog_Id", typeof(int));
    
            var provider_Transaction_Type_IdParameter = provider_Transaction_Type_Id.HasValue ?
                new ObjectParameter("Provider_Transaction_Type_Id", provider_Transaction_Type_Id) :
                new ObjectParameter("Provider_Transaction_Type_Id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_PM_PROVIDER_TRANSACTION_INFO_KEY_Result>("SP_SET_PM_PROVIDER_TRANSACTION_INFO_KEY", provider_IdParameter, transaction_Type_Catalog_IdParameter, provider_Transaction_Type_IdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_PM_PROVIDER_PARAMETER_Result> SP_GET_PM_PROVIDER_PARAMETER(Nullable<int> provider_Id, Nullable<int> transaction_Type_Catalog_Id, Nullable<int> provider_Transaction_Type_Id)
        {
            var provider_IdParameter = provider_Id.HasValue ?
                new ObjectParameter("Provider_Id", provider_Id) :
                new ObjectParameter("Provider_Id", typeof(int));
    
            var transaction_Type_Catalog_IdParameter = transaction_Type_Catalog_Id.HasValue ?
                new ObjectParameter("Transaction_Type_Catalog_Id", transaction_Type_Catalog_Id) :
                new ObjectParameter("Transaction_Type_Catalog_Id", typeof(int));
    
            var provider_Transaction_Type_IdParameter = provider_Transaction_Type_Id.HasValue ?
                new ObjectParameter("Provider_Transaction_Type_Id", provider_Transaction_Type_Id) :
                new ObjectParameter("Provider_Transaction_Type_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PM_PROVIDER_PARAMETER_Result>("SP_GET_PM_PROVIDER_PARAMETER", provider_IdParameter, transaction_Type_Catalog_IdParameter, provider_Transaction_Type_IdParameter);
        }
    
        public virtual ObjectResult<SP_SET_PM_PROVIDER_TRANSACTION_Result> SP_SET_PM_PROVIDER_TRANSACTION(Nullable<int> provider_Id, Nullable<long> transaction_Key_Id, Nullable<int> transaction_Type_Catalog_Id, Nullable<int> provider_Transaction_Type_Id, string transaction_Id, Nullable<System.DateTime> transaction_Date, string credit_Card_Number, string credit_Card_Expiration_Date, Nullable<decimal> amount, Nullable<decimal> tax, string response_Code, string authorization_Code, string retrieval_Reference_Number, string order_Id, string transaction_Extra_Data, Nullable<int> userId)
        {
            var provider_IdParameter = provider_Id.HasValue ?
                new ObjectParameter("Provider_Id", provider_Id) :
                new ObjectParameter("Provider_Id", typeof(int));
    
            var transaction_Key_IdParameter = transaction_Key_Id.HasValue ?
                new ObjectParameter("Transaction_Key_Id", transaction_Key_Id) :
                new ObjectParameter("Transaction_Key_Id", typeof(long));
    
            var transaction_Type_Catalog_IdParameter = transaction_Type_Catalog_Id.HasValue ?
                new ObjectParameter("Transaction_Type_Catalog_Id", transaction_Type_Catalog_Id) :
                new ObjectParameter("Transaction_Type_Catalog_Id", typeof(int));
    
            var provider_Transaction_Type_IdParameter = provider_Transaction_Type_Id.HasValue ?
                new ObjectParameter("Provider_Transaction_Type_Id", provider_Transaction_Type_Id) :
                new ObjectParameter("Provider_Transaction_Type_Id", typeof(int));
    
            var transaction_IdParameter = transaction_Id != null ?
                new ObjectParameter("Transaction_Id", transaction_Id) :
                new ObjectParameter("Transaction_Id", typeof(string));
    
            var transaction_DateParameter = transaction_Date.HasValue ?
                new ObjectParameter("Transaction_Date", transaction_Date) :
                new ObjectParameter("Transaction_Date", typeof(System.DateTime));
    
            var credit_Card_NumberParameter = credit_Card_Number != null ?
                new ObjectParameter("Credit_Card_Number", credit_Card_Number) :
                new ObjectParameter("Credit_Card_Number", typeof(string));
    
            var credit_Card_Expiration_DateParameter = credit_Card_Expiration_Date != null ?
                new ObjectParameter("Credit_Card_Expiration_Date", credit_Card_Expiration_Date) :
                new ObjectParameter("Credit_Card_Expiration_Date", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var response_CodeParameter = response_Code != null ?
                new ObjectParameter("Response_Code", response_Code) :
                new ObjectParameter("Response_Code", typeof(string));
    
            var authorization_CodeParameter = authorization_Code != null ?
                new ObjectParameter("Authorization_Code", authorization_Code) :
                new ObjectParameter("Authorization_Code", typeof(string));
    
            var retrieval_Reference_NumberParameter = retrieval_Reference_Number != null ?
                new ObjectParameter("Retrieval_Reference_Number", retrieval_Reference_Number) :
                new ObjectParameter("Retrieval_Reference_Number", typeof(string));
    
            var order_IdParameter = order_Id != null ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(string));
    
            var transaction_Extra_DataParameter = transaction_Extra_Data != null ?
                new ObjectParameter("Transaction_Extra_Data", transaction_Extra_Data) :
                new ObjectParameter("Transaction_Extra_Data", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_PM_PROVIDER_TRANSACTION_Result>("SP_SET_PM_PROVIDER_TRANSACTION", provider_IdParameter, transaction_Key_IdParameter, transaction_Type_Catalog_IdParameter, provider_Transaction_Type_IdParameter, transaction_IdParameter, transaction_DateParameter, credit_Card_NumberParameter, credit_Card_Expiration_DateParameter, amountParameter, taxParameter, response_CodeParameter, authorization_CodeParameter, retrieval_Reference_NumberParameter, order_IdParameter, transaction_Extra_DataParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_PM_PROVIDER_LOG_Result> SP_GET_PM_PROVIDER_LOG(string order_Id)
        {
            var order_IdParameter = order_Id != null ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PM_PROVIDER_LOG_Result>("SP_GET_PM_PROVIDER_LOG", order_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_INSERT_PM_PROVIDER_LOG(Nullable<int> log_Type_Id, Nullable<int> corp_Id, Nullable<int> company_Id, Nullable<int> project_Id, string order_Id, string log_Desc)
        {
            var log_Type_IdParameter = log_Type_Id.HasValue ?
                new ObjectParameter("Log_Type_Id", log_Type_Id) :
                new ObjectParameter("Log_Type_Id", typeof(int));
    
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var company_IdParameter = company_Id.HasValue ?
                new ObjectParameter("Company_Id", company_Id) :
                new ObjectParameter("Company_Id", typeof(int));
    
            var project_IdParameter = project_Id.HasValue ?
                new ObjectParameter("Project_Id", project_Id) :
                new ObjectParameter("Project_Id", typeof(int));
    
            var order_IdParameter = order_Id != null ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(string));
    
            var log_DescParameter = log_Desc != null ?
                new ObjectParameter("Log_Desc", log_Desc) :
                new ObjectParameter("Log_Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_INSERT_PM_PROVIDER_LOG", log_Type_IdParameter, corp_IdParameter, company_IdParameter, project_IdParameter, order_IdParameter, log_DescParameter);
        }
    
        public virtual ObjectResult<SP_GET_PM_PROVIDER_TRANSACTION_BY_ORDERID_Result> SP_GET_PM_PROVIDER_TRANSACTION_BY_ORDERID(string order_Id)
        {
            var order_IdParameter = order_Id != null ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PM_PROVIDER_TRANSACTION_BY_ORDERID_Result>("SP_GET_PM_PROVIDER_TRANSACTION_BY_ORDERID", order_IdParameter);
        }
    
        public virtual ObjectResult<SP_SET_PM_PAYMENTS_Result> SP_SET_PM_PAYMENTS(Nullable<int> corp_Id, Nullable<int> region_Id, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> city_Id, Nullable<int> office_Id, Nullable<int> case_Seq_No, Nullable<int> hist_Seq_No, Nullable<int> payment_Id, Nullable<decimal> due_Amount, Nullable<decimal> periodic_Premium_Amount, Nullable<decimal> base_Premium, Nullable<decimal> exceptional_premium, Nullable<decimal> exceptional_premium2, Nullable<decimal> base_Commision, Nullable<decimal> base_Commision2, Nullable<decimal> exceptional_Commisions, Nullable<decimal> exceptional2_Commisions, Nullable<System.DateTime> due_Date, Nullable<System.DateTime> paid_Date, Nullable<decimal> paid_Amount, Nullable<int> payment_Status_Id, Nullable<int> userId)
        {
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var region_IdParameter = region_Id.HasValue ?
                new ObjectParameter("Region_Id", region_Id) :
                new ObjectParameter("Region_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var office_IdParameter = office_Id.HasValue ?
                new ObjectParameter("Office_Id", office_Id) :
                new ObjectParameter("Office_Id", typeof(int));
    
            var case_Seq_NoParameter = case_Seq_No.HasValue ?
                new ObjectParameter("Case_Seq_No", case_Seq_No) :
                new ObjectParameter("Case_Seq_No", typeof(int));
    
            var hist_Seq_NoParameter = hist_Seq_No.HasValue ?
                new ObjectParameter("Hist_Seq_No", hist_Seq_No) :
                new ObjectParameter("Hist_Seq_No", typeof(int));
    
            var payment_IdParameter = payment_Id.HasValue ?
                new ObjectParameter("Payment_Id", payment_Id) :
                new ObjectParameter("Payment_Id", typeof(int));
    
            var due_AmountParameter = due_Amount.HasValue ?
                new ObjectParameter("Due_Amount", due_Amount) :
                new ObjectParameter("Due_Amount", typeof(decimal));
    
            var periodic_Premium_AmountParameter = periodic_Premium_Amount.HasValue ?
                new ObjectParameter("Periodic_Premium_Amount", periodic_Premium_Amount) :
                new ObjectParameter("Periodic_Premium_Amount", typeof(decimal));
    
            var base_PremiumParameter = base_Premium.HasValue ?
                new ObjectParameter("Base_Premium", base_Premium) :
                new ObjectParameter("Base_Premium", typeof(decimal));
    
            var exceptional_premiumParameter = exceptional_premium.HasValue ?
                new ObjectParameter("Exceptional_premium", exceptional_premium) :
                new ObjectParameter("Exceptional_premium", typeof(decimal));
    
            var exceptional_premium2Parameter = exceptional_premium2.HasValue ?
                new ObjectParameter("Exceptional_premium2", exceptional_premium2) :
                new ObjectParameter("Exceptional_premium2", typeof(decimal));
    
            var base_CommisionParameter = base_Commision.HasValue ?
                new ObjectParameter("Base_Commision", base_Commision) :
                new ObjectParameter("Base_Commision", typeof(decimal));
    
            var base_Commision2Parameter = base_Commision2.HasValue ?
                new ObjectParameter("Base_Commision2", base_Commision2) :
                new ObjectParameter("Base_Commision2", typeof(decimal));
    
            var exceptional_CommisionsParameter = exceptional_Commisions.HasValue ?
                new ObjectParameter("Exceptional_Commisions", exceptional_Commisions) :
                new ObjectParameter("Exceptional_Commisions", typeof(decimal));
    
            var exceptional2_CommisionsParameter = exceptional2_Commisions.HasValue ?
                new ObjectParameter("Exceptional2_Commisions", exceptional2_Commisions) :
                new ObjectParameter("Exceptional2_Commisions", typeof(decimal));
    
            var due_DateParameter = due_Date.HasValue ?
                new ObjectParameter("Due_Date", due_Date) :
                new ObjectParameter("Due_Date", typeof(System.DateTime));
    
            var paid_DateParameter = paid_Date.HasValue ?
                new ObjectParameter("Paid_Date", paid_Date) :
                new ObjectParameter("Paid_Date", typeof(System.DateTime));
    
            var paid_AmountParameter = paid_Amount.HasValue ?
                new ObjectParameter("Paid_Amount", paid_Amount) :
                new ObjectParameter("Paid_Amount", typeof(decimal));
    
            var payment_Status_IdParameter = payment_Status_Id.HasValue ?
                new ObjectParameter("Payment_Status_Id", payment_Status_Id) :
                new ObjectParameter("Payment_Status_Id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_PM_PAYMENTS_Result>("SP_SET_PM_PAYMENTS", corp_IdParameter, region_IdParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, city_IdParameter, office_IdParameter, case_Seq_NoParameter, hist_Seq_NoParameter, payment_IdParameter, due_AmountParameter, periodic_Premium_AmountParameter, base_PremiumParameter, exceptional_premiumParameter, exceptional_premium2Parameter, base_CommisionParameter, base_Commision2Parameter, exceptional_CommisionsParameter, exceptional2_CommisionsParameter, due_DateParameter, paid_DateParameter, paid_AmountParameter, payment_Status_IdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_PM_PAYMENTS_DETAILS_ALL_Result> SP_SET_PM_PAYMENTS_DETAILS_ALL(Nullable<int> corp_Id, Nullable<int> region_Id, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> city_Id, Nullable<int> office_Id, Nullable<int> case_Seq_No, Nullable<int> hist_Seq_No, Nullable<int> payment_Id, Nullable<int> relationship_To_Owner_Or_Insured, Nullable<int> paymentDet_Id, Nullable<int> receipt_Type_Id, Nullable<int> payment_Source_Type_Id, Nullable<int> payment_Source_Id, Nullable<int> account_Type_Id, Nullable<int> payment_Control_Id, string payment_Detail_Source_Id, Nullable<int> currency_Id, Nullable<int> doc_Type_Id, Nullable<int> doc_Category_Id, Nullable<int> document_Id, Nullable<decimal> origin_Credit_Amount, Nullable<decimal> origin_Debit_Amount, Nullable<decimal> usd_Credit_Amount, Nullable<decimal> usd_Debit_Amount, Nullable<decimal> rate, Nullable<System.DateTime> transaction_Date, Nullable<System.DateTime> due_Date, Nullable<decimal> posted_Amount, Nullable<System.DateTime> posted_Date, Nullable<System.DateTime> receipt_Date, string transaction_Description, string transaction_Reference, Nullable<System.DateTime> eFT_Date, string eFT_ABA_Number, string eFT_Account_Number, string eFT_Account_Holder, string eFT_Account_Holder_Source, string other_Description, string result_Code, string order_Id, Nullable<int> payment_Status_Id, Nullable<bool> payment_Status, Nullable<int> seq_No, Nullable<int> type_Id, Nullable<System.DateTime> effective_Date, Nullable<System.DateTime> expire_Date, string number, string control_Digit, string name, Nullable<bool> status, Nullable<int> userId)
        {
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var region_IdParameter = region_Id.HasValue ?
                new ObjectParameter("Region_Id", region_Id) :
                new ObjectParameter("Region_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var office_IdParameter = office_Id.HasValue ?
                new ObjectParameter("Office_Id", office_Id) :
                new ObjectParameter("Office_Id", typeof(int));
    
            var case_Seq_NoParameter = case_Seq_No.HasValue ?
                new ObjectParameter("Case_Seq_No", case_Seq_No) :
                new ObjectParameter("Case_Seq_No", typeof(int));
    
            var hist_Seq_NoParameter = hist_Seq_No.HasValue ?
                new ObjectParameter("Hist_Seq_No", hist_Seq_No) :
                new ObjectParameter("Hist_Seq_No", typeof(int));
    
            var payment_IdParameter = payment_Id.HasValue ?
                new ObjectParameter("Payment_Id", payment_Id) :
                new ObjectParameter("Payment_Id", typeof(int));
    
            var relationship_To_Owner_Or_InsuredParameter = relationship_To_Owner_Or_Insured.HasValue ?
                new ObjectParameter("Relationship_To_Owner_Or_Insured", relationship_To_Owner_Or_Insured) :
                new ObjectParameter("Relationship_To_Owner_Or_Insured", typeof(int));
    
            var paymentDet_IdParameter = paymentDet_Id.HasValue ?
                new ObjectParameter("PaymentDet_Id", paymentDet_Id) :
                new ObjectParameter("PaymentDet_Id", typeof(int));
    
            var receipt_Type_IdParameter = receipt_Type_Id.HasValue ?
                new ObjectParameter("Receipt_Type_Id", receipt_Type_Id) :
                new ObjectParameter("Receipt_Type_Id", typeof(int));
    
            var payment_Source_Type_IdParameter = payment_Source_Type_Id.HasValue ?
                new ObjectParameter("Payment_Source_Type_Id", payment_Source_Type_Id) :
                new ObjectParameter("Payment_Source_Type_Id", typeof(int));
    
            var payment_Source_IdParameter = payment_Source_Id.HasValue ?
                new ObjectParameter("Payment_Source_Id", payment_Source_Id) :
                new ObjectParameter("Payment_Source_Id", typeof(int));
    
            var account_Type_IdParameter = account_Type_Id.HasValue ?
                new ObjectParameter("Account_Type_Id", account_Type_Id) :
                new ObjectParameter("Account_Type_Id", typeof(int));
    
            var payment_Control_IdParameter = payment_Control_Id.HasValue ?
                new ObjectParameter("Payment_Control_Id", payment_Control_Id) :
                new ObjectParameter("Payment_Control_Id", typeof(int));
    
            var payment_Detail_Source_IdParameter = payment_Detail_Source_Id != null ?
                new ObjectParameter("Payment_Detail_Source_Id", payment_Detail_Source_Id) :
                new ObjectParameter("Payment_Detail_Source_Id", typeof(string));
    
            var currency_IdParameter = currency_Id.HasValue ?
                new ObjectParameter("Currency_Id", currency_Id) :
                new ObjectParameter("Currency_Id", typeof(int));
    
            var doc_Type_IdParameter = doc_Type_Id.HasValue ?
                new ObjectParameter("Doc_Type_Id", doc_Type_Id) :
                new ObjectParameter("Doc_Type_Id", typeof(int));
    
            var doc_Category_IdParameter = doc_Category_Id.HasValue ?
                new ObjectParameter("Doc_Category_Id", doc_Category_Id) :
                new ObjectParameter("Doc_Category_Id", typeof(int));
    
            var document_IdParameter = document_Id.HasValue ?
                new ObjectParameter("Document_Id", document_Id) :
                new ObjectParameter("Document_Id", typeof(int));
    
            var origin_Credit_AmountParameter = origin_Credit_Amount.HasValue ?
                new ObjectParameter("Origin_Credit_Amount", origin_Credit_Amount) :
                new ObjectParameter("Origin_Credit_Amount", typeof(decimal));
    
            var origin_Debit_AmountParameter = origin_Debit_Amount.HasValue ?
                new ObjectParameter("Origin_Debit_Amount", origin_Debit_Amount) :
                new ObjectParameter("Origin_Debit_Amount", typeof(decimal));
    
            var usd_Credit_AmountParameter = usd_Credit_Amount.HasValue ?
                new ObjectParameter("Usd_Credit_Amount", usd_Credit_Amount) :
                new ObjectParameter("Usd_Credit_Amount", typeof(decimal));
    
            var usd_Debit_AmountParameter = usd_Debit_Amount.HasValue ?
                new ObjectParameter("Usd_Debit_Amount", usd_Debit_Amount) :
                new ObjectParameter("Usd_Debit_Amount", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var transaction_DateParameter = transaction_Date.HasValue ?
                new ObjectParameter("Transaction_Date", transaction_Date) :
                new ObjectParameter("Transaction_Date", typeof(System.DateTime));
    
            var due_DateParameter = due_Date.HasValue ?
                new ObjectParameter("Due_Date", due_Date) :
                new ObjectParameter("Due_Date", typeof(System.DateTime));
    
            var posted_AmountParameter = posted_Amount.HasValue ?
                new ObjectParameter("Posted_Amount", posted_Amount) :
                new ObjectParameter("Posted_Amount", typeof(decimal));
    
            var posted_DateParameter = posted_Date.HasValue ?
                new ObjectParameter("Posted_Date", posted_Date) :
                new ObjectParameter("Posted_Date", typeof(System.DateTime));
    
            var receipt_DateParameter = receipt_Date.HasValue ?
                new ObjectParameter("Receipt_Date", receipt_Date) :
                new ObjectParameter("Receipt_Date", typeof(System.DateTime));
    
            var transaction_DescriptionParameter = transaction_Description != null ?
                new ObjectParameter("Transaction_Description", transaction_Description) :
                new ObjectParameter("Transaction_Description", typeof(string));
    
            var transaction_ReferenceParameter = transaction_Reference != null ?
                new ObjectParameter("Transaction_Reference", transaction_Reference) :
                new ObjectParameter("Transaction_Reference", typeof(string));
    
            var eFT_DateParameter = eFT_Date.HasValue ?
                new ObjectParameter("EFT_Date", eFT_Date) :
                new ObjectParameter("EFT_Date", typeof(System.DateTime));
    
            var eFT_ABA_NumberParameter = eFT_ABA_Number != null ?
                new ObjectParameter("EFT_ABA_Number", eFT_ABA_Number) :
                new ObjectParameter("EFT_ABA_Number", typeof(string));
    
            var eFT_Account_NumberParameter = eFT_Account_Number != null ?
                new ObjectParameter("EFT_Account_Number", eFT_Account_Number) :
                new ObjectParameter("EFT_Account_Number", typeof(string));
    
            var eFT_Account_HolderParameter = eFT_Account_Holder != null ?
                new ObjectParameter("EFT_Account_Holder", eFT_Account_Holder) :
                new ObjectParameter("EFT_Account_Holder", typeof(string));
    
            var eFT_Account_Holder_SourceParameter = eFT_Account_Holder_Source != null ?
                new ObjectParameter("EFT_Account_Holder_Source", eFT_Account_Holder_Source) :
                new ObjectParameter("EFT_Account_Holder_Source", typeof(string));
    
            var other_DescriptionParameter = other_Description != null ?
                new ObjectParameter("Other_Description", other_Description) :
                new ObjectParameter("Other_Description", typeof(string));
    
            var result_CodeParameter = result_Code != null ?
                new ObjectParameter("Result_Code", result_Code) :
                new ObjectParameter("Result_Code", typeof(string));
    
            var order_IdParameter = order_Id != null ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(string));
    
            var payment_Status_IdParameter = payment_Status_Id.HasValue ?
                new ObjectParameter("Payment_Status_Id", payment_Status_Id) :
                new ObjectParameter("Payment_Status_Id", typeof(int));
    
            var payment_StatusParameter = payment_Status.HasValue ?
                new ObjectParameter("Payment_Status", payment_Status) :
                new ObjectParameter("Payment_Status", typeof(bool));
    
            var seq_NoParameter = seq_No.HasValue ?
                new ObjectParameter("Seq_No", seq_No) :
                new ObjectParameter("Seq_No", typeof(int));
    
            var type_IdParameter = type_Id.HasValue ?
                new ObjectParameter("Type_Id", type_Id) :
                new ObjectParameter("Type_Id", typeof(int));
    
            var effective_DateParameter = effective_Date.HasValue ?
                new ObjectParameter("Effective_Date", effective_Date) :
                new ObjectParameter("Effective_Date", typeof(System.DateTime));
    
            var expire_DateParameter = expire_Date.HasValue ?
                new ObjectParameter("Expire_Date", expire_Date) :
                new ObjectParameter("Expire_Date", typeof(System.DateTime));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var control_DigitParameter = control_Digit != null ?
                new ObjectParameter("Control_Digit", control_Digit) :
                new ObjectParameter("Control_Digit", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_PM_PAYMENTS_DETAILS_ALL_Result>("SP_SET_PM_PAYMENTS_DETAILS_ALL", corp_IdParameter, region_IdParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, city_IdParameter, office_IdParameter, case_Seq_NoParameter, hist_Seq_NoParameter, payment_IdParameter, relationship_To_Owner_Or_InsuredParameter, paymentDet_IdParameter, receipt_Type_IdParameter, payment_Source_Type_IdParameter, payment_Source_IdParameter, account_Type_IdParameter, payment_Control_IdParameter, payment_Detail_Source_IdParameter, currency_IdParameter, doc_Type_IdParameter, doc_Category_IdParameter, document_IdParameter, origin_Credit_AmountParameter, origin_Debit_AmountParameter, usd_Credit_AmountParameter, usd_Debit_AmountParameter, rateParameter, transaction_DateParameter, due_DateParameter, posted_AmountParameter, posted_DateParameter, receipt_DateParameter, transaction_DescriptionParameter, transaction_ReferenceParameter, eFT_DateParameter, eFT_ABA_NumberParameter, eFT_Account_NumberParameter, eFT_Account_HolderParameter, eFT_Account_Holder_SourceParameter, other_DescriptionParameter, result_CodeParameter, order_IdParameter, payment_Status_IdParameter, payment_StatusParameter, seq_NoParameter, type_IdParameter, effective_DateParameter, expire_DateParameter, numberParameter, control_DigitParameter, nameParameter, statusParameter, userIdParameter);
        }
    }
}
