//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace STG.DLL.KwikTag.Library.ktBarcode {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BarcodeSoap", Namespace="http://kwiktag.com/webservices/")]
    public partial class Barcode : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RetrieveNextOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrievePreviousOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveECoverOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveECoverPageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Barcode() {
            this.Url = global::STG.DLL.KwikTag.Library.Properties.Settings.Default.STG_DLL_KwikTag_Library_ktBarcode_Barcode;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RetrieveNextCompletedEventHandler RetrieveNextCompleted;
        
        /// <remarks/>
        public event RetrievePreviousCompletedEventHandler RetrievePreviousCompleted;
        
        /// <remarks/>
        public event RetrieveECoverCompletedEventHandler RetrieveECoverCompleted;
        
        /// <remarks/>
        public event RetrieveSystemCompletedEventHandler RetrieveSystemCompleted;
        
        /// <remarks/>
        public event RetrieveDetailsCompletedEventHandler RetrieveDetailsCompleted;
        
        /// <remarks/>
        public event RetrieveECoverPageCompletedEventHandler RetrieveECoverPageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kwiktag.com/webservices/RetrieveNext", RequestNamespace="http://kwiktag.com/webservices/", ResponseNamespace="http://kwiktag.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveNext(string CompanyID, string UserName, string Password, string Barcode) {
            object[] results = this.Invoke("RetrieveNext", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        Barcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveNextAsync(string CompanyID, string UserName, string Password, string Barcode) {
            this.RetrieveNextAsync(CompanyID, UserName, Password, Barcode, null);
        }
        
        /// <remarks/>
        public void RetrieveNextAsync(string CompanyID, string UserName, string Password, string Barcode, object userState) {
            if ((this.RetrieveNextOperationCompleted == null)) {
                this.RetrieveNextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveNextOperationCompleted);
            }
            this.InvokeAsync("RetrieveNext", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        Barcode}, this.RetrieveNextOperationCompleted, userState);
        }
        
        private void OnRetrieveNextOperationCompleted(object arg) {
            if ((this.RetrieveNextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveNextCompleted(this, new RetrieveNextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kwiktag.com/webservices/RetrievePrevious", RequestNamespace="http://kwiktag.com/webservices/", ResponseNamespace="http://kwiktag.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrievePrevious(string CompanyID, string UserName, string Password, string Barcode) {
            object[] results = this.Invoke("RetrievePrevious", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        Barcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrievePreviousAsync(string CompanyID, string UserName, string Password, string Barcode) {
            this.RetrievePreviousAsync(CompanyID, UserName, Password, Barcode, null);
        }
        
        /// <remarks/>
        public void RetrievePreviousAsync(string CompanyID, string UserName, string Password, string Barcode, object userState) {
            if ((this.RetrievePreviousOperationCompleted == null)) {
                this.RetrievePreviousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePreviousOperationCompleted);
            }
            this.InvokeAsync("RetrievePrevious", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        Barcode}, this.RetrievePreviousOperationCompleted, userState);
        }
        
        private void OnRetrievePreviousOperationCompleted(object arg) {
            if ((this.RetrievePreviousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePreviousCompleted(this, new RetrievePreviousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kwiktag.com/webservices/RetrieveECover", RequestNamespace="http://kwiktag.com/webservices/", ResponseNamespace="http://kwiktag.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveECover(string CompanyID, string UserName, string Password, bool GenerateBarcodeImage) {
            object[] results = this.Invoke("RetrieveECover", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        GenerateBarcodeImage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveECoverAsync(string CompanyID, string UserName, string Password, bool GenerateBarcodeImage) {
            this.RetrieveECoverAsync(CompanyID, UserName, Password, GenerateBarcodeImage, null);
        }
        
        /// <remarks/>
        public void RetrieveECoverAsync(string CompanyID, string UserName, string Password, bool GenerateBarcodeImage, object userState) {
            if ((this.RetrieveECoverOperationCompleted == null)) {
                this.RetrieveECoverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveECoverOperationCompleted);
            }
            this.InvokeAsync("RetrieveECover", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        GenerateBarcodeImage}, this.RetrieveECoverOperationCompleted, userState);
        }
        
        private void OnRetrieveECoverOperationCompleted(object arg) {
            if ((this.RetrieveECoverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveECoverCompleted(this, new RetrieveECoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kwiktag.com/webservices/RetrieveSystem", RequestNamespace="http://kwiktag.com/webservices/", ResponseNamespace="http://kwiktag.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveSystem(string CompanyID, string UserName, string Password, string BarcodeType, bool GenerateBarcodeImage) {
            object[] results = this.Invoke("RetrieveSystem", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        BarcodeType,
                        GenerateBarcodeImage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveSystemAsync(string CompanyID, string UserName, string Password, string BarcodeType, bool GenerateBarcodeImage) {
            this.RetrieveSystemAsync(CompanyID, UserName, Password, BarcodeType, GenerateBarcodeImage, null);
        }
        
        /// <remarks/>
        public void RetrieveSystemAsync(string CompanyID, string UserName, string Password, string BarcodeType, bool GenerateBarcodeImage, object userState) {
            if ((this.RetrieveSystemOperationCompleted == null)) {
                this.RetrieveSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveSystemOperationCompleted);
            }
            this.InvokeAsync("RetrieveSystem", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        BarcodeType,
                        GenerateBarcodeImage}, this.RetrieveSystemOperationCompleted, userState);
        }
        
        private void OnRetrieveSystemOperationCompleted(object arg) {
            if ((this.RetrieveSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveSystemCompleted(this, new RetrieveSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kwiktag.com/webservices/RetrieveDetails", RequestNamespace="http://kwiktag.com/webservices/", ResponseNamespace="http://kwiktag.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveDetails(string CompanyID, string UserName, string Password, string Barcode) {
            object[] results = this.Invoke("RetrieveDetails", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        Barcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDetailsAsync(string CompanyID, string UserName, string Password, string Barcode) {
            this.RetrieveDetailsAsync(CompanyID, UserName, Password, Barcode, null);
        }
        
        /// <remarks/>
        public void RetrieveDetailsAsync(string CompanyID, string UserName, string Password, string Barcode, object userState) {
            if ((this.RetrieveDetailsOperationCompleted == null)) {
                this.RetrieveDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDetailsOperationCompleted);
            }
            this.InvokeAsync("RetrieveDetails", new object[] {
                        CompanyID,
                        UserName,
                        Password,
                        Barcode}, this.RetrieveDetailsOperationCompleted, userState);
        }
        
        private void OnRetrieveDetailsOperationCompleted(object arg) {
            if ((this.RetrieveDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDetailsCompleted(this, new RetrieveDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kwiktag.com/webservices/RetrieveECoverPage", RequestNamespace="http://kwiktag.com/webservices/", ResponseNamespace="http://kwiktag.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveECoverPage(string Barcode, int ExpectedPageCount, string CustomFieldsXML) {
            object[] results = this.Invoke("RetrieveECoverPage", new object[] {
                        Barcode,
                        ExpectedPageCount,
                        CustomFieldsXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveECoverPageAsync(string Barcode, int ExpectedPageCount, string CustomFieldsXML) {
            this.RetrieveECoverPageAsync(Barcode, ExpectedPageCount, CustomFieldsXML, null);
        }
        
        /// <remarks/>
        public void RetrieveECoverPageAsync(string Barcode, int ExpectedPageCount, string CustomFieldsXML, object userState) {
            if ((this.RetrieveECoverPageOperationCompleted == null)) {
                this.RetrieveECoverPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveECoverPageOperationCompleted);
            }
            this.InvokeAsync("RetrieveECoverPage", new object[] {
                        Barcode,
                        ExpectedPageCount,
                        CustomFieldsXML}, this.RetrieveECoverPageOperationCompleted, userState);
        }
        
        private void OnRetrieveECoverPageOperationCompleted(object arg) {
            if ((this.RetrieveECoverPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveECoverPageCompleted(this, new RetrieveECoverPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RetrieveNextCompletedEventHandler(object sender, RetrieveNextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveNextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveNextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RetrievePreviousCompletedEventHandler(object sender, RetrievePreviousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePreviousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrievePreviousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RetrieveECoverCompletedEventHandler(object sender, RetrieveECoverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveECoverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveECoverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RetrieveSystemCompletedEventHandler(object sender, RetrieveSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RetrieveDetailsCompletedEventHandler(object sender, RetrieveDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RetrieveECoverPageCompletedEventHandler(object sender, RetrieveECoverPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveECoverPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveECoverPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591