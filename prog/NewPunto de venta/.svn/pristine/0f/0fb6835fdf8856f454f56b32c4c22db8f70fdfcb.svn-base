//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STL.POS.Data.NewVersion.EdmxModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class POS_SITEEntities : DbContext
    {
        public POS_SITEEntities()
            : base("name=POS_SITEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<GET_COMBO_CONDICITIONS_BY_PARAMETERS_Result> GET_COMBO_CONDICITIONS_BY_PARAMETERS(string typeCondition, Nullable<int> ramo, Nullable<int> subRamo, string nombreArchivo, string description, Nullable<int> anio, Nullable<int> id)
        {
            var typeConditionParameter = typeCondition != null ?
                new ObjectParameter("TypeCondition", typeCondition) :
                new ObjectParameter("TypeCondition", typeof(string));
    
            var ramoParameter = ramo.HasValue ?
                new ObjectParameter("Ramo", ramo) :
                new ObjectParameter("Ramo", typeof(int));
    
            var subRamoParameter = subRamo.HasValue ?
                new ObjectParameter("SubRamo", subRamo) :
                new ObjectParameter("SubRamo", typeof(int));
    
            var nombreArchivoParameter = nombreArchivo != null ?
                new ObjectParameter("NombreArchivo", nombreArchivo) :
                new ObjectParameter("NombreArchivo", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_COMBO_CONDICITIONS_BY_PARAMETERS_Result>("GET_COMBO_CONDICITIONS_BY_PARAMETERS", typeConditionParameter, ramoParameter, subRamoParameter, nombreArchivoParameter, descriptionParameter, anioParameter, idParameter);
        }
    
        public virtual ObjectResult<SP_FILL_DROP_DOWN_Result> SP_FILL_DROP_DOWN(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FILL_DROP_DOWN_Result>("SP_FILL_DROP_DOWN", filtroParameter);
        }
    
        public virtual ObjectResult<SP_GET_ALL_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER_Result> SP_GET_ALL_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER(Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ALL_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER_Result>("SP_GET_ALL_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER", personIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_ALL_IGNORE_RNC_VALIDATION_Result> SP_GET_ALL_IGNORE_RNC_VALIDATION(string quotationNumber)
        {
            var quotationNumberParameter = quotationNumber != null ?
                new ObjectParameter("QuotationNumber", quotationNumber) :
                new ObjectParameter("QuotationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ALL_IGNORE_RNC_VALIDATION_Result>("SP_GET_ALL_IGNORE_RNC_VALIDATION", quotationNumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_ALL_PEPS_BY_DRIVER_Result> SP_GET_ALL_PEPS_BY_DRIVER(Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ALL_PEPS_BY_DRIVER_Result>("SP_GET_ALL_PEPS_BY_DRIVER", personIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_ALL_PERSON_INFO_BY_DRIVER_Result> SP_GET_ALL_PERSON_INFO_BY_DRIVER(Nullable<int> personsID, Nullable<int> quotationid)
        {
            var personsIDParameter = personsID.HasValue ?
                new ObjectParameter("PersonsID", personsID) :
                new ObjectParameter("PersonsID", typeof(int));
    
            var quotationidParameter = quotationid.HasValue ?
                new ObjectParameter("Quotationid", quotationid) :
                new ObjectParameter("Quotationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ALL_PERSON_INFO_BY_DRIVER_Result>("SP_GET_ALL_PERSON_INFO_BY_DRIVER", personsIDParameter, quotationidParameter);
        }
    
        public virtual ObjectResult<SP_GET_CITIES_Result> SP_GET_CITIES(Nullable<int> countryID, Nullable<int> privinceID, Nullable<int> municipalityID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var privinceIDParameter = privinceID.HasValue ?
                new ObjectParameter("privinceID", privinceID) :
                new ObjectParameter("privinceID", typeof(int));
    
            var municipalityIDParameter = municipalityID.HasValue ?
                new ObjectParameter("municipalityID", municipalityID) :
                new ObjectParameter("municipalityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CITIES_Result>("SP_GET_CITIES", countryIDParameter, privinceIDParameter, municipalityIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_IDENTIFICATION_FINAL_BENEFICIARY_OPTION_Result> SP_GET_IDENTIFICATION_FINAL_BENEFICIARY_OPTION(Nullable<bool> isCompany)
        {
            var isCompanyParameter = isCompany.HasValue ?
                new ObjectParameter("IsCompany", isCompany) :
                new ObjectParameter("IsCompany", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_IDENTIFICATION_FINAL_BENEFICIARY_OPTION_Result>("SP_GET_IDENTIFICATION_FINAL_BENEFICIARY_OPTION", isCompanyParameter);
        }
    
        public virtual ObjectResult<SP_GET_MODELS_BY_BRANDS_Result> SP_GET_MODELS_BY_BRANDS(Nullable<int> brandID)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("brandID", brandID) :
                new ObjectParameter("brandID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_MODELS_BY_BRANDS_Result>("SP_GET_MODELS_BY_BRANDS", brandIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_MUNICIPALITIES_Result> SP_GET_MUNICIPALITIES(Nullable<int> countryID, Nullable<int> privinceID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            var privinceIDParameter = privinceID.HasValue ?
                new ObjectParameter("privinceID", privinceID) :
                new ObjectParameter("privinceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_MUNICIPALITIES_Result>("SP_GET_MUNICIPALITIES", countryIDParameter, privinceIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_PARAMETERS_Result> SP_GET_PARAMETERS(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PARAMETERS_Result>("SP_GET_PARAMETERS", nameParameter);
        }
    
        public virtual ObjectResult<SP_GET_PEP_FORMULARY_BY_DRIVER_Result> SP_GET_PEP_FORMULARY_BY_DRIVER(Nullable<int> personID, string source)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PEP_FORMULARY_BY_DRIVER_Result>("SP_GET_PEP_FORMULARY_BY_DRIVER", personIDParameter, sourceParameter);
        }
    
        public virtual ObjectResult<SP_GET_PEP_OPTIONS_Result> SP_GET_PEP_OPTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PEP_OPTIONS_Result>("SP_GET_PEP_OPTIONS");
        }
    
        public virtual ObjectResult<SP_GET_PRODUCTS_SYSFLEX_Result> SP_GET_PRODUCTS_SYSFLEX(Nullable<int> ramo, Nullable<int> tipoVehiculo, Nullable<int> productoId, Nullable<int> ano)
        {
            var ramoParameter = ramo.HasValue ?
                new ObjectParameter("Ramo", ramo) :
                new ObjectParameter("Ramo", typeof(int));
    
            var tipoVehiculoParameter = tipoVehiculo.HasValue ?
                new ObjectParameter("TipoVehiculo", tipoVehiculo) :
                new ObjectParameter("TipoVehiculo", typeof(int));
    
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            var anoParameter = ano.HasValue ?
                new ObjectParameter("Ano", ano) :
                new ObjectParameter("Ano", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PRODUCTS_SYSFLEX_Result>("SP_GET_PRODUCTS_SYSFLEX", ramoParameter, tipoVehiculoParameter, productoIdParameter, anoParameter);
        }
    
        public virtual ObjectResult<SP_GET_PROVINCES_Result> SP_GET_PROVINCES(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("countryID", countryID) :
                new ObjectParameter("countryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PROVINCES_Result>("SP_GET_PROVINCES", countryIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_Result> SP_GET_QUOTATION(Nullable<int> quotation_Id, string quotationNumber, string policyNumber)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            var quotationNumberParameter = quotationNumber != null ?
                new ObjectParameter("QuotationNumber", quotationNumber) :
                new ObjectParameter("QuotationNumber", typeof(string));
    
            var policyNumberParameter = policyNumber != null ?
                new ObjectParameter("PolicyNumber", policyNumber) :
                new ObjectParameter("PolicyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_Result>("SP_GET_QUOTATION", quotation_IdParameter, quotationNumberParameter, policyNumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_COVERAGE_DETAILS_Result> SP_GET_QUOTATION_COVERAGE_DETAILS(Nullable<int> quotation_Id)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_COVERAGE_DETAILS_Result>("SP_GET_QUOTATION_COVERAGE_DETAILS", quotation_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_DRIVERS_Result> SP_GET_QUOTATION_DRIVERS(Nullable<int> quotation_Id)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_DRIVERS_Result>("SP_GET_QUOTATION_DRIVERS", quotation_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_PRODUCT_LIMITS_Result> SP_GET_QUOTATION_PRODUCT_LIMITS(Nullable<int> vehicle_Id)
        {
            var vehicle_IdParameter = vehicle_Id.HasValue ?
                new ObjectParameter("Vehicle_Id", vehicle_Id) :
                new ObjectParameter("Vehicle_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_PRODUCT_LIMITS_Result>("SP_GET_QUOTATION_PRODUCT_LIMITS", vehicle_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_SERVICES_Result> SP_GET_QUOTATION_SERVICES(Nullable<int> quotation_Id)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_SERVICES_Result>("SP_GET_QUOTATION_SERVICES", quotation_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_SERVICES_TYPES_Result> SP_GET_QUOTATION_SERVICES_TYPES(Nullable<int> quotation_Id)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_SERVICES_TYPES_Result>("SP_GET_QUOTATION_SERVICES_TYPES", quotation_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_VEHICLE_Result> SP_GET_QUOTATION_VEHICLE(Nullable<int> quotation_Id)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_VEHICLE_Result>("SP_GET_QUOTATION_VEHICLE", quotation_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_USAGE_STATES_Result> SP_GET_USAGE_STATES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_USAGE_STATES_Result>("SP_GET_USAGE_STATES");
        }
    
        public virtual ObjectResult<SP_GET_USERS_Result> SP_GET_USERS(Nullable<int> id, string username, Nullable<int> userType, Nullable<int> agentId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var agentIdParameter = agentId.HasValue ?
                new ObjectParameter("AgentId", agentId) :
                new ObjectParameter("AgentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_USERS_Result>("SP_GET_USERS", idParameter, usernameParameter, userTypeParameter, agentIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_VEHICLE_BRANDS_Result> SP_GET_VEHICLE_BRANDS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VEHICLE_BRANDS_Result>("SP_GET_VEHICLE_BRANDS");
        }
    
        public virtual ObjectResult<SP_GET_VEHICLE_TYPES_Result> SP_GET_VEHICLE_TYPES(Nullable<int> brandID, Nullable<int> modelID)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("brandID", brandID) :
                new ObjectParameter("brandID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("modelID", modelID) :
                new ObjectParameter("modelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VEHICLE_TYPES_Result>("SP_GET_VEHICLE_TYPES", brandIDParameter, modelIDParameter);
        }
    
        public virtual ObjectResult<SP_SET_DRIVERS_Result> SP_SET_DRIVERS(Nullable<int> id, Nullable<int> quotationId, Nullable<int> yearsDriving, Nullable<int> accidentsLast3Years, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var quotationIdParameter = quotationId.HasValue ?
                new ObjectParameter("QuotationId", quotationId) :
                new ObjectParameter("QuotationId", typeof(int));
    
            var yearsDrivingParameter = yearsDriving.HasValue ?
                new ObjectParameter("YearsDriving", yearsDriving) :
                new ObjectParameter("YearsDriving", typeof(int));
    
            var accidentsLast3YearsParameter = accidentsLast3Years.HasValue ?
                new ObjectParameter("AccidentsLast3Years", accidentsLast3Years) :
                new ObjectParameter("AccidentsLast3Years", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_DRIVERS_Result>("SP_SET_DRIVERS", idParameter, quotationIdParameter, yearsDrivingParameter, accidentsLast3YearsParameter, userIdParameter);
        }
    
        public virtual int SP_SET_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER(Nullable<int> id, Nullable<int> personID, string name, Nullable<decimal> percentageParticipation, Nullable<System.DateTime> create_Date, Nullable<int> create_UserId, Nullable<int> modi_UserId, Nullable<System.DateTime> modi_Date, string action)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var percentageParticipationParameter = percentageParticipation.HasValue ?
                new ObjectParameter("PercentageParticipation", percentageParticipation) :
                new ObjectParameter("PercentageParticipation", typeof(decimal));
    
            var create_DateParameter = create_Date.HasValue ?
                new ObjectParameter("Create_Date", create_Date) :
                new ObjectParameter("Create_Date", typeof(System.DateTime));
    
            var create_UserIdParameter = create_UserId.HasValue ?
                new ObjectParameter("Create_UserId", create_UserId) :
                new ObjectParameter("Create_UserId", typeof(int));
    
            var modi_UserIdParameter = modi_UserId.HasValue ?
                new ObjectParameter("Modi_UserId", modi_UserId) :
                new ObjectParameter("Modi_UserId", typeof(int));
    
            var modi_DateParameter = modi_Date.HasValue ?
                new ObjectParameter("Modi_Date", modi_Date) :
                new ObjectParameter("Modi_Date", typeof(System.DateTime));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER", idParameter, personIDParameter, nameParameter, percentageParticipationParameter, create_DateParameter, create_UserIdParameter, modi_UserIdParameter, modi_DateParameter, actionParameter);
        }
    
        public virtual int SP_SET_IGNORE_RNC_VALIDATION(Nullable<int> id, string quotationNumber, Nullable<bool> status, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var quotationNumberParameter = quotationNumber != null ?
                new ObjectParameter("QuotationNumber", quotationNumber) :
                new ObjectParameter("QuotationNumber", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_IGNORE_RNC_VALIDATION", idParameter, quotationNumberParameter, statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_OWNERSHIP_STRUCTURE_Result> SP_SET_OWNERSHIP_STRUCTURE(Nullable<int> id, string description, Nullable<bool> status, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_OWNERSHIP_STRUCTURE_Result>("SP_SET_OWNERSHIP_STRUCTURE", idParameter, descriptionParameter, statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_PEP_FORMULARY_Result> SP_SET_PEP_FORMULARY(Nullable<int> id, Nullable<int> personsID, string name, Nullable<int> relationshipId, string position, Nullable<int> fromYear, Nullable<int> toYear, Nullable<int> userId, Nullable<int> beneficiaryId, Nullable<bool> isPepManagerCompany)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var personsIDParameter = personsID.HasValue ?
                new ObjectParameter("PersonsID", personsID) :
                new ObjectParameter("PersonsID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var relationshipIdParameter = relationshipId.HasValue ?
                new ObjectParameter("RelationshipId", relationshipId) :
                new ObjectParameter("RelationshipId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var beneficiaryIdParameter = beneficiaryId.HasValue ?
                new ObjectParameter("BeneficiaryId", beneficiaryId) :
                new ObjectParameter("BeneficiaryId", typeof(int));
    
            var isPepManagerCompanyParameter = isPepManagerCompany.HasValue ?
                new ObjectParameter("IsPepManagerCompany", isPepManagerCompany) :
                new ObjectParameter("IsPepManagerCompany", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_PEP_FORMULARY_Result>("SP_SET_PEP_FORMULARY", idParameter, personsIDParameter, nameParameter, relationshipIdParameter, positionParameter, fromYearParameter, toYearParameter, userIdParameter, beneficiaryIdParameter, isPepManagerCompanyParameter);
        }
    
        public virtual int SP_SET_PEPS_BY_DRIVER(Nullable<int> id, Nullable<int> personsID, string name, Nullable<int> relationshipId, string position, Nullable<int> fromYear, Nullable<int> toYear, Nullable<System.DateTime> create_Date, Nullable<int> create_UserId, Nullable<int> modi_UserId, Nullable<System.DateTime> modi_Date, string action)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var personsIDParameter = personsID.HasValue ?
                new ObjectParameter("PersonsID", personsID) :
                new ObjectParameter("PersonsID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var relationshipIdParameter = relationshipId.HasValue ?
                new ObjectParameter("RelationshipId", relationshipId) :
                new ObjectParameter("RelationshipId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var fromYearParameter = fromYear.HasValue ?
                new ObjectParameter("FromYear", fromYear) :
                new ObjectParameter("FromYear", typeof(int));
    
            var toYearParameter = toYear.HasValue ?
                new ObjectParameter("ToYear", toYear) :
                new ObjectParameter("ToYear", typeof(int));
    
            var create_DateParameter = create_Date.HasValue ?
                new ObjectParameter("Create_Date", create_Date) :
                new ObjectParameter("Create_Date", typeof(System.DateTime));
    
            var create_UserIdParameter = create_UserId.HasValue ?
                new ObjectParameter("Create_UserId", create_UserId) :
                new ObjectParameter("Create_UserId", typeof(int));
    
            var modi_UserIdParameter = modi_UserId.HasValue ?
                new ObjectParameter("Modi_UserId", modi_UserId) :
                new ObjectParameter("Modi_UserId", typeof(int));
    
            var modi_DateParameter = modi_Date.HasValue ?
                new ObjectParameter("Modi_Date", modi_Date) :
                new ObjectParameter("Modi_Date", typeof(System.DateTime));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_PEPS_BY_DRIVER", idParameter, personsIDParameter, nameParameter, relationshipIdParameter, positionParameter, fromYearParameter, toYearParameter, create_DateParameter, create_UserIdParameter, modi_UserIdParameter, modi_DateParameter, actionParameter);
        }
    
        public virtual ObjectResult<SP_SET_PRODUCT_LIMITS_Result> SP_SET_PRODUCT_LIMITS(Nullable<int> id, Nullable<bool> isSelected, Nullable<decimal> sdPrime, Nullable<decimal> tpPrime, Nullable<decimal> servicesPrime, Nullable<decimal> iSC, Nullable<decimal> iSCPercentage, Nullable<decimal> totalPrime, Nullable<decimal> totalIsc, Nullable<decimal> totalDiscount, Nullable<int> selectedDeductibleCoreId, string selectedDeductibleName, Nullable<int> vehicleProduct_Id, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var isSelectedParameter = isSelected.HasValue ?
                new ObjectParameter("IsSelected", isSelected) :
                new ObjectParameter("IsSelected", typeof(bool));
    
            var sdPrimeParameter = sdPrime.HasValue ?
                new ObjectParameter("SdPrime", sdPrime) :
                new ObjectParameter("SdPrime", typeof(decimal));
    
            var tpPrimeParameter = tpPrime.HasValue ?
                new ObjectParameter("TpPrime", tpPrime) :
                new ObjectParameter("TpPrime", typeof(decimal));
    
            var servicesPrimeParameter = servicesPrime.HasValue ?
                new ObjectParameter("ServicesPrime", servicesPrime) :
                new ObjectParameter("ServicesPrime", typeof(decimal));
    
            var iSCParameter = iSC.HasValue ?
                new ObjectParameter("ISC", iSC) :
                new ObjectParameter("ISC", typeof(decimal));
    
            var iSCPercentageParameter = iSCPercentage.HasValue ?
                new ObjectParameter("ISCPercentage", iSCPercentage) :
                new ObjectParameter("ISCPercentage", typeof(decimal));
    
            var totalPrimeParameter = totalPrime.HasValue ?
                new ObjectParameter("TotalPrime", totalPrime) :
                new ObjectParameter("TotalPrime", typeof(decimal));
    
            var totalIscParameter = totalIsc.HasValue ?
                new ObjectParameter("TotalIsc", totalIsc) :
                new ObjectParameter("TotalIsc", typeof(decimal));
    
            var totalDiscountParameter = totalDiscount.HasValue ?
                new ObjectParameter("TotalDiscount", totalDiscount) :
                new ObjectParameter("TotalDiscount", typeof(decimal));
    
            var selectedDeductibleCoreIdParameter = selectedDeductibleCoreId.HasValue ?
                new ObjectParameter("SelectedDeductibleCoreId", selectedDeductibleCoreId) :
                new ObjectParameter("SelectedDeductibleCoreId", typeof(int));
    
            var selectedDeductibleNameParameter = selectedDeductibleName != null ?
                new ObjectParameter("SelectedDeductibleName", selectedDeductibleName) :
                new ObjectParameter("SelectedDeductibleName", typeof(string));
    
            var vehicleProduct_IdParameter = vehicleProduct_Id.HasValue ?
                new ObjectParameter("VehicleProduct_Id", vehicleProduct_Id) :
                new ObjectParameter("VehicleProduct_Id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_PRODUCT_LIMITS_Result>("SP_SET_PRODUCT_LIMITS", idParameter, isSelectedParameter, sdPrimeParameter, tpPrimeParameter, servicesPrimeParameter, iSCParameter, iSCPercentageParameter, totalPrimeParameter, totalIscParameter, totalDiscountParameter, selectedDeductibleCoreIdParameter, selectedDeductibleNameParameter, vehicleProduct_IdParameter, userIdParameter);
        }
    
        public virtual int SP_SET_QUOTATION_DECLINED()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_QUOTATION_DECLINED");
        }
    
        public virtual ObjectResult<SP_SET_SERVICES_TYPES_Result> SP_SET_SERVICES_TYPES(Nullable<int> id, string name, Nullable<int> servicesTypesToProductLimits, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var servicesTypesToProductLimitsParameter = servicesTypesToProductLimits.HasValue ?
                new ObjectParameter("ServicesTypesToProductLimits", servicesTypesToProductLimits) :
                new ObjectParameter("ServicesTypesToProductLimits", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_SERVICES_TYPES_Result>("SP_SET_SERVICES_TYPES", idParameter, nameParameter, servicesTypesToProductLimitsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_SOCIAL_REASON_Result> SP_SET_SOCIAL_REASON(Nullable<int> id, string description, Nullable<bool> status, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_SOCIAL_REASON_Result>("SP_SET_SOCIAL_REASON", idParameter, descriptionParameter, statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_USERS_Result> SP_SET_USERS(Nullable<int> id, string username, string name, string surname, string telephone, string email, string salt, string passwordEncoded, string changePasswordToken, Nullable<int> userOrigin, Nullable<int> userStatus, Nullable<int> userType, Nullable<int> virtualOfficeId, Nullable<int> suscriptor_Id, Nullable<int> agentId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(string));
    
            var passwordEncodedParameter = passwordEncoded != null ?
                new ObjectParameter("PasswordEncoded", passwordEncoded) :
                new ObjectParameter("PasswordEncoded", typeof(string));
    
            var changePasswordTokenParameter = changePasswordToken != null ?
                new ObjectParameter("ChangePasswordToken", changePasswordToken) :
                new ObjectParameter("ChangePasswordToken", typeof(string));
    
            var userOriginParameter = userOrigin.HasValue ?
                new ObjectParameter("UserOrigin", userOrigin) :
                new ObjectParameter("UserOrigin", typeof(int));
    
            var userStatusParameter = userStatus.HasValue ?
                new ObjectParameter("UserStatus", userStatus) :
                new ObjectParameter("UserStatus", typeof(int));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var virtualOfficeIdParameter = virtualOfficeId.HasValue ?
                new ObjectParameter("VirtualOfficeId", virtualOfficeId) :
                new ObjectParameter("VirtualOfficeId", typeof(int));
    
            var suscriptor_IdParameter = suscriptor_Id.HasValue ?
                new ObjectParameter("Suscriptor_Id", suscriptor_Id) :
                new ObjectParameter("Suscriptor_Id", typeof(int));
    
            var agentIdParameter = agentId.HasValue ?
                new ObjectParameter("AgentId", agentId) :
                new ObjectParameter("AgentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_USERS_Result>("SP_SET_USERS", idParameter, usernameParameter, nameParameter, surnameParameter, telephoneParameter, emailParameter, saltParameter, passwordEncodedParameter, changePasswordTokenParameter, userOriginParameter, userStatusParameter, userTypeParameter, virtualOfficeIdParameter, suscriptor_IdParameter, agentIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_VEHICLE_PRODUCT_Result> SP_SET_VEHICLE_PRODUCT(Nullable<int> id, string vehicleDescription, Nullable<int> year, Nullable<byte> cylinders, string passengers, Nullable<int> weight, string chassis, string plate, string color, Nullable<decimal> vehiclePrice, Nullable<decimal> insuredAmount, Nullable<decimal> percentageToInsure, Nullable<decimal> totalPrime, Nullable<decimal> totalIsc, Nullable<decimal> totalDiscount, Nullable<int> selectedProductCoreId, Nullable<int> vehicleTypeCoreId, string selectedProductName, string vehicleTypeName, string vehicleMakeName, Nullable<int> usageId, string usageName, Nullable<int> storeId, string storeName, Nullable<int> driver_Id, Nullable<int> vehicleModel_Make_Id, Nullable<int> vehicleModel_Model_Id, Nullable<int> quotation_Id, Nullable<int> selectedVehicleTypeId, string selectedVehicleTypeName, Nullable<int> selectedCoverageCoreId, string selectedCoverageName, string vehicleYearOld, Nullable<decimal> surChargePercentage, string numeroFormulario, string rateJson, Nullable<int> userId, Nullable<int> secuenciaVehicleSysflex, Nullable<bool> isFacultative, Nullable<decimal> amountFacultative, Nullable<int> vehicleQuantity, Nullable<decimal> proratedPremium, Nullable<int> selectedVehicleFuelTypeId, string selectedVehicleFuelTypeDesc, Nullable<decimal> minimumdepreciation, Nullable<bool> isOverPreMium)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var vehicleDescriptionParameter = vehicleDescription != null ?
                new ObjectParameter("VehicleDescription", vehicleDescription) :
                new ObjectParameter("VehicleDescription", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var cylindersParameter = cylinders.HasValue ?
                new ObjectParameter("Cylinders", cylinders) :
                new ObjectParameter("Cylinders", typeof(byte));
    
            var passengersParameter = passengers != null ?
                new ObjectParameter("Passengers", passengers) :
                new ObjectParameter("Passengers", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var chassisParameter = chassis != null ?
                new ObjectParameter("Chassis", chassis) :
                new ObjectParameter("Chassis", typeof(string));
    
            var plateParameter = plate != null ?
                new ObjectParameter("Plate", plate) :
                new ObjectParameter("Plate", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var vehiclePriceParameter = vehiclePrice.HasValue ?
                new ObjectParameter("VehiclePrice", vehiclePrice) :
                new ObjectParameter("VehiclePrice", typeof(decimal));
    
            var insuredAmountParameter = insuredAmount.HasValue ?
                new ObjectParameter("InsuredAmount", insuredAmount) :
                new ObjectParameter("InsuredAmount", typeof(decimal));
    
            var percentageToInsureParameter = percentageToInsure.HasValue ?
                new ObjectParameter("PercentageToInsure", percentageToInsure) :
                new ObjectParameter("PercentageToInsure", typeof(decimal));
    
            var totalPrimeParameter = totalPrime.HasValue ?
                new ObjectParameter("TotalPrime", totalPrime) :
                new ObjectParameter("TotalPrime", typeof(decimal));
    
            var totalIscParameter = totalIsc.HasValue ?
                new ObjectParameter("TotalIsc", totalIsc) :
                new ObjectParameter("TotalIsc", typeof(decimal));
    
            var totalDiscountParameter = totalDiscount.HasValue ?
                new ObjectParameter("TotalDiscount", totalDiscount) :
                new ObjectParameter("TotalDiscount", typeof(decimal));
    
            var selectedProductCoreIdParameter = selectedProductCoreId.HasValue ?
                new ObjectParameter("SelectedProductCoreId", selectedProductCoreId) :
                new ObjectParameter("SelectedProductCoreId", typeof(int));
    
            var vehicleTypeCoreIdParameter = vehicleTypeCoreId.HasValue ?
                new ObjectParameter("VehicleTypeCoreId", vehicleTypeCoreId) :
                new ObjectParameter("VehicleTypeCoreId", typeof(int));
    
            var selectedProductNameParameter = selectedProductName != null ?
                new ObjectParameter("SelectedProductName", selectedProductName) :
                new ObjectParameter("SelectedProductName", typeof(string));
    
            var vehicleTypeNameParameter = vehicleTypeName != null ?
                new ObjectParameter("VehicleTypeName", vehicleTypeName) :
                new ObjectParameter("VehicleTypeName", typeof(string));
    
            var vehicleMakeNameParameter = vehicleMakeName != null ?
                new ObjectParameter("VehicleMakeName", vehicleMakeName) :
                new ObjectParameter("VehicleMakeName", typeof(string));
    
            var usageIdParameter = usageId.HasValue ?
                new ObjectParameter("UsageId", usageId) :
                new ObjectParameter("UsageId", typeof(int));
    
            var usageNameParameter = usageName != null ?
                new ObjectParameter("UsageName", usageName) :
                new ObjectParameter("UsageName", typeof(string));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var driver_IdParameter = driver_Id.HasValue ?
                new ObjectParameter("Driver_Id", driver_Id) :
                new ObjectParameter("Driver_Id", typeof(int));
    
            var vehicleModel_Make_IdParameter = vehicleModel_Make_Id.HasValue ?
                new ObjectParameter("VehicleModel_Make_Id", vehicleModel_Make_Id) :
                new ObjectParameter("VehicleModel_Make_Id", typeof(int));
    
            var vehicleModel_Model_IdParameter = vehicleModel_Model_Id.HasValue ?
                new ObjectParameter("VehicleModel_Model_Id", vehicleModel_Model_Id) :
                new ObjectParameter("VehicleModel_Model_Id", typeof(int));
    
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            var selectedVehicleTypeIdParameter = selectedVehicleTypeId.HasValue ?
                new ObjectParameter("SelectedVehicleTypeId", selectedVehicleTypeId) :
                new ObjectParameter("SelectedVehicleTypeId", typeof(int));
    
            var selectedVehicleTypeNameParameter = selectedVehicleTypeName != null ?
                new ObjectParameter("SelectedVehicleTypeName", selectedVehicleTypeName) :
                new ObjectParameter("SelectedVehicleTypeName", typeof(string));
    
            var selectedCoverageCoreIdParameter = selectedCoverageCoreId.HasValue ?
                new ObjectParameter("SelectedCoverageCoreId", selectedCoverageCoreId) :
                new ObjectParameter("SelectedCoverageCoreId", typeof(int));
    
            var selectedCoverageNameParameter = selectedCoverageName != null ?
                new ObjectParameter("SelectedCoverageName", selectedCoverageName) :
                new ObjectParameter("SelectedCoverageName", typeof(string));
    
            var vehicleYearOldParameter = vehicleYearOld != null ?
                new ObjectParameter("VehicleYearOld", vehicleYearOld) :
                new ObjectParameter("VehicleYearOld", typeof(string));
    
            var surChargePercentageParameter = surChargePercentage.HasValue ?
                new ObjectParameter("SurChargePercentage", surChargePercentage) :
                new ObjectParameter("SurChargePercentage", typeof(decimal));
    
            var numeroFormularioParameter = numeroFormulario != null ?
                new ObjectParameter("NumeroFormulario", numeroFormulario) :
                new ObjectParameter("NumeroFormulario", typeof(string));
    
            var rateJsonParameter = rateJson != null ?
                new ObjectParameter("RateJson", rateJson) :
                new ObjectParameter("RateJson", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var secuenciaVehicleSysflexParameter = secuenciaVehicleSysflex.HasValue ?
                new ObjectParameter("SecuenciaVehicleSysflex", secuenciaVehicleSysflex) :
                new ObjectParameter("SecuenciaVehicleSysflex", typeof(int));
    
            var isFacultativeParameter = isFacultative.HasValue ?
                new ObjectParameter("IsFacultative", isFacultative) :
                new ObjectParameter("IsFacultative", typeof(bool));
    
            var amountFacultativeParameter = amountFacultative.HasValue ?
                new ObjectParameter("AmountFacultative", amountFacultative) :
                new ObjectParameter("AmountFacultative", typeof(decimal));
    
            var vehicleQuantityParameter = vehicleQuantity.HasValue ?
                new ObjectParameter("VehicleQuantity", vehicleQuantity) :
                new ObjectParameter("VehicleQuantity", typeof(int));
    
            var proratedPremiumParameter = proratedPremium.HasValue ?
                new ObjectParameter("ProratedPremium", proratedPremium) :
                new ObjectParameter("ProratedPremium", typeof(decimal));
    
            var selectedVehicleFuelTypeIdParameter = selectedVehicleFuelTypeId.HasValue ?
                new ObjectParameter("SelectedVehicleFuelTypeId", selectedVehicleFuelTypeId) :
                new ObjectParameter("SelectedVehicleFuelTypeId", typeof(int));
    
            var selectedVehicleFuelTypeDescParameter = selectedVehicleFuelTypeDesc != null ?
                new ObjectParameter("SelectedVehicleFuelTypeDesc", selectedVehicleFuelTypeDesc) :
                new ObjectParameter("SelectedVehicleFuelTypeDesc", typeof(string));
    
            var minimumdepreciationParameter = minimumdepreciation.HasValue ?
                new ObjectParameter("minimumdepreciation", minimumdepreciation) :
                new ObjectParameter("minimumdepreciation", typeof(decimal));
    
            var isOverPreMiumParameter = isOverPreMium.HasValue ?
                new ObjectParameter("IsOverPreMium", isOverPreMium) :
                new ObjectParameter("IsOverPreMium", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_VEHICLE_PRODUCT_Result>("SP_SET_VEHICLE_PRODUCT", idParameter, vehicleDescriptionParameter, yearParameter, cylindersParameter, passengersParameter, weightParameter, chassisParameter, plateParameter, colorParameter, vehiclePriceParameter, insuredAmountParameter, percentageToInsureParameter, totalPrimeParameter, totalIscParameter, totalDiscountParameter, selectedProductCoreIdParameter, vehicleTypeCoreIdParameter, selectedProductNameParameter, vehicleTypeNameParameter, vehicleMakeNameParameter, usageIdParameter, usageNameParameter, storeIdParameter, storeNameParameter, driver_IdParameter, vehicleModel_Make_IdParameter, vehicleModel_Model_IdParameter, quotation_IdParameter, selectedVehicleTypeIdParameter, selectedVehicleTypeNameParameter, selectedCoverageCoreIdParameter, selectedCoverageNameParameter, vehicleYearOldParameter, surChargePercentageParameter, numeroFormularioParameter, rateJsonParameter, userIdParameter, secuenciaVehicleSysflexParameter, isFacultativeParameter, amountFacultativeParameter, vehicleQuantityParameter, proratedPremiumParameter, selectedVehicleFuelTypeIdParameter, selectedVehicleFuelTypeDescParameter, minimumdepreciationParameter, isOverPreMiumParameter);
        }
    
        public virtual int SP_UPDATE_CUMPLIMIENTO_FIELDS_BY_DRIVER(Nullable<int> personsID, Nullable<int> pepFormularyOptionsId, Nullable<int> socialReasonId, Nullable<int> ownershipStructureId, Nullable<int> identificationFinalBeneficiaryOptionsId)
        {
            var personsIDParameter = personsID.HasValue ?
                new ObjectParameter("PersonsID", personsID) :
                new ObjectParameter("PersonsID", typeof(int));
    
            var pepFormularyOptionsIdParameter = pepFormularyOptionsId.HasValue ?
                new ObjectParameter("PepFormularyOptionsId", pepFormularyOptionsId) :
                new ObjectParameter("PepFormularyOptionsId", typeof(int));
    
            var socialReasonIdParameter = socialReasonId.HasValue ?
                new ObjectParameter("SocialReasonId", socialReasonId) :
                new ObjectParameter("SocialReasonId", typeof(int));
    
            var ownershipStructureIdParameter = ownershipStructureId.HasValue ?
                new ObjectParameter("OwnershipStructureId", ownershipStructureId) :
                new ObjectParameter("OwnershipStructureId", typeof(int));
    
            var identificationFinalBeneficiaryOptionsIdParameter = identificationFinalBeneficiaryOptionsId.HasValue ?
                new ObjectParameter("IdentificationFinalBeneficiaryOptionsId", identificationFinalBeneficiaryOptionsId) :
                new ObjectParameter("IdentificationFinalBeneficiaryOptionsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_CUMPLIMIENTO_FIELDS_BY_DRIVER", personsIDParameter, pepFormularyOptionsIdParameter, socialReasonIdParameter, ownershipStructureIdParameter, identificationFinalBeneficiaryOptionsIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_BUSINESS_LINE_BY_COUNTRY_Result> SP_GET_BUSINESS_LINE_BY_COUNTRY(Nullable<int> countryId)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("countryId", countryId) :
                new ObjectParameter("countryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_BUSINESS_LINE_BY_COUNTRY_Result>("SP_GET_BUSINESS_LINE_BY_COUNTRY", countryIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_COVERAGE_Result> SP_GET_QUOTATION_COVERAGE(Nullable<int> vehicle_Id, Nullable<int> filtro)
        {
            var vehicle_IdParameter = vehicle_Id.HasValue ?
                new ObjectParameter("Vehicle_Id", vehicle_Id) :
                new ObjectParameter("Vehicle_Id", typeof(int));
    
            var filtroParameter = filtro.HasValue ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_COVERAGE_Result>("SP_GET_QUOTATION_COVERAGE", vehicle_IdParameter, filtroParameter);
        }
    
        public virtual ObjectResult<SP_GET_DRIVER_BY_ID_Result> SP_GET_DRIVER_BY_ID(Nullable<int> driver_Id)
        {
            var driver_IdParameter = driver_Id.HasValue ?
                new ObjectParameter("Driver_Id", driver_Id) :
                new ObjectParameter("Driver_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DRIVER_BY_ID_Result>("SP_GET_DRIVER_BY_ID", driver_IdParameter);
        }
    
        public virtual int SP_DELETE_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER(Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_IDENTIFICATION_FINAL_BENEFICIARY_BY_DRIVER", personIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_BENEFICIARIES_BY_DRIVER_Result> SP_GET_BENEFICIARIES_BY_DRIVER(Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_BENEFICIARIES_BY_DRIVER_Result>("SP_GET_BENEFICIARIES_BY_DRIVER", personIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_IGNORE_RNC_VALIDATION_Result> SP_GET_IGNORE_RNC_VALIDATION(string quotationNumber)
        {
            var quotationNumberParameter = quotationNumber != null ?
                new ObjectParameter("QuotationNumber", quotationNumber) :
                new ObjectParameter("QuotationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_IGNORE_RNC_VALIDATION_Result>("SP_GET_IGNORE_RNC_VALIDATION", quotationNumberParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATIONS_Result> SP_GET_QUOTATIONS(string currentUserName, string quotationNumber, string principalName, string identification, string p_agents, Nullable<int> userType, Nullable<bool> filtrarAgentes)
        {
            var currentUserNameParameter = currentUserName != null ?
                new ObjectParameter("currentUserName", currentUserName) :
                new ObjectParameter("currentUserName", typeof(string));
    
            var quotationNumberParameter = quotationNumber != null ?
                new ObjectParameter("QuotationNumber", quotationNumber) :
                new ObjectParameter("QuotationNumber", typeof(string));
    
            var principalNameParameter = principalName != null ?
                new ObjectParameter("PrincipalName", principalName) :
                new ObjectParameter("PrincipalName", typeof(string));
    
            var identificationParameter = identification != null ?
                new ObjectParameter("Identification", identification) :
                new ObjectParameter("Identification", typeof(string));
    
            var p_agentsParameter = p_agents != null ?
                new ObjectParameter("p_agents", p_agents) :
                new ObjectParameter("p_agents", typeof(string));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var filtrarAgentesParameter = filtrarAgentes.HasValue ?
                new ObjectParameter("FiltrarAgentes", filtrarAgentes) :
                new ObjectParameter("FiltrarAgentes", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATIONS_Result>("SP_GET_QUOTATIONS", currentUserNameParameter, quotationNumberParameter, principalNameParameter, identificationParameter, p_agentsParameter, userTypeParameter, filtrarAgentesParameter);
        }
    
        public virtual ObjectResult<SP_GET_ST_VEHICLE_TYPE_Result> SP_GET_ST_VEHICLE_TYPE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ST_VEHICLE_TYPE_Result>("SP_GET_ST_VEHICLE_TYPE");
        }
    
        public virtual ObjectResult<SP_GET_VIRTUAL_OFFICE_INTEGRATION_Result> SP_GET_VIRTUAL_OFFICE_INTEGRATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VIRTUAL_OFFICE_INTEGRATION_Result>("SP_GET_VIRTUAL_OFFICE_INTEGRATION");
        }
    
        public virtual ObjectResult<SP_GET_JOBS_Result> SP_GET_JOBS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_JOBS_Result>("SP_GET_JOBS");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_DELETE_VEHICLE_PRODUCT_COVERAGES(Nullable<int> vehicleID, Nullable<bool> deleteVehicle)
        {
            var vehicleIDParameter = vehicleID.HasValue ?
                new ObjectParameter("VehicleID", vehicleID) :
                new ObjectParameter("VehicleID", typeof(int));
    
            var deleteVehicleParameter = deleteVehicle.HasValue ?
                new ObjectParameter("deleteVehicle", deleteVehicle) :
                new ObjectParameter("deleteVehicle", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_DELETE_VEHICLE_PRODUCT_COVERAGES", vehicleIDParameter, deleteVehicleParameter);
        }
    
        public virtual int SP_DELETE_PEP_FORMULARY_BY_DRIVER(Nullable<int> personID, string source)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_PEP_FORMULARY_BY_DRIVER", personIDParameter, sourceParameter);
        }
    
        public virtual ObjectResult<SP_GET_COUNTRY_UBICACION_Result> SP_GET_COUNTRY_UBICACION(Nullable<int> corp_Id, Nullable<int> region_Id, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> city_Id)
        {
            var corp_IdParameter = corp_Id.HasValue ?
                new ObjectParameter("Corp_Id", corp_Id) :
                new ObjectParameter("Corp_Id", typeof(int));
    
            var region_IdParameter = region_Id.HasValue ?
                new ObjectParameter("Region_Id", region_Id) :
                new ObjectParameter("Region_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COUNTRY_UBICACION_Result>("SP_GET_COUNTRY_UBICACION", corp_IdParameter, region_IdParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, city_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_PAYMENT_INFO_Result> SP_GET_QUOTATION_PAYMENT_INFO(Nullable<int> quotation_Id)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_PAYMENT_INFO_Result>("SP_GET_QUOTATION_PAYMENT_INFO", quotation_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_PRODUCT_TYPE_BROCHURE_Result> SP_GET_PRODUCT_TYPE_BROCHURE(Nullable<int> productTypeFamilyBrochure_Id)
        {
            var productTypeFamilyBrochure_IdParameter = productTypeFamilyBrochure_Id.HasValue ?
                new ObjectParameter("ProductTypeFamilyBrochure_Id", productTypeFamilyBrochure_Id) :
                new ObjectParameter("ProductTypeFamilyBrochure_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PRODUCT_TYPE_BROCHURE_Result>("SP_GET_PRODUCT_TYPE_BROCHURE", productTypeFamilyBrochure_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_COVERAGE_TYPES_BROCHURE_Result> SP_GET_COVERAGE_TYPES_BROCHURE(Nullable<int> productTypeBrochure_Id)
        {
            var productTypeBrochure_IdParameter = productTypeBrochure_Id.HasValue ?
                new ObjectParameter("ProductTypeBrochure_Id", productTypeBrochure_Id) :
                new ObjectParameter("ProductTypeBrochure_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COVERAGE_TYPES_BROCHURE_Result>("SP_GET_COVERAGE_TYPES_BROCHURE", productTypeBrochure_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_GET_AGENT_IS_FINANCIAL(Nullable<int> agent_Id)
        {
            var agent_IdParameter = agent_Id.HasValue ?
                new ObjectParameter("Agent_Id", agent_Id) :
                new ObjectParameter("Agent_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_GET_AGENT_IS_FINANCIAL", agent_IdParameter);
        }
    
        public virtual ObjectResult<SP_SET_PERSONS_Result> SP_SET_PERSONS(Nullable<int> id, string firstName, string secondName, string firstSurname, string secondSurname, Nullable<System.DateTime> dateOfBirth, Nullable<bool> isPrincipal, string address, string phoneNumber, string mobile, string workPhone, string maritalStatus, string job, string company, Nullable<int> yearsInCompany, string sex, Nullable<int> country_Id, Nullable<int> domesticreg_Id, Nullable<int> state_Prov_Id, Nullable<int> city_Id, Nullable<int> nationalityGlobalCountry_Id, string email, string identificationType, string identificationNumber, Nullable<bool> foreignLicense, Nullable<System.DateTime> identificationNumberValidDate, Nullable<int> invoiceTypeId, string postalCode, Nullable<decimal> annualIncome, Nullable<int> socialReasonId, Nullable<int> ownershipStructureId, Nullable<int> identificationFinalBeneficiaryOptionsId, Nullable<int> pepFormularyOptionsId, Nullable<bool> home_Owner, Nullable<int> qtyPersonsDepend, Nullable<int> qtyEmployees, string linked, string segment, string fax, string uRL, Nullable<int> userId, string workAddress, string placeOfBirth, Nullable<int> typeOfPerson, string managerName, Nullable<int> managerPepOptionId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var secondNameParameter = secondName != null ?
                new ObjectParameter("SecondName", secondName) :
                new ObjectParameter("SecondName", typeof(string));
    
            var firstSurnameParameter = firstSurname != null ?
                new ObjectParameter("FirstSurname", firstSurname) :
                new ObjectParameter("FirstSurname", typeof(string));
    
            var secondSurnameParameter = secondSurname != null ?
                new ObjectParameter("SecondSurname", secondSurname) :
                new ObjectParameter("SecondSurname", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var isPrincipalParameter = isPrincipal.HasValue ?
                new ObjectParameter("IsPrincipal", isPrincipal) :
                new ObjectParameter("IsPrincipal", typeof(bool));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var jobParameter = job != null ?
                new ObjectParameter("Job", job) :
                new ObjectParameter("Job", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var yearsInCompanyParameter = yearsInCompany.HasValue ?
                new ObjectParameter("YearsInCompany", yearsInCompany) :
                new ObjectParameter("YearsInCompany", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var domesticreg_IdParameter = domesticreg_Id.HasValue ?
                new ObjectParameter("Domesticreg_Id", domesticreg_Id) :
                new ObjectParameter("Domesticreg_Id", typeof(int));
    
            var state_Prov_IdParameter = state_Prov_Id.HasValue ?
                new ObjectParameter("State_Prov_Id", state_Prov_Id) :
                new ObjectParameter("State_Prov_Id", typeof(int));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var nationalityGlobalCountry_IdParameter = nationalityGlobalCountry_Id.HasValue ?
                new ObjectParameter("NationalityGlobalCountry_Id", nationalityGlobalCountry_Id) :
                new ObjectParameter("NationalityGlobalCountry_Id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var identificationTypeParameter = identificationType != null ?
                new ObjectParameter("IdentificationType", identificationType) :
                new ObjectParameter("IdentificationType", typeof(string));
    
            var identificationNumberParameter = identificationNumber != null ?
                new ObjectParameter("IdentificationNumber", identificationNumber) :
                new ObjectParameter("IdentificationNumber", typeof(string));
    
            var foreignLicenseParameter = foreignLicense.HasValue ?
                new ObjectParameter("ForeignLicense", foreignLicense) :
                new ObjectParameter("ForeignLicense", typeof(bool));
    
            var identificationNumberValidDateParameter = identificationNumberValidDate.HasValue ?
                new ObjectParameter("IdentificationNumberValidDate", identificationNumberValidDate) :
                new ObjectParameter("IdentificationNumberValidDate", typeof(System.DateTime));
    
            var invoiceTypeIdParameter = invoiceTypeId.HasValue ?
                new ObjectParameter("InvoiceTypeId", invoiceTypeId) :
                new ObjectParameter("InvoiceTypeId", typeof(int));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var annualIncomeParameter = annualIncome.HasValue ?
                new ObjectParameter("AnnualIncome", annualIncome) :
                new ObjectParameter("AnnualIncome", typeof(decimal));
    
            var socialReasonIdParameter = socialReasonId.HasValue ?
                new ObjectParameter("SocialReasonId", socialReasonId) :
                new ObjectParameter("SocialReasonId", typeof(int));
    
            var ownershipStructureIdParameter = ownershipStructureId.HasValue ?
                new ObjectParameter("OwnershipStructureId", ownershipStructureId) :
                new ObjectParameter("OwnershipStructureId", typeof(int));
    
            var identificationFinalBeneficiaryOptionsIdParameter = identificationFinalBeneficiaryOptionsId.HasValue ?
                new ObjectParameter("IdentificationFinalBeneficiaryOptionsId", identificationFinalBeneficiaryOptionsId) :
                new ObjectParameter("IdentificationFinalBeneficiaryOptionsId", typeof(int));
    
            var pepFormularyOptionsIdParameter = pepFormularyOptionsId.HasValue ?
                new ObjectParameter("PepFormularyOptionsId", pepFormularyOptionsId) :
                new ObjectParameter("PepFormularyOptionsId", typeof(int));
    
            var home_OwnerParameter = home_Owner.HasValue ?
                new ObjectParameter("Home_Owner", home_Owner) :
                new ObjectParameter("Home_Owner", typeof(bool));
    
            var qtyPersonsDependParameter = qtyPersonsDepend.HasValue ?
                new ObjectParameter("QtyPersonsDepend", qtyPersonsDepend) :
                new ObjectParameter("QtyPersonsDepend", typeof(int));
    
            var qtyEmployeesParameter = qtyEmployees.HasValue ?
                new ObjectParameter("QtyEmployees", qtyEmployees) :
                new ObjectParameter("QtyEmployees", typeof(int));
    
            var linkedParameter = linked != null ?
                new ObjectParameter("Linked", linked) :
                new ObjectParameter("Linked", typeof(string));
    
            var segmentParameter = segment != null ?
                new ObjectParameter("Segment", segment) :
                new ObjectParameter("Segment", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var workAddressParameter = workAddress != null ?
                new ObjectParameter("WorkAddress", workAddress) :
                new ObjectParameter("WorkAddress", typeof(string));
    
            var placeOfBirthParameter = placeOfBirth != null ?
                new ObjectParameter("PlaceOfBirth", placeOfBirth) :
                new ObjectParameter("PlaceOfBirth", typeof(string));
    
            var typeOfPersonParameter = typeOfPerson.HasValue ?
                new ObjectParameter("TypeOfPerson", typeOfPerson) :
                new ObjectParameter("TypeOfPerson", typeof(int));
    
            var managerNameParameter = managerName != null ?
                new ObjectParameter("ManagerName", managerName) :
                new ObjectParameter("ManagerName", typeof(string));
    
            var managerPepOptionIdParameter = managerPepOptionId.HasValue ?
                new ObjectParameter("ManagerPepOptionId", managerPepOptionId) :
                new ObjectParameter("ManagerPepOptionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_PERSONS_Result>("SP_SET_PERSONS", idParameter, firstNameParameter, secondNameParameter, firstSurnameParameter, secondSurnameParameter, dateOfBirthParameter, isPrincipalParameter, addressParameter, phoneNumberParameter, mobileParameter, workPhoneParameter, maritalStatusParameter, jobParameter, companyParameter, yearsInCompanyParameter, sexParameter, country_IdParameter, domesticreg_IdParameter, state_Prov_IdParameter, city_IdParameter, nationalityGlobalCountry_IdParameter, emailParameter, identificationTypeParameter, identificationNumberParameter, foreignLicenseParameter, identificationNumberValidDateParameter, invoiceTypeIdParameter, postalCodeParameter, annualIncomeParameter, socialReasonIdParameter, ownershipStructureIdParameter, identificationFinalBeneficiaryOptionsIdParameter, pepFormularyOptionsIdParameter, home_OwnerParameter, qtyPersonsDependParameter, qtyEmployeesParameter, linkedParameter, segmentParameter, faxParameter, uRLParameter, userIdParameter, workAddressParameter, placeOfBirthParameter, typeOfPersonParameter, managerNameParameter, managerPepOptionIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_REQUIREMENT_DOC_Result> SP_GET_QUOTATION_REQUIREMENT_DOC(Nullable<int> quotation_Id, Nullable<int> document_Id)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            var document_IdParameter = document_Id.HasValue ?
                new ObjectParameter("Document_Id", document_Id) :
                new ObjectParameter("Document_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_REQUIREMENT_DOC_Result>("SP_GET_QUOTATION_REQUIREMENT_DOC", quotation_IdParameter, document_IdParameter);
        }
    
        public virtual int SP_SET_QUOTATION_REQUIREMENT_DELETE(Nullable<int> quotation_Id, Nullable<int> document_Id, Nullable<int> userId)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            var document_IdParameter = document_Id.HasValue ?
                new ObjectParameter("Document_Id", document_Id) :
                new ObjectParameter("Document_Id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_QUOTATION_REQUIREMENT_DELETE", quotation_IdParameter, document_IdParameter, userIdParameter);
        }
    
        public virtual int SP_SET_QUOTATION_REQUIREMENT_INSERT(Nullable<int> quotation_Id, Nullable<int> document_Id, Nullable<int> requirement_Type_Id, Nullable<int> vehicle_Id, Nullable<int> person_Id, byte[] document_Binary, string document_Name, Nullable<int> userId)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            var document_IdParameter = document_Id.HasValue ?
                new ObjectParameter("Document_Id", document_Id) :
                new ObjectParameter("Document_Id", typeof(int));
    
            var requirement_Type_IdParameter = requirement_Type_Id.HasValue ?
                new ObjectParameter("Requirement_Type_Id", requirement_Type_Id) :
                new ObjectParameter("Requirement_Type_Id", typeof(int));
    
            var vehicle_IdParameter = vehicle_Id.HasValue ?
                new ObjectParameter("Vehicle_Id", vehicle_Id) :
                new ObjectParameter("Vehicle_Id", typeof(int));
    
            var person_IdParameter = person_Id.HasValue ?
                new ObjectParameter("Person_Id", person_Id) :
                new ObjectParameter("Person_Id", typeof(int));
    
            var document_BinaryParameter = document_Binary != null ?
                new ObjectParameter("Document_Binary", document_Binary) :
                new ObjectParameter("Document_Binary", typeof(byte[]));
    
            var document_NameParameter = document_Name != null ?
                new ObjectParameter("Document_Name", document_Name) :
                new ObjectParameter("Document_Name", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_QUOTATION_REQUIREMENT_INSERT", quotation_IdParameter, document_IdParameter, requirement_Type_IdParameter, vehicle_IdParameter, person_IdParameter, document_BinaryParameter, document_NameParameter, userIdParameter);
        }
    
        public virtual int SP_SET_QUOTATION_REQUIREMENT_VALIDATED(Nullable<int> quotation_Id, Nullable<int> document_Id, Nullable<bool> validated, Nullable<int> userId)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            var document_IdParameter = document_Id.HasValue ?
                new ObjectParameter("Document_Id", document_Id) :
                new ObjectParameter("Document_Id", typeof(int));
    
            var validatedParameter = validated.HasValue ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_QUOTATION_REQUIREMENT_VALIDATED", quotation_IdParameter, document_IdParameter, validatedParameter, userIdParameter);
        }
    
        public virtual int SP_SET_QUOTATION_REQUIRED_DOCUMENT_TO_GLOBAL(Nullable<int> quotationID, Nullable<int> userId)
        {
            var quotationIDParameter = quotationID.HasValue ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_QUOTATION_REQUIRED_DOCUMENT_TO_GLOBAL", quotationIDParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GET_PRODUCTEXCLUDE_BY_AGENT_Result> GET_PRODUCTEXCLUDE_BY_AGENT(string agent_Code)
        {
            var agent_CodeParameter = agent_Code != null ?
                new ObjectParameter("Agent_Code", agent_Code) :
                new ObjectParameter("Agent_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PRODUCTEXCLUDE_BY_AGENT_Result>("GET_PRODUCTEXCLUDE_BY_AGENT", agent_CodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_REQUEST_CHANGES_Result> SP_GET_REQUEST_CHANGES(string policy_Number, Nullable<bool> isLasRecord, Nullable<int> condition_Id)
        {
            var policy_NumberParameter = policy_Number != null ?
                new ObjectParameter("Policy_Number", policy_Number) :
                new ObjectParameter("Policy_Number", typeof(string));
    
            var isLasRecordParameter = isLasRecord.HasValue ?
                new ObjectParameter("IsLasRecord", isLasRecord) :
                new ObjectParameter("IsLasRecord", typeof(bool));
    
            var condition_IdParameter = condition_Id.HasValue ?
                new ObjectParameter("Condition_Id", condition_Id) :
                new ObjectParameter("Condition_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_REQUEST_CHANGES_Result>("SP_GET_REQUEST_CHANGES", policy_NumberParameter, isLasRecordParameter, condition_IdParameter);
        }
    
        public virtual ObjectResult<SP_SET_REQUEST_CHANGES_Result> SP_SET_REQUEST_CHANGES(Nullable<int> change_Id, string policy_Number, Nullable<int> condition_Id, Nullable<int> vehicle_Secuence, string old_Value, string new_Value, string source, Nullable<int> create_User)
        {
            var change_IdParameter = change_Id.HasValue ?
                new ObjectParameter("Change_Id", change_Id) :
                new ObjectParameter("Change_Id", typeof(int));
    
            var policy_NumberParameter = policy_Number != null ?
                new ObjectParameter("Policy_Number", policy_Number) :
                new ObjectParameter("Policy_Number", typeof(string));
    
            var condition_IdParameter = condition_Id.HasValue ?
                new ObjectParameter("Condition_Id", condition_Id) :
                new ObjectParameter("Condition_Id", typeof(int));
    
            var vehicle_SecuenceParameter = vehicle_Secuence.HasValue ?
                new ObjectParameter("Vehicle_Secuence", vehicle_Secuence) :
                new ObjectParameter("Vehicle_Secuence", typeof(int));
    
            var old_ValueParameter = old_Value != null ?
                new ObjectParameter("Old_Value", old_Value) :
                new ObjectParameter("Old_Value", typeof(string));
    
            var new_ValueParameter = new_Value != null ?
                new ObjectParameter("New_Value", new_Value) :
                new ObjectParameter("New_Value", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var create_UserParameter = create_User.HasValue ?
                new ObjectParameter("Create_User", create_User) :
                new ObjectParameter("Create_User", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_REQUEST_CHANGES_Result>("SP_SET_REQUEST_CHANGES", change_IdParameter, policy_NumberParameter, condition_IdParameter, vehicle_SecuenceParameter, old_ValueParameter, new_ValueParameter, sourceParameter, create_UserParameter);
        }
    
        public virtual ObjectResult<SP_SET_IDENTIFICATION_FINAL_BENEFICIARY_Result> SP_SET_IDENTIFICATION_FINAL_BENEFICIARY(Nullable<int> id, Nullable<int> personsID, string name, Nullable<decimal> percentageParticipation, Nullable<int> userId, Nullable<bool> isPEP, Nullable<int> pepFormularyOptionsId, Nullable<int> identificationTypeId, string identificationNumber, Nullable<int> nationalityCountryId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var personsIDParameter = personsID.HasValue ?
                new ObjectParameter("PersonsID", personsID) :
                new ObjectParameter("PersonsID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var percentageParticipationParameter = percentageParticipation.HasValue ?
                new ObjectParameter("PercentageParticipation", percentageParticipation) :
                new ObjectParameter("PercentageParticipation", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var isPEPParameter = isPEP.HasValue ?
                new ObjectParameter("IsPEP", isPEP) :
                new ObjectParameter("IsPEP", typeof(bool));
    
            var pepFormularyOptionsIdParameter = pepFormularyOptionsId.HasValue ?
                new ObjectParameter("PepFormularyOptionsId", pepFormularyOptionsId) :
                new ObjectParameter("PepFormularyOptionsId", typeof(int));
    
            var identificationTypeIdParameter = identificationTypeId.HasValue ?
                new ObjectParameter("IdentificationTypeId", identificationTypeId) :
                new ObjectParameter("IdentificationTypeId", typeof(int));
    
            var identificationNumberParameter = identificationNumber != null ?
                new ObjectParameter("IdentificationNumber", identificationNumber) :
                new ObjectParameter("IdentificationNumber", typeof(string));
    
            var nationalityCountryIdParameter = nationalityCountryId.HasValue ?
                new ObjectParameter("NationalityCountryId", nationalityCountryId) :
                new ObjectParameter("NationalityCountryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_IDENTIFICATION_FINAL_BENEFICIARY_Result>("SP_SET_IDENTIFICATION_FINAL_BENEFICIARY", idParameter, personsIDParameter, nameParameter, percentageParticipationParameter, userIdParameter, isPEPParameter, pepFormularyOptionsIdParameter, identificationTypeIdParameter, identificationNumberParameter, nationalityCountryIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_VEHICLE_FUEL_TYPE_Result> SP_GET_VEHICLE_FUEL_TYPE(Nullable<int> vehicleFuelTypeIdSysflex)
        {
            var vehicleFuelTypeIdSysflexParameter = vehicleFuelTypeIdSysflex.HasValue ?
                new ObjectParameter("VehicleFuelTypeIdSysflex", vehicleFuelTypeIdSysflex) :
                new ObjectParameter("VehicleFuelTypeIdSysflex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VEHICLE_FUEL_TYPE_Result>("SP_GET_VEHICLE_FUEL_TYPE", vehicleFuelTypeIdSysflexParameter);
        }
    
        public virtual ObjectResult<SP_GET_VEHICLE_FUEL_TYPE_BY_MODEL_Result> SP_GET_VEHICLE_FUEL_TYPE_BY_MODEL(Nullable<int> vehicleFuelTypeIdSysflex, Nullable<int> make_Id, Nullable<int> model_Id)
        {
            var vehicleFuelTypeIdSysflexParameter = vehicleFuelTypeIdSysflex.HasValue ?
                new ObjectParameter("VehicleFuelTypeIdSysflex", vehicleFuelTypeIdSysflex) :
                new ObjectParameter("VehicleFuelTypeIdSysflex", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            var model_IdParameter = model_Id.HasValue ?
                new ObjectParameter("Model_Id", model_Id) :
                new ObjectParameter("Model_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VEHICLE_FUEL_TYPE_BY_MODEL_Result>("SP_GET_VEHICLE_FUEL_TYPE_BY_MODEL", vehicleFuelTypeIdSysflexParameter, make_IdParameter, model_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_COUNTRY_BY_UBICATION_ID_Result> SP_GET_COUNTRY_BY_UBICATION_ID(Nullable<int> ubicationID)
        {
            var ubicationIDParameter = ubicationID.HasValue ?
                new ObjectParameter("UbicationID", ubicationID) :
                new ObjectParameter("UbicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COUNTRY_BY_UBICATION_ID_Result>("SP_GET_COUNTRY_BY_UBICATION_ID", ubicationIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_QUOTATION_REQUIREMENT_Result> SP_GET_QUOTATION_REQUIREMENT(Nullable<int> quotation_Id, string riskLevel)
        {
            var quotation_IdParameter = quotation_Id.HasValue ?
                new ObjectParameter("Quotation_Id", quotation_Id) :
                new ObjectParameter("Quotation_Id", typeof(int));
    
            var riskLevelParameter = riskLevel != null ?
                new ObjectParameter("RiskLevel", riskLevel) :
                new ObjectParameter("RiskLevel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUOTATION_REQUIREMENT_Result>("SP_GET_QUOTATION_REQUIREMENT", quotation_IdParameter, riskLevelParameter);
        }
    
        public virtual ObjectResult<SP_SET_QUOTATION_Result> SP_SET_QUOTATION(Nullable<int> id, string productNumber, Nullable<int> quotationDailyNumber, string quotationNumber, string policyNumber, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> paymentFrequencyId, string paymentFrequency, Nullable<int> paymentWay, Nullable<decimal> amountToPayEnteredByUser, string cardnetLastResponseCode, string cardnetLastResponseMessage, string cardnetAuthorizationCode, Nullable<int> cardnetPaymentStatus, Nullable<decimal> totalPrime, Nullable<decimal> totalISC, Nullable<decimal> iSCPercentage, Nullable<decimal> totalDiscount, Nullable<decimal> discountPercentage, Nullable<decimal> quotationCoreIdNumber, Nullable<decimal> clientCoreIdNumber, Nullable<bool> sendInspectionOnly, Nullable<byte> status, Nullable<int> termType_Id, Nullable<int> user_Id, string achName, string achAccountHolderGovId, string achBankRoutingNumber, Nullable<int> achType, string achNumber, string principalFullName, Nullable<int> businessLine_Id, string quotationProduct, string principalIdentificationNumber, Nullable<int> lastStepVisited, string currencySymbol, Nullable<int> currency_Id, Nullable<bool> messaging, Nullable<bool> declined, Nullable<decimal> flotillaDiscountPercent, Nullable<decimal> totalFlotillaDiscount, string quotationCoreNumber, Nullable<int> qtyDayOfVigency, Nullable<decimal> monthlyPayment, Nullable<bool> financed, Nullable<int> period, Nullable<int> credit_Card_Type_Id, string credit_Card_Number_Key, string credit_Card_Number, Nullable<int> expiration_Date_Year, Nullable<int> expiration_Date_Month, string card_Holder, Nullable<bool> domiciliation, Nullable<int> modi_UserId, Nullable<int> request_Type_Id, Nullable<bool> domicileInitialPayment, string policy_No_Main, Nullable<bool> isExternal, string couponCode, Nullable<decimal> couponPercentageDiscount, Nullable<int> couponProspectId, string riskLevel, Nullable<int> contactFormId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));
    
            var quotationDailyNumberParameter = quotationDailyNumber.HasValue ?
                new ObjectParameter("QuotationDailyNumber", quotationDailyNumber) :
                new ObjectParameter("QuotationDailyNumber", typeof(int));
    
            var quotationNumberParameter = quotationNumber != null ?
                new ObjectParameter("QuotationNumber", quotationNumber) :
                new ObjectParameter("QuotationNumber", typeof(string));
    
            var policyNumberParameter = policyNumber != null ?
                new ObjectParameter("PolicyNumber", policyNumber) :
                new ObjectParameter("PolicyNumber", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var paymentFrequencyIdParameter = paymentFrequencyId.HasValue ?
                new ObjectParameter("PaymentFrequencyId", paymentFrequencyId) :
                new ObjectParameter("PaymentFrequencyId", typeof(int));
    
            var paymentFrequencyParameter = paymentFrequency != null ?
                new ObjectParameter("PaymentFrequency", paymentFrequency) :
                new ObjectParameter("PaymentFrequency", typeof(string));
    
            var paymentWayParameter = paymentWay.HasValue ?
                new ObjectParameter("PaymentWay", paymentWay) :
                new ObjectParameter("PaymentWay", typeof(int));
    
            var amountToPayEnteredByUserParameter = amountToPayEnteredByUser.HasValue ?
                new ObjectParameter("AmountToPayEnteredByUser", amountToPayEnteredByUser) :
                new ObjectParameter("AmountToPayEnteredByUser", typeof(decimal));
    
            var cardnetLastResponseCodeParameter = cardnetLastResponseCode != null ?
                new ObjectParameter("CardnetLastResponseCode", cardnetLastResponseCode) :
                new ObjectParameter("CardnetLastResponseCode", typeof(string));
    
            var cardnetLastResponseMessageParameter = cardnetLastResponseMessage != null ?
                new ObjectParameter("CardnetLastResponseMessage", cardnetLastResponseMessage) :
                new ObjectParameter("CardnetLastResponseMessage", typeof(string));
    
            var cardnetAuthorizationCodeParameter = cardnetAuthorizationCode != null ?
                new ObjectParameter("CardnetAuthorizationCode", cardnetAuthorizationCode) :
                new ObjectParameter("CardnetAuthorizationCode", typeof(string));
    
            var cardnetPaymentStatusParameter = cardnetPaymentStatus.HasValue ?
                new ObjectParameter("CardnetPaymentStatus", cardnetPaymentStatus) :
                new ObjectParameter("CardnetPaymentStatus", typeof(int));
    
            var totalPrimeParameter = totalPrime.HasValue ?
                new ObjectParameter("TotalPrime", totalPrime) :
                new ObjectParameter("TotalPrime", typeof(decimal));
    
            var totalISCParameter = totalISC.HasValue ?
                new ObjectParameter("TotalISC", totalISC) :
                new ObjectParameter("TotalISC", typeof(decimal));
    
            var iSCPercentageParameter = iSCPercentage.HasValue ?
                new ObjectParameter("ISCPercentage", iSCPercentage) :
                new ObjectParameter("ISCPercentage", typeof(decimal));
    
            var totalDiscountParameter = totalDiscount.HasValue ?
                new ObjectParameter("TotalDiscount", totalDiscount) :
                new ObjectParameter("TotalDiscount", typeof(decimal));
    
            var discountPercentageParameter = discountPercentage.HasValue ?
                new ObjectParameter("DiscountPercentage", discountPercentage) :
                new ObjectParameter("DiscountPercentage", typeof(decimal));
    
            var quotationCoreIdNumberParameter = quotationCoreIdNumber.HasValue ?
                new ObjectParameter("QuotationCoreIdNumber", quotationCoreIdNumber) :
                new ObjectParameter("QuotationCoreIdNumber", typeof(decimal));
    
            var clientCoreIdNumberParameter = clientCoreIdNumber.HasValue ?
                new ObjectParameter("ClientCoreIdNumber", clientCoreIdNumber) :
                new ObjectParameter("ClientCoreIdNumber", typeof(decimal));
    
            var sendInspectionOnlyParameter = sendInspectionOnly.HasValue ?
                new ObjectParameter("SendInspectionOnly", sendInspectionOnly) :
                new ObjectParameter("SendInspectionOnly", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var termType_IdParameter = termType_Id.HasValue ?
                new ObjectParameter("TermType_Id", termType_Id) :
                new ObjectParameter("TermType_Id", typeof(int));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var achNameParameter = achName != null ?
                new ObjectParameter("AchName", achName) :
                new ObjectParameter("AchName", typeof(string));
    
            var achAccountHolderGovIdParameter = achAccountHolderGovId != null ?
                new ObjectParameter("AchAccountHolderGovId", achAccountHolderGovId) :
                new ObjectParameter("AchAccountHolderGovId", typeof(string));
    
            var achBankRoutingNumberParameter = achBankRoutingNumber != null ?
                new ObjectParameter("AchBankRoutingNumber", achBankRoutingNumber) :
                new ObjectParameter("AchBankRoutingNumber", typeof(string));
    
            var achTypeParameter = achType.HasValue ?
                new ObjectParameter("AchType", achType) :
                new ObjectParameter("AchType", typeof(int));
    
            var achNumberParameter = achNumber != null ?
                new ObjectParameter("AchNumber", achNumber) :
                new ObjectParameter("AchNumber", typeof(string));
    
            var principalFullNameParameter = principalFullName != null ?
                new ObjectParameter("PrincipalFullName", principalFullName) :
                new ObjectParameter("PrincipalFullName", typeof(string));
    
            var businessLine_IdParameter = businessLine_Id.HasValue ?
                new ObjectParameter("BusinessLine_Id", businessLine_Id) :
                new ObjectParameter("BusinessLine_Id", typeof(int));
    
            var quotationProductParameter = quotationProduct != null ?
                new ObjectParameter("QuotationProduct", quotationProduct) :
                new ObjectParameter("QuotationProduct", typeof(string));
    
            var principalIdentificationNumberParameter = principalIdentificationNumber != null ?
                new ObjectParameter("PrincipalIdentificationNumber", principalIdentificationNumber) :
                new ObjectParameter("PrincipalIdentificationNumber", typeof(string));
    
            var lastStepVisitedParameter = lastStepVisited.HasValue ?
                new ObjectParameter("LastStepVisited", lastStepVisited) :
                new ObjectParameter("LastStepVisited", typeof(int));
    
            var currencySymbolParameter = currencySymbol != null ?
                new ObjectParameter("CurrencySymbol", currencySymbol) :
                new ObjectParameter("CurrencySymbol", typeof(string));
    
            var currency_IdParameter = currency_Id.HasValue ?
                new ObjectParameter("Currency_Id", currency_Id) :
                new ObjectParameter("Currency_Id", typeof(int));
    
            var messagingParameter = messaging.HasValue ?
                new ObjectParameter("Messaging", messaging) :
                new ObjectParameter("Messaging", typeof(bool));
    
            var declinedParameter = declined.HasValue ?
                new ObjectParameter("Declined", declined) :
                new ObjectParameter("Declined", typeof(bool));
    
            var flotillaDiscountPercentParameter = flotillaDiscountPercent.HasValue ?
                new ObjectParameter("FlotillaDiscountPercent", flotillaDiscountPercent) :
                new ObjectParameter("FlotillaDiscountPercent", typeof(decimal));
    
            var totalFlotillaDiscountParameter = totalFlotillaDiscount.HasValue ?
                new ObjectParameter("TotalFlotillaDiscount", totalFlotillaDiscount) :
                new ObjectParameter("TotalFlotillaDiscount", typeof(decimal));
    
            var quotationCoreNumberParameter = quotationCoreNumber != null ?
                new ObjectParameter("QuotationCoreNumber", quotationCoreNumber) :
                new ObjectParameter("QuotationCoreNumber", typeof(string));
    
            var qtyDayOfVigencyParameter = qtyDayOfVigency.HasValue ?
                new ObjectParameter("qtyDayOfVigency", qtyDayOfVigency) :
                new ObjectParameter("qtyDayOfVigency", typeof(int));
    
            var monthlyPaymentParameter = monthlyPayment.HasValue ?
                new ObjectParameter("MonthlyPayment", monthlyPayment) :
                new ObjectParameter("MonthlyPayment", typeof(decimal));
    
            var financedParameter = financed.HasValue ?
                new ObjectParameter("Financed", financed) :
                new ObjectParameter("Financed", typeof(bool));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            var credit_Card_Type_IdParameter = credit_Card_Type_Id.HasValue ?
                new ObjectParameter("Credit_Card_Type_Id", credit_Card_Type_Id) :
                new ObjectParameter("Credit_Card_Type_Id", typeof(int));
    
            var credit_Card_Number_KeyParameter = credit_Card_Number_Key != null ?
                new ObjectParameter("Credit_Card_Number_Key", credit_Card_Number_Key) :
                new ObjectParameter("Credit_Card_Number_Key", typeof(string));
    
            var credit_Card_NumberParameter = credit_Card_Number != null ?
                new ObjectParameter("Credit_Card_Number", credit_Card_Number) :
                new ObjectParameter("Credit_Card_Number", typeof(string));
    
            var expiration_Date_YearParameter = expiration_Date_Year.HasValue ?
                new ObjectParameter("Expiration_Date_Year", expiration_Date_Year) :
                new ObjectParameter("Expiration_Date_Year", typeof(int));
    
            var expiration_Date_MonthParameter = expiration_Date_Month.HasValue ?
                new ObjectParameter("Expiration_Date_Month", expiration_Date_Month) :
                new ObjectParameter("Expiration_Date_Month", typeof(int));
    
            var card_HolderParameter = card_Holder != null ?
                new ObjectParameter("Card_Holder", card_Holder) :
                new ObjectParameter("Card_Holder", typeof(string));
    
            var domiciliationParameter = domiciliation.HasValue ?
                new ObjectParameter("Domiciliation", domiciliation) :
                new ObjectParameter("Domiciliation", typeof(bool));
    
            var modi_UserIdParameter = modi_UserId.HasValue ?
                new ObjectParameter("Modi_UserId", modi_UserId) :
                new ObjectParameter("Modi_UserId", typeof(int));
    
            var request_Type_IdParameter = request_Type_Id.HasValue ?
                new ObjectParameter("Request_Type_Id", request_Type_Id) :
                new ObjectParameter("Request_Type_Id", typeof(int));
    
            var domicileInitialPaymentParameter = domicileInitialPayment.HasValue ?
                new ObjectParameter("DomicileInitialPayment", domicileInitialPayment) :
                new ObjectParameter("DomicileInitialPayment", typeof(bool));
    
            var policy_No_MainParameter = policy_No_Main != null ?
                new ObjectParameter("Policy_No_Main", policy_No_Main) :
                new ObjectParameter("Policy_No_Main", typeof(string));
    
            var isExternalParameter = isExternal.HasValue ?
                new ObjectParameter("isExternal", isExternal) :
                new ObjectParameter("isExternal", typeof(bool));
    
            var couponCodeParameter = couponCode != null ?
                new ObjectParameter("CouponCode", couponCode) :
                new ObjectParameter("CouponCode", typeof(string));
    
            var couponPercentageDiscountParameter = couponPercentageDiscount.HasValue ?
                new ObjectParameter("CouponPercentageDiscount", couponPercentageDiscount) :
                new ObjectParameter("CouponPercentageDiscount", typeof(decimal));
    
            var couponProspectIdParameter = couponProspectId.HasValue ?
                new ObjectParameter("CouponProspectId", couponProspectId) :
                new ObjectParameter("CouponProspectId", typeof(int));
    
            var riskLevelParameter = riskLevel != null ?
                new ObjectParameter("RiskLevel", riskLevel) :
                new ObjectParameter("RiskLevel", typeof(string));
    
            var contactFormIdParameter = contactFormId.HasValue ?
                new ObjectParameter("ContactFormId", contactFormId) :
                new ObjectParameter("ContactFormId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_QUOTATION_Result>("SP_SET_QUOTATION", idParameter, productNumberParameter, quotationDailyNumberParameter, quotationNumberParameter, policyNumberParameter, startDateParameter, endDateParameter, paymentFrequencyIdParameter, paymentFrequencyParameter, paymentWayParameter, amountToPayEnteredByUserParameter, cardnetLastResponseCodeParameter, cardnetLastResponseMessageParameter, cardnetAuthorizationCodeParameter, cardnetPaymentStatusParameter, totalPrimeParameter, totalISCParameter, iSCPercentageParameter, totalDiscountParameter, discountPercentageParameter, quotationCoreIdNumberParameter, clientCoreIdNumberParameter, sendInspectionOnlyParameter, statusParameter, termType_IdParameter, user_IdParameter, achNameParameter, achAccountHolderGovIdParameter, achBankRoutingNumberParameter, achTypeParameter, achNumberParameter, principalFullNameParameter, businessLine_IdParameter, quotationProductParameter, principalIdentificationNumberParameter, lastStepVisitedParameter, currencySymbolParameter, currency_IdParameter, messagingParameter, declinedParameter, flotillaDiscountPercentParameter, totalFlotillaDiscountParameter, quotationCoreNumberParameter, qtyDayOfVigencyParameter, monthlyPaymentParameter, financedParameter, periodParameter, credit_Card_Type_IdParameter, credit_Card_Number_KeyParameter, credit_Card_NumberParameter, expiration_Date_YearParameter, expiration_Date_MonthParameter, card_HolderParameter, domiciliationParameter, modi_UserIdParameter, request_Type_IdParameter, domicileInitialPaymentParameter, policy_No_MainParameter, isExternalParameter, couponCodeParameter, couponPercentageDiscountParameter, couponProspectIdParameter, riskLevelParameter, contactFormIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_COVERAGE_DETAIL_BROCHURE_Result> SP_GET_COVERAGE_DETAIL_BROCHURE(Nullable<int> coverageBrochure_Id)
        {
            var coverageBrochure_IdParameter = coverageBrochure_Id.HasValue ?
                new ObjectParameter("CoverageBrochure_Id", coverageBrochure_Id) :
                new ObjectParameter("CoverageBrochure_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COVERAGE_DETAIL_BROCHURE_Result>("SP_GET_COVERAGE_DETAIL_BROCHURE", coverageBrochure_IdParameter);
        }
    
        public virtual ObjectResult<SP_GET_COVERAGE_EXPLICATION_Result> SP_GET_COVERAGE_EXPLICATION(Nullable<int> coverageId)
        {
            var coverageIdParameter = coverageId.HasValue ?
                new ObjectParameter("CoverageId", coverageId) :
                new ObjectParameter("CoverageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COVERAGE_EXPLICATION_Result>("SP_GET_COVERAGE_EXPLICATION", coverageIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_COVERAGE_DETAILS_Result> SP_SET_COVERAGE_DETAILS(Nullable<int> id, Nullable<bool> isSelected, Nullable<int> coverageDetailCoreId, string name, Nullable<decimal> amount, Nullable<decimal> minDeductible, Nullable<int> selfDamagesToProductLimits, Nullable<int> thirdPartyToProductLimits, Nullable<int> serviceType_Id, Nullable<decimal> limit, Nullable<int> userId, Nullable<decimal> deductible, Nullable<decimal> coveragePercentage, string baseDeductible)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var isSelectedParameter = isSelected.HasValue ?
                new ObjectParameter("IsSelected", isSelected) :
                new ObjectParameter("IsSelected", typeof(bool));
    
            var coverageDetailCoreIdParameter = coverageDetailCoreId.HasValue ?
                new ObjectParameter("CoverageDetailCoreId", coverageDetailCoreId) :
                new ObjectParameter("CoverageDetailCoreId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var minDeductibleParameter = minDeductible.HasValue ?
                new ObjectParameter("MinDeductible", minDeductible) :
                new ObjectParameter("MinDeductible", typeof(decimal));
    
            var selfDamagesToProductLimitsParameter = selfDamagesToProductLimits.HasValue ?
                new ObjectParameter("SelfDamagesToProductLimits", selfDamagesToProductLimits) :
                new ObjectParameter("SelfDamagesToProductLimits", typeof(int));
    
            var thirdPartyToProductLimitsParameter = thirdPartyToProductLimits.HasValue ?
                new ObjectParameter("ThirdPartyToProductLimits", thirdPartyToProductLimits) :
                new ObjectParameter("ThirdPartyToProductLimits", typeof(int));
    
            var serviceType_IdParameter = serviceType_Id.HasValue ?
                new ObjectParameter("ServiceType_Id", serviceType_Id) :
                new ObjectParameter("ServiceType_Id", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(decimal));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var deductibleParameter = deductible.HasValue ?
                new ObjectParameter("Deductible", deductible) :
                new ObjectParameter("Deductible", typeof(decimal));
    
            var coveragePercentageParameter = coveragePercentage.HasValue ?
                new ObjectParameter("CoveragePercentage", coveragePercentage) :
                new ObjectParameter("CoveragePercentage", typeof(decimal));
    
            var baseDeductibleParameter = baseDeductible != null ?
                new ObjectParameter("BaseDeductible", baseDeductible) :
                new ObjectParameter("BaseDeductible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_COVERAGE_DETAILS_Result>("SP_SET_COVERAGE_DETAILS", idParameter, isSelectedParameter, coverageDetailCoreIdParameter, nameParameter, amountParameter, minDeductibleParameter, selfDamagesToProductLimitsParameter, thirdPartyToProductLimitsParameter, serviceType_IdParameter, limitParameter, userIdParameter, deductibleParameter, coveragePercentageParameter, baseDeductibleParameter);
        }
    }
}
