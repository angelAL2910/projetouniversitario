//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace STL.POS.Frontend.Web {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("POS_SiteDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class POS_SiteDS : global::System.Data.DataSet {
        
        private @__MigrationHistoryDataTable table__MigrationHistory;
        
        private ADDITIONAL_PRODUCTSDataTable tableADDITIONAL_PRODUCTS;
        
        private DRIVERSDataTable tableDRIVERS;
        
        private PRODUCT_LIMITSDataTable tablePRODUCT_LIMITS;
        
        private QUOTATIONDataTable tableQUOTATION;
        
        private ST_CITYDataTable tableST_CITY;
        
        private ST_COUNTRYDataTable tableST_COUNTRY;
        
        private ST_GLOBAL_CITYDataTable tableST_GLOBAL_CITY;
        
        private ST_GLOBAL_COUNTRYDataTable tableST_GLOBAL_COUNTRY;
        
        private ST_VEHICLE_MAKEDataTable tableST_VEHICLE_MAKE;
        
        private ST_VEHICLE_MODELDataTable tableST_VEHICLE_MODEL;
        
        private ST_VEHICLE_STOREDDataTable tableST_VEHICLE_STORED;
        
        private ST_VEHICLE_TYPEDataTable tableST_VEHICLE_TYPE;
        
        private ST_VEHICLE_TYPE_PRODUCTDataTable tableST_VEHICLE_TYPE_PRODUCT;
        
        private ST_VEHICLE_USAGEDataTable tableST_VEHICLE_USAGE;
        
        private ST_VEHICLE_VERSIONDataTable tableST_VEHICLE_VERSION;
        
        private TERM_TYPESDataTable tableTERM_TYPES;
        
        private VEHICLE_PRODUCTDataTable tableVEHICLE_PRODUCT;
        
        private global::System.Data.DataRelation _relationFK_POS_ADDITIONAL_PRODUCTS_POS_PRODUCT_LIMITS_ProductLimits_Id;
        
        private global::System.Data.DataRelation _relationFK_POS_DRIVERS_Global_ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_State_Prov_Id_City_City_Id;
        
        private global::System.Data.DataRelation _relationFK_POS_DRIVERS_Global_ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id;
        
        private global::System.Data.DataRelation _relationFK_POS_DRIVERS_POS_QUOTATION_QuotationId;
        
        private global::System.Data.DataRelation _relationFK_POS_PRODUCT_LIMITS_POS_VEHICLE_PRODUCT_VehicleProduct_Id;
        
        private global::System.Data.DataRelation _relationFK_POS_QUOTATION_POS_TERM_TYPES_TermType_Id;
        
        private global::System.Data.DataRelation relationFK_CITY_GLBLCITY;
        
        private global::System.Data.DataRelation relationFK_CNTRY_GLBLCNTRY;
        
        private global::System.Data.DataRelation _relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_MAKE_Make_Id;
        
        private global::System.Data.DataRelation _relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id;
        
        private global::System.Data.DataRelation _relationFK_Global_ST_VEHICLE_TYPE_PRODUCT_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id;
        
        private global::System.Data.DataRelation _relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_MODEL_Make_Id_Model_Id;
        
        private global::System.Data.DataRelation _relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id;
        
        private global::System.Data.DataRelation _relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_STORED_StoredId;
        
        private global::System.Data.DataRelation _relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_USAGE_UsageId;
        
        private global::System.Data.DataRelation _relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_VERSION_MakeId_ModelId_VersionId;
        
        private global::System.Data.DataRelation _relationFK_POS_VEHICLE_INFO_POS_DRIVERS_VehicleInfoId;
        
        private global::System.Data.DataRelation _relationFK_POS_VEHICLE_INFO_POS_QUOTATION_QuotationId;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public POS_SiteDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected POS_SiteDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["__MigrationHistory"] != null)) {
                    base.Tables.Add(new @__MigrationHistoryDataTable(ds.Tables["__MigrationHistory"]));
                }
                if ((ds.Tables["ADDITIONAL_PRODUCTS"] != null)) {
                    base.Tables.Add(new ADDITIONAL_PRODUCTSDataTable(ds.Tables["ADDITIONAL_PRODUCTS"]));
                }
                if ((ds.Tables["DRIVERS"] != null)) {
                    base.Tables.Add(new DRIVERSDataTable(ds.Tables["DRIVERS"]));
                }
                if ((ds.Tables["PRODUCT_LIMITS"] != null)) {
                    base.Tables.Add(new PRODUCT_LIMITSDataTable(ds.Tables["PRODUCT_LIMITS"]));
                }
                if ((ds.Tables["QUOTATION"] != null)) {
                    base.Tables.Add(new QUOTATIONDataTable(ds.Tables["QUOTATION"]));
                }
                if ((ds.Tables["ST_CITY"] != null)) {
                    base.Tables.Add(new ST_CITYDataTable(ds.Tables["ST_CITY"]));
                }
                if ((ds.Tables["ST_COUNTRY"] != null)) {
                    base.Tables.Add(new ST_COUNTRYDataTable(ds.Tables["ST_COUNTRY"]));
                }
                if ((ds.Tables["ST_GLOBAL_CITY"] != null)) {
                    base.Tables.Add(new ST_GLOBAL_CITYDataTable(ds.Tables["ST_GLOBAL_CITY"]));
                }
                if ((ds.Tables["ST_GLOBAL_COUNTRY"] != null)) {
                    base.Tables.Add(new ST_GLOBAL_COUNTRYDataTable(ds.Tables["ST_GLOBAL_COUNTRY"]));
                }
                if ((ds.Tables["ST_VEHICLE_MAKE"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_MAKEDataTable(ds.Tables["ST_VEHICLE_MAKE"]));
                }
                if ((ds.Tables["ST_VEHICLE_MODEL"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_MODELDataTable(ds.Tables["ST_VEHICLE_MODEL"]));
                }
                if ((ds.Tables["ST_VEHICLE_STORED"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_STOREDDataTable(ds.Tables["ST_VEHICLE_STORED"]));
                }
                if ((ds.Tables["ST_VEHICLE_TYPE"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_TYPEDataTable(ds.Tables["ST_VEHICLE_TYPE"]));
                }
                if ((ds.Tables["ST_VEHICLE_TYPE_PRODUCT"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_TYPE_PRODUCTDataTable(ds.Tables["ST_VEHICLE_TYPE_PRODUCT"]));
                }
                if ((ds.Tables["ST_VEHICLE_USAGE"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_USAGEDataTable(ds.Tables["ST_VEHICLE_USAGE"]));
                }
                if ((ds.Tables["ST_VEHICLE_VERSION"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_VERSIONDataTable(ds.Tables["ST_VEHICLE_VERSION"]));
                }
                if ((ds.Tables["TERM_TYPES"] != null)) {
                    base.Tables.Add(new TERM_TYPESDataTable(ds.Tables["TERM_TYPES"]));
                }
                if ((ds.Tables["VEHICLE_PRODUCT"] != null)) {
                    base.Tables.Add(new VEHICLE_PRODUCTDataTable(ds.Tables["VEHICLE_PRODUCT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public @__MigrationHistoryDataTable @__MigrationHistory {
            get {
                return this.table__MigrationHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ADDITIONAL_PRODUCTSDataTable ADDITIONAL_PRODUCTS {
            get {
                return this.tableADDITIONAL_PRODUCTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DRIVERSDataTable DRIVERS {
            get {
                return this.tableDRIVERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRODUCT_LIMITSDataTable PRODUCT_LIMITS {
            get {
                return this.tablePRODUCT_LIMITS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUOTATIONDataTable QUOTATION {
            get {
                return this.tableQUOTATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_CITYDataTable ST_CITY {
            get {
                return this.tableST_CITY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_COUNTRYDataTable ST_COUNTRY {
            get {
                return this.tableST_COUNTRY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_GLOBAL_CITYDataTable ST_GLOBAL_CITY {
            get {
                return this.tableST_GLOBAL_CITY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_GLOBAL_COUNTRYDataTable ST_GLOBAL_COUNTRY {
            get {
                return this.tableST_GLOBAL_COUNTRY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_VEHICLE_MAKEDataTable ST_VEHICLE_MAKE {
            get {
                return this.tableST_VEHICLE_MAKE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_VEHICLE_MODELDataTable ST_VEHICLE_MODEL {
            get {
                return this.tableST_VEHICLE_MODEL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_VEHICLE_STOREDDataTable ST_VEHICLE_STORED {
            get {
                return this.tableST_VEHICLE_STORED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_VEHICLE_TYPEDataTable ST_VEHICLE_TYPE {
            get {
                return this.tableST_VEHICLE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_VEHICLE_TYPE_PRODUCTDataTable ST_VEHICLE_TYPE_PRODUCT {
            get {
                return this.tableST_VEHICLE_TYPE_PRODUCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_VEHICLE_USAGEDataTable ST_VEHICLE_USAGE {
            get {
                return this.tableST_VEHICLE_USAGE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ST_VEHICLE_VERSIONDataTable ST_VEHICLE_VERSION {
            get {
                return this.tableST_VEHICLE_VERSION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TERM_TYPESDataTable TERM_TYPES {
            get {
                return this.tableTERM_TYPES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VEHICLE_PRODUCTDataTable VEHICLE_PRODUCT {
            get {
                return this.tableVEHICLE_PRODUCT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            POS_SiteDS cln = ((POS_SiteDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["__MigrationHistory"] != null)) {
                    base.Tables.Add(new @__MigrationHistoryDataTable(ds.Tables["__MigrationHistory"]));
                }
                if ((ds.Tables["ADDITIONAL_PRODUCTS"] != null)) {
                    base.Tables.Add(new ADDITIONAL_PRODUCTSDataTable(ds.Tables["ADDITIONAL_PRODUCTS"]));
                }
                if ((ds.Tables["DRIVERS"] != null)) {
                    base.Tables.Add(new DRIVERSDataTable(ds.Tables["DRIVERS"]));
                }
                if ((ds.Tables["PRODUCT_LIMITS"] != null)) {
                    base.Tables.Add(new PRODUCT_LIMITSDataTable(ds.Tables["PRODUCT_LIMITS"]));
                }
                if ((ds.Tables["QUOTATION"] != null)) {
                    base.Tables.Add(new QUOTATIONDataTable(ds.Tables["QUOTATION"]));
                }
                if ((ds.Tables["ST_CITY"] != null)) {
                    base.Tables.Add(new ST_CITYDataTable(ds.Tables["ST_CITY"]));
                }
                if ((ds.Tables["ST_COUNTRY"] != null)) {
                    base.Tables.Add(new ST_COUNTRYDataTable(ds.Tables["ST_COUNTRY"]));
                }
                if ((ds.Tables["ST_GLOBAL_CITY"] != null)) {
                    base.Tables.Add(new ST_GLOBAL_CITYDataTable(ds.Tables["ST_GLOBAL_CITY"]));
                }
                if ((ds.Tables["ST_GLOBAL_COUNTRY"] != null)) {
                    base.Tables.Add(new ST_GLOBAL_COUNTRYDataTable(ds.Tables["ST_GLOBAL_COUNTRY"]));
                }
                if ((ds.Tables["ST_VEHICLE_MAKE"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_MAKEDataTable(ds.Tables["ST_VEHICLE_MAKE"]));
                }
                if ((ds.Tables["ST_VEHICLE_MODEL"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_MODELDataTable(ds.Tables["ST_VEHICLE_MODEL"]));
                }
                if ((ds.Tables["ST_VEHICLE_STORED"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_STOREDDataTable(ds.Tables["ST_VEHICLE_STORED"]));
                }
                if ((ds.Tables["ST_VEHICLE_TYPE"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_TYPEDataTable(ds.Tables["ST_VEHICLE_TYPE"]));
                }
                if ((ds.Tables["ST_VEHICLE_TYPE_PRODUCT"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_TYPE_PRODUCTDataTable(ds.Tables["ST_VEHICLE_TYPE_PRODUCT"]));
                }
                if ((ds.Tables["ST_VEHICLE_USAGE"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_USAGEDataTable(ds.Tables["ST_VEHICLE_USAGE"]));
                }
                if ((ds.Tables["ST_VEHICLE_VERSION"] != null)) {
                    base.Tables.Add(new ST_VEHICLE_VERSIONDataTable(ds.Tables["ST_VEHICLE_VERSION"]));
                }
                if ((ds.Tables["TERM_TYPES"] != null)) {
                    base.Tables.Add(new TERM_TYPESDataTable(ds.Tables["TERM_TYPES"]));
                }
                if ((ds.Tables["VEHICLE_PRODUCT"] != null)) {
                    base.Tables.Add(new VEHICLE_PRODUCTDataTable(ds.Tables["VEHICLE_PRODUCT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.table__MigrationHistory = ((@__MigrationHistoryDataTable)(base.Tables["__MigrationHistory"]));
            if ((initTable == true)) {
                if ((this.table__MigrationHistory != null)) {
                    this.table__MigrationHistory.InitVars();
                }
            }
            this.tableADDITIONAL_PRODUCTS = ((ADDITIONAL_PRODUCTSDataTable)(base.Tables["ADDITIONAL_PRODUCTS"]));
            if ((initTable == true)) {
                if ((this.tableADDITIONAL_PRODUCTS != null)) {
                    this.tableADDITIONAL_PRODUCTS.InitVars();
                }
            }
            this.tableDRIVERS = ((DRIVERSDataTable)(base.Tables["DRIVERS"]));
            if ((initTable == true)) {
                if ((this.tableDRIVERS != null)) {
                    this.tableDRIVERS.InitVars();
                }
            }
            this.tablePRODUCT_LIMITS = ((PRODUCT_LIMITSDataTable)(base.Tables["PRODUCT_LIMITS"]));
            if ((initTable == true)) {
                if ((this.tablePRODUCT_LIMITS != null)) {
                    this.tablePRODUCT_LIMITS.InitVars();
                }
            }
            this.tableQUOTATION = ((QUOTATIONDataTable)(base.Tables["QUOTATION"]));
            if ((initTable == true)) {
                if ((this.tableQUOTATION != null)) {
                    this.tableQUOTATION.InitVars();
                }
            }
            this.tableST_CITY = ((ST_CITYDataTable)(base.Tables["ST_CITY"]));
            if ((initTable == true)) {
                if ((this.tableST_CITY != null)) {
                    this.tableST_CITY.InitVars();
                }
            }
            this.tableST_COUNTRY = ((ST_COUNTRYDataTable)(base.Tables["ST_COUNTRY"]));
            if ((initTable == true)) {
                if ((this.tableST_COUNTRY != null)) {
                    this.tableST_COUNTRY.InitVars();
                }
            }
            this.tableST_GLOBAL_CITY = ((ST_GLOBAL_CITYDataTable)(base.Tables["ST_GLOBAL_CITY"]));
            if ((initTable == true)) {
                if ((this.tableST_GLOBAL_CITY != null)) {
                    this.tableST_GLOBAL_CITY.InitVars();
                }
            }
            this.tableST_GLOBAL_COUNTRY = ((ST_GLOBAL_COUNTRYDataTable)(base.Tables["ST_GLOBAL_COUNTRY"]));
            if ((initTable == true)) {
                if ((this.tableST_GLOBAL_COUNTRY != null)) {
                    this.tableST_GLOBAL_COUNTRY.InitVars();
                }
            }
            this.tableST_VEHICLE_MAKE = ((ST_VEHICLE_MAKEDataTable)(base.Tables["ST_VEHICLE_MAKE"]));
            if ((initTable == true)) {
                if ((this.tableST_VEHICLE_MAKE != null)) {
                    this.tableST_VEHICLE_MAKE.InitVars();
                }
            }
            this.tableST_VEHICLE_MODEL = ((ST_VEHICLE_MODELDataTable)(base.Tables["ST_VEHICLE_MODEL"]));
            if ((initTable == true)) {
                if ((this.tableST_VEHICLE_MODEL != null)) {
                    this.tableST_VEHICLE_MODEL.InitVars();
                }
            }
            this.tableST_VEHICLE_STORED = ((ST_VEHICLE_STOREDDataTable)(base.Tables["ST_VEHICLE_STORED"]));
            if ((initTable == true)) {
                if ((this.tableST_VEHICLE_STORED != null)) {
                    this.tableST_VEHICLE_STORED.InitVars();
                }
            }
            this.tableST_VEHICLE_TYPE = ((ST_VEHICLE_TYPEDataTable)(base.Tables["ST_VEHICLE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableST_VEHICLE_TYPE != null)) {
                    this.tableST_VEHICLE_TYPE.InitVars();
                }
            }
            this.tableST_VEHICLE_TYPE_PRODUCT = ((ST_VEHICLE_TYPE_PRODUCTDataTable)(base.Tables["ST_VEHICLE_TYPE_PRODUCT"]));
            if ((initTable == true)) {
                if ((this.tableST_VEHICLE_TYPE_PRODUCT != null)) {
                    this.tableST_VEHICLE_TYPE_PRODUCT.InitVars();
                }
            }
            this.tableST_VEHICLE_USAGE = ((ST_VEHICLE_USAGEDataTable)(base.Tables["ST_VEHICLE_USAGE"]));
            if ((initTable == true)) {
                if ((this.tableST_VEHICLE_USAGE != null)) {
                    this.tableST_VEHICLE_USAGE.InitVars();
                }
            }
            this.tableST_VEHICLE_VERSION = ((ST_VEHICLE_VERSIONDataTable)(base.Tables["ST_VEHICLE_VERSION"]));
            if ((initTable == true)) {
                if ((this.tableST_VEHICLE_VERSION != null)) {
                    this.tableST_VEHICLE_VERSION.InitVars();
                }
            }
            this.tableTERM_TYPES = ((TERM_TYPESDataTable)(base.Tables["TERM_TYPES"]));
            if ((initTable == true)) {
                if ((this.tableTERM_TYPES != null)) {
                    this.tableTERM_TYPES.InitVars();
                }
            }
            this.tableVEHICLE_PRODUCT = ((VEHICLE_PRODUCTDataTable)(base.Tables["VEHICLE_PRODUCT"]));
            if ((initTable == true)) {
                if ((this.tableVEHICLE_PRODUCT != null)) {
                    this.tableVEHICLE_PRODUCT.InitVars();
                }
            }
            this._relationFK_POS_ADDITIONAL_PRODUCTS_POS_PRODUCT_LIMITS_ProductLimits_Id = this.Relations["FK_POS.ADDITIONAL_PRODUCTS_POS.PRODUCT_LIMITS_ProductLimits_Id"];
            this._relationFK_POS_DRIVERS_Global_ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_State_Prov_Id_City_City_Id = this.Relations["FK_POS.DRIVERS_Global.ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_Sta" +
                "te_Prov_Id_City_City_Id"];
            this._relationFK_POS_DRIVERS_Global_ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id = this.Relations["FK_POS.DRIVERS_Global.ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id"];
            this._relationFK_POS_DRIVERS_POS_QUOTATION_QuotationId = this.Relations["FK_POS.DRIVERS_POS.QUOTATION_QuotationId"];
            this._relationFK_POS_PRODUCT_LIMITS_POS_VEHICLE_PRODUCT_VehicleProduct_Id = this.Relations["FK_POS.PRODUCT_LIMITS_POS.VEHICLE_PRODUCT_VehicleProduct_Id"];
            this._relationFK_POS_QUOTATION_POS_TERM_TYPES_TermType_Id = this.Relations["FK_POS.QUOTATION_POS.TERM_TYPES_TermType_Id"];
            this.relationFK_CITY_GLBLCITY = this.Relations["FK_CITY_GLBLCITY"];
            this.relationFK_CNTRY_GLBLCNTRY = this.Relations["FK_CNTRY_GLBLCNTRY"];
            this._relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_MAKE_Make_Id = this.Relations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_MAKE_Make_Id"];
            this._relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id = this.Relations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"];
            this._relationFK_Global_ST_VEHICLE_TYPE_PRODUCT_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id = this.Relations["FK_Global.ST_VEHICLE_TYPE_PRODUCT_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"];
            this._relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_MODEL_Make_Id_Model_Id = this.Relations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_MODEL_Make_Id_Model_Id"];
            this._relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id = this.Relations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"];
            this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_STORED_StoredId = this.Relations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_STORED_StoredId"];
            this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_USAGE_UsageId = this.Relations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_USAGE_UsageId"];
            this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_VERSION_MakeId_ModelId_VersionId = this.Relations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_VERSION_MakeId_ModelId_VersionId"];
            this._relationFK_POS_VEHICLE_INFO_POS_DRIVERS_VehicleInfoId = this.Relations["FK_POS.VEHICLE_INFO_POS.DRIVERS_VehicleInfoId"];
            this._relationFK_POS_VEHICLE_INFO_POS_QUOTATION_QuotationId = this.Relations["FK_POS.VEHICLE_INFO_POS.QUOTATION_QuotationId"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "POS_SiteDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/POS_SiteDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table__MigrationHistory = new @__MigrationHistoryDataTable();
            base.Tables.Add(this.table__MigrationHistory);
            this.tableADDITIONAL_PRODUCTS = new ADDITIONAL_PRODUCTSDataTable();
            base.Tables.Add(this.tableADDITIONAL_PRODUCTS);
            this.tableDRIVERS = new DRIVERSDataTable();
            base.Tables.Add(this.tableDRIVERS);
            this.tablePRODUCT_LIMITS = new PRODUCT_LIMITSDataTable();
            base.Tables.Add(this.tablePRODUCT_LIMITS);
            this.tableQUOTATION = new QUOTATIONDataTable();
            base.Tables.Add(this.tableQUOTATION);
            this.tableST_CITY = new ST_CITYDataTable();
            base.Tables.Add(this.tableST_CITY);
            this.tableST_COUNTRY = new ST_COUNTRYDataTable();
            base.Tables.Add(this.tableST_COUNTRY);
            this.tableST_GLOBAL_CITY = new ST_GLOBAL_CITYDataTable();
            base.Tables.Add(this.tableST_GLOBAL_CITY);
            this.tableST_GLOBAL_COUNTRY = new ST_GLOBAL_COUNTRYDataTable();
            base.Tables.Add(this.tableST_GLOBAL_COUNTRY);
            this.tableST_VEHICLE_MAKE = new ST_VEHICLE_MAKEDataTable();
            base.Tables.Add(this.tableST_VEHICLE_MAKE);
            this.tableST_VEHICLE_MODEL = new ST_VEHICLE_MODELDataTable();
            base.Tables.Add(this.tableST_VEHICLE_MODEL);
            this.tableST_VEHICLE_STORED = new ST_VEHICLE_STOREDDataTable();
            base.Tables.Add(this.tableST_VEHICLE_STORED);
            this.tableST_VEHICLE_TYPE = new ST_VEHICLE_TYPEDataTable();
            base.Tables.Add(this.tableST_VEHICLE_TYPE);
            this.tableST_VEHICLE_TYPE_PRODUCT = new ST_VEHICLE_TYPE_PRODUCTDataTable();
            base.Tables.Add(this.tableST_VEHICLE_TYPE_PRODUCT);
            this.tableST_VEHICLE_USAGE = new ST_VEHICLE_USAGEDataTable();
            base.Tables.Add(this.tableST_VEHICLE_USAGE);
            this.tableST_VEHICLE_VERSION = new ST_VEHICLE_VERSIONDataTable();
            base.Tables.Add(this.tableST_VEHICLE_VERSION);
            this.tableTERM_TYPES = new TERM_TYPESDataTable();
            base.Tables.Add(this.tableTERM_TYPES);
            this.tableVEHICLE_PRODUCT = new VEHICLE_PRODUCTDataTable();
            base.Tables.Add(this.tableVEHICLE_PRODUCT);
            this._relationFK_POS_ADDITIONAL_PRODUCTS_POS_PRODUCT_LIMITS_ProductLimits_Id = new global::System.Data.DataRelation("FK_POS.ADDITIONAL_PRODUCTS_POS.PRODUCT_LIMITS_ProductLimits_Id", new global::System.Data.DataColumn[] {
                        this.tablePRODUCT_LIMITS.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableADDITIONAL_PRODUCTS.ProductLimits_IdColumn}, false);
            this.Relations.Add(this._relationFK_POS_ADDITIONAL_PRODUCTS_POS_PRODUCT_LIMITS_ProductLimits_Id);
            this._relationFK_POS_DRIVERS_Global_ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_State_Prov_Id_City_City_Id = new global::System.Data.DataRelation("FK_POS.DRIVERS_Global.ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_Sta" +
                    "te_Prov_Id_City_City_Id", new global::System.Data.DataColumn[] {
                        this.tableST_GLOBAL_CITY.Country_IdColumn,
                        this.tableST_GLOBAL_CITY.Domesticreg_IdColumn,
                        this.tableST_GLOBAL_CITY.State_Prov_IdColumn,
                        this.tableST_GLOBAL_CITY.City_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDRIVERS.City_Country_IdColumn,
                        this.tableDRIVERS.City_Domesticreg_IdColumn,
                        this.tableDRIVERS.City_State_Prov_IdColumn,
                        this.tableDRIVERS.City_City_IdColumn}, false);
            this.Relations.Add(this._relationFK_POS_DRIVERS_Global_ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_State_Prov_Id_City_City_Id);
            this._relationFK_POS_DRIVERS_Global_ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id = new global::System.Data.DataRelation("FK_POS.DRIVERS_Global.ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id", new global::System.Data.DataColumn[] {
                        this.tableST_GLOBAL_COUNTRY.Global_Country_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDRIVERS.Nationality_Global_Country_IdColumn}, false);
            this.Relations.Add(this._relationFK_POS_DRIVERS_Global_ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id);
            this._relationFK_POS_DRIVERS_POS_QUOTATION_QuotationId = new global::System.Data.DataRelation("FK_POS.DRIVERS_POS.QUOTATION_QuotationId", new global::System.Data.DataColumn[] {
                        this.tableQUOTATION.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDRIVERS.QuotationIdColumn}, false);
            this.Relations.Add(this._relationFK_POS_DRIVERS_POS_QUOTATION_QuotationId);
            this._relationFK_POS_PRODUCT_LIMITS_POS_VEHICLE_PRODUCT_VehicleProduct_Id = new global::System.Data.DataRelation("FK_POS.PRODUCT_LIMITS_POS.VEHICLE_PRODUCT_VehicleProduct_Id", new global::System.Data.DataColumn[] {
                        this.tableVEHICLE_PRODUCT.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePRODUCT_LIMITS.VehicleProduct_IdColumn}, false);
            this.Relations.Add(this._relationFK_POS_PRODUCT_LIMITS_POS_VEHICLE_PRODUCT_VehicleProduct_Id);
            this._relationFK_POS_QUOTATION_POS_TERM_TYPES_TermType_Id = new global::System.Data.DataRelation("FK_POS.QUOTATION_POS.TERM_TYPES_TermType_Id", new global::System.Data.DataColumn[] {
                        this.tableTERM_TYPES.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableQUOTATION.TermType_IdColumn}, false);
            this.Relations.Add(this._relationFK_POS_QUOTATION_POS_TERM_TYPES_TermType_Id);
            this.relationFK_CITY_GLBLCITY = new global::System.Data.DataRelation("FK_CITY_GLBLCITY", new global::System.Data.DataColumn[] {
                        this.tableST_GLOBAL_CITY.Country_IdColumn,
                        this.tableST_GLOBAL_CITY.Domesticreg_IdColumn,
                        this.tableST_GLOBAL_CITY.State_Prov_IdColumn,
                        this.tableST_GLOBAL_CITY.City_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableST_CITY.Country_IdColumn,
                        this.tableST_CITY.Domesticreg_IdColumn,
                        this.tableST_CITY.State_Prov_IdColumn,
                        this.tableST_CITY.City_IdColumn}, false);
            this.Relations.Add(this.relationFK_CITY_GLBLCITY);
            this.relationFK_CNTRY_GLBLCNTRY = new global::System.Data.DataRelation("FK_CNTRY_GLBLCNTRY", new global::System.Data.DataColumn[] {
                        this.tableST_GLOBAL_COUNTRY.Global_Country_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableST_COUNTRY.Country_IdColumn}, false);
            this.Relations.Add(this.relationFK_CNTRY_GLBLCNTRY);
            this._relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_MAKE_Make_Id = new global::System.Data.DataRelation("FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_MAKE_Make_Id", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_MAKE.Make_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_MODEL.Make_IdColumn}, false);
            this.Relations.Add(this._relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_MAKE_Make_Id);
            this._relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id = new global::System.Data.DataRelation("FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_TYPE.Vehicle_Type_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_MODEL.Vehicle_Type_IdColumn}, false);
            this.Relations.Add(this._relationFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id);
            this._relationFK_Global_ST_VEHICLE_TYPE_PRODUCT_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id = new global::System.Data.DataRelation("FK_Global.ST_VEHICLE_TYPE_PRODUCT_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_TYPE.Vehicle_Type_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_TYPE_PRODUCT.Vehicle_Type_IdColumn}, false);
            this.Relations.Add(this._relationFK_Global_ST_VEHICLE_TYPE_PRODUCT_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id);
            this._relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_MODEL_Make_Id_Model_Id = new global::System.Data.DataRelation("FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_MODEL_Make_Id_Model_Id", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_MODEL.Make_IdColumn,
                        this.tableST_VEHICLE_MODEL.Model_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_VERSION.Make_IdColumn,
                        this.tableST_VEHICLE_VERSION.Model_IdColumn}, false);
            this.Relations.Add(this._relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_MODEL_Make_Id_Model_Id);
            this._relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id = new global::System.Data.DataRelation("FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_TYPE.Vehicle_Type_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_VERSION.Vehicle_Type_IdColumn}, false);
            this.Relations.Add(this._relationFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id);
            this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_STORED_StoredId = new global::System.Data.DataRelation("FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_STORED_StoredId", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_STORED.Stored_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICLE_PRODUCT.StoredIdColumn}, false);
            this.Relations.Add(this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_STORED_StoredId);
            this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_USAGE_UsageId = new global::System.Data.DataRelation("FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_USAGE_UsageId", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_USAGE.Usage_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICLE_PRODUCT.UsageIdColumn}, false);
            this.Relations.Add(this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_USAGE_UsageId);
            this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_VERSION_MakeId_ModelId_VersionId = new global::System.Data.DataRelation("FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_VERSION_MakeId_ModelId_VersionId", new global::System.Data.DataColumn[] {
                        this.tableST_VEHICLE_VERSION.Make_IdColumn,
                        this.tableST_VEHICLE_VERSION.Model_IdColumn,
                        this.tableST_VEHICLE_VERSION.Version_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICLE_PRODUCT.MakeIdColumn,
                        this.tableVEHICLE_PRODUCT.ModelIdColumn,
                        this.tableVEHICLE_PRODUCT.VersionIdColumn}, false);
            this.Relations.Add(this._relationFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_VERSION_MakeId_ModelId_VersionId);
            this._relationFK_POS_VEHICLE_INFO_POS_DRIVERS_VehicleInfoId = new global::System.Data.DataRelation("FK_POS.VEHICLE_INFO_POS.DRIVERS_VehicleInfoId", new global::System.Data.DataColumn[] {
                        this.tableDRIVERS.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICLE_PRODUCT.DriverIdColumn}, false);
            this.Relations.Add(this._relationFK_POS_VEHICLE_INFO_POS_DRIVERS_VehicleInfoId);
            this._relationFK_POS_VEHICLE_INFO_POS_QUOTATION_QuotationId = new global::System.Data.DataRelation("FK_POS.VEHICLE_INFO_POS.QUOTATION_QuotationId", new global::System.Data.DataColumn[] {
                        this.tableQUOTATION.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICLE_PRODUCT.QuotationIdColumn}, false);
            this.Relations.Add(this._relationFK_POS_VEHICLE_INFO_POS_QUOTATION_QuotationId);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize__MigrationHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeADDITIONAL_PRODUCTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDRIVERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePRODUCT_LIMITS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQUOTATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_CITY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_COUNTRY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_GLOBAL_CITY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_GLOBAL_COUNTRY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_VEHICLE_MAKE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_VEHICLE_MODEL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_VEHICLE_STORED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_VEHICLE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_VEHICLE_TYPE_PRODUCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_VEHICLE_USAGE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeST_VEHICLE_VERSION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTERM_TYPES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVEHICLE_PRODUCT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            POS_SiteDS ds = new POS_SiteDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void @__MigrationHistoryRowChangeEventHandler(object sender, @__MigrationHistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ADDITIONAL_PRODUCTSRowChangeEventHandler(object sender, ADDITIONAL_PRODUCTSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DRIVERSRowChangeEventHandler(object sender, DRIVERSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PRODUCT_LIMITSRowChangeEventHandler(object sender, PRODUCT_LIMITSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QUOTATIONRowChangeEventHandler(object sender, QUOTATIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_CITYRowChangeEventHandler(object sender, ST_CITYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_COUNTRYRowChangeEventHandler(object sender, ST_COUNTRYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_GLOBAL_CITYRowChangeEventHandler(object sender, ST_GLOBAL_CITYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_GLOBAL_COUNTRYRowChangeEventHandler(object sender, ST_GLOBAL_COUNTRYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_VEHICLE_MAKERowChangeEventHandler(object sender, ST_VEHICLE_MAKERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_VEHICLE_MODELRowChangeEventHandler(object sender, ST_VEHICLE_MODELRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_VEHICLE_STOREDRowChangeEventHandler(object sender, ST_VEHICLE_STOREDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_VEHICLE_TYPERowChangeEventHandler(object sender, ST_VEHICLE_TYPERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_VEHICLE_TYPE_PRODUCTRowChangeEventHandler(object sender, ST_VEHICLE_TYPE_PRODUCTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_VEHICLE_USAGERowChangeEventHandler(object sender, ST_VEHICLE_USAGERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ST_VEHICLE_VERSIONRowChangeEventHandler(object sender, ST_VEHICLE_VERSIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TERM_TYPESRowChangeEventHandler(object sender, TERM_TYPESRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VEHICLE_PRODUCTRowChangeEventHandler(object sender, VEHICLE_PRODUCTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class @__MigrationHistoryDataTable : global::System.Data.TypedTableBase<@__MigrationHistoryRow> {
            
            private global::System.Data.DataColumn columnMigrationId;
            
            private global::System.Data.DataColumn columnContextKey;
            
            private global::System.Data.DataColumn columnModel;
            
            private global::System.Data.DataColumn columnProductVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public @__MigrationHistoryDataTable() {
                this.TableName = "__MigrationHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal @__MigrationHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected @__MigrationHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MigrationIdColumn {
                get {
                    return this.columnMigrationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContextKeyColumn {
                get {
                    return this.columnContextKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductVersionColumn {
                get {
                    return this.columnProductVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public @__MigrationHistoryRow this[int index] {
                get {
                    return ((@__MigrationHistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event @__MigrationHistoryRowChangeEventHandler @__MigrationHistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event @__MigrationHistoryRowChangeEventHandler @__MigrationHistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event @__MigrationHistoryRowChangeEventHandler @__MigrationHistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event @__MigrationHistoryRowChangeEventHandler @__MigrationHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add__MigrationHistoryRow(@__MigrationHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public @__MigrationHistoryRow Add__MigrationHistoryRow(string MigrationId, string ContextKey, byte[] Model, string ProductVersion) {
                @__MigrationHistoryRow row__MigrationHistoryRow = ((@__MigrationHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MigrationId,
                        ContextKey,
                        Model,
                        ProductVersion};
                row__MigrationHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(row__MigrationHistoryRow);
                return row__MigrationHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public @__MigrationHistoryRow FindByMigrationIdContextKey(string MigrationId, string ContextKey) {
                return ((@__MigrationHistoryRow)(this.Rows.Find(new object[] {
                            MigrationId,
                            ContextKey})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                @__MigrationHistoryDataTable cln = ((@__MigrationHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new @__MigrationHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMigrationId = base.Columns["MigrationId"];
                this.columnContextKey = base.Columns["ContextKey"];
                this.columnModel = base.Columns["Model"];
                this.columnProductVersion = base.Columns["ProductVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMigrationId = new global::System.Data.DataColumn("MigrationId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMigrationId);
                this.columnContextKey = new global::System.Data.DataColumn("ContextKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContextKey);
                this.columnModel = new global::System.Data.DataColumn("Model", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this.columnProductVersion = new global::System.Data.DataColumn("ProductVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMigrationId,
                                this.columnContextKey}, true));
                this.columnMigrationId.AllowDBNull = false;
                this.columnMigrationId.MaxLength = 150;
                this.columnContextKey.AllowDBNull = false;
                this.columnContextKey.MaxLength = 300;
                this.columnModel.AllowDBNull = false;
                this.columnProductVersion.AllowDBNull = false;
                this.columnProductVersion.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public @__MigrationHistoryRow New__MigrationHistoryRow() {
                return ((@__MigrationHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new @__MigrationHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(@__MigrationHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.@__MigrationHistoryRowChanged != null)) {
                    this.@__MigrationHistoryRowChanged(this, new @__MigrationHistoryRowChangeEvent(((@__MigrationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.@__MigrationHistoryRowChanging != null)) {
                    this.@__MigrationHistoryRowChanging(this, new @__MigrationHistoryRowChangeEvent(((@__MigrationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.@__MigrationHistoryRowDeleted != null)) {
                    this.@__MigrationHistoryRowDeleted(this, new @__MigrationHistoryRowChangeEvent(((@__MigrationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.@__MigrationHistoryRowDeleting != null)) {
                    this.@__MigrationHistoryRowDeleting(this, new @__MigrationHistoryRowChangeEvent(((@__MigrationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove__MigrationHistoryRow(@__MigrationHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "__MigrationHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ADDITIONAL_PRODUCTSDataTable : global::System.Data.TypedTableBase<ADDITIONAL_PRODUCTSRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnIsSelected;
            
            private global::System.Data.DataColumn columnPrime;
            
            private global::System.Data.DataColumn columnProductLimits_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSDataTable() {
                this.TableName = "ADDITIONAL_PRODUCTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ADDITIONAL_PRODUCTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ADDITIONAL_PRODUCTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelectedColumn {
                get {
                    return this.columnIsSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrimeColumn {
                get {
                    return this.columnPrime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductLimits_IdColumn {
                get {
                    return this.columnProductLimits_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSRow this[int index] {
                get {
                    return ((ADDITIONAL_PRODUCTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADDITIONAL_PRODUCTSRowChangeEventHandler ADDITIONAL_PRODUCTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADDITIONAL_PRODUCTSRowChangeEventHandler ADDITIONAL_PRODUCTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADDITIONAL_PRODUCTSRowChangeEventHandler ADDITIONAL_PRODUCTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ADDITIONAL_PRODUCTSRowChangeEventHandler ADDITIONAL_PRODUCTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddADDITIONAL_PRODUCTSRow(ADDITIONAL_PRODUCTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSRow AddADDITIONAL_PRODUCTSRow(string Name, string Description, bool IsSelected, decimal Prime, PRODUCT_LIMITSRow _parentPRODUCT_LIMITSRowByFK_POS_ADDITIONAL_PRODUCTS_POS_PRODUCT_LIMITS_ProductLimits_Id) {
                ADDITIONAL_PRODUCTSRow rowADDITIONAL_PRODUCTSRow = ((ADDITIONAL_PRODUCTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Description,
                        IsSelected,
                        Prime,
                        null};
                if ((_parentPRODUCT_LIMITSRowByFK_POS_ADDITIONAL_PRODUCTS_POS_PRODUCT_LIMITS_ProductLimits_Id != null)) {
                    columnValuesArray[5] = _parentPRODUCT_LIMITSRowByFK_POS_ADDITIONAL_PRODUCTS_POS_PRODUCT_LIMITS_ProductLimits_Id[0];
                }
                rowADDITIONAL_PRODUCTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowADDITIONAL_PRODUCTSRow);
                return rowADDITIONAL_PRODUCTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSRow FindById(int Id) {
                return ((ADDITIONAL_PRODUCTSRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ADDITIONAL_PRODUCTSDataTable cln = ((ADDITIONAL_PRODUCTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ADDITIONAL_PRODUCTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnIsSelected = base.Columns["IsSelected"];
                this.columnPrime = base.Columns["Prime"];
                this.columnProductLimits_Id = base.Columns["ProductLimits_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnIsSelected = new global::System.Data.DataColumn("IsSelected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelected);
                this.columnPrime = new global::System.Data.DataColumn("Prime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrime);
                this.columnProductLimits_Id = new global::System.Data.DataColumn("ProductLimits_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductLimits_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 50;
                this.columnDescription.MaxLength = 200;
                this.columnIsSelected.AllowDBNull = false;
                this.columnProductLimits_Id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSRow NewADDITIONAL_PRODUCTSRow() {
                return ((ADDITIONAL_PRODUCTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ADDITIONAL_PRODUCTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ADDITIONAL_PRODUCTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ADDITIONAL_PRODUCTSRowChanged != null)) {
                    this.ADDITIONAL_PRODUCTSRowChanged(this, new ADDITIONAL_PRODUCTSRowChangeEvent(((ADDITIONAL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ADDITIONAL_PRODUCTSRowChanging != null)) {
                    this.ADDITIONAL_PRODUCTSRowChanging(this, new ADDITIONAL_PRODUCTSRowChangeEvent(((ADDITIONAL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ADDITIONAL_PRODUCTSRowDeleted != null)) {
                    this.ADDITIONAL_PRODUCTSRowDeleted(this, new ADDITIONAL_PRODUCTSRowChangeEvent(((ADDITIONAL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ADDITIONAL_PRODUCTSRowDeleting != null)) {
                    this.ADDITIONAL_PRODUCTSRowDeleting(this, new ADDITIONAL_PRODUCTSRowChangeEvent(((ADDITIONAL_PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveADDITIONAL_PRODUCTSRow(ADDITIONAL_PRODUCTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ADDITIONAL_PRODUCTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DRIVERSDataTable : global::System.Data.TypedTableBase<DRIVERSRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnSurname;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnDateOfBirth;
            
            private global::System.Data.DataColumn columnIsPrincipal;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnWorkPhone;
            
            private global::System.Data.DataColumn columnLicense;
            
            private global::System.Data.DataColumn columnYearsDriving;
            
            private global::System.Data.DataColumn columnAccidentsLast3Years;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnJob;
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnYearsInCompany;
            
            private global::System.Data.DataColumn columnQuotationId;
            
            private global::System.Data.DataColumn columnCity_Country_Id;
            
            private global::System.Data.DataColumn columnCity_Domesticreg_Id;
            
            private global::System.Data.DataColumn columnCity_State_Prov_Id;
            
            private global::System.Data.DataColumn columnCity_City_Id;
            
            private global::System.Data.DataColumn columnNationality_Global_Country_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSDataTable() {
                this.TableName = "DRIVERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DRIVERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DRIVERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurnameColumn {
                get {
                    return this.columnSurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateOfBirthColumn {
                get {
                    return this.columnDateOfBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsPrincipalColumn {
                get {
                    return this.columnIsPrincipal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkPhoneColumn {
                get {
                    return this.columnWorkPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LicenseColumn {
                get {
                    return this.columnLicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearsDrivingColumn {
                get {
                    return this.columnYearsDriving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccidentsLast3YearsColumn {
                get {
                    return this.columnAccidentsLast3Years;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobColumn {
                get {
                    return this.columnJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearsInCompanyColumn {
                get {
                    return this.columnYearsInCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuotationIdColumn {
                get {
                    return this.columnQuotationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_Country_IdColumn {
                get {
                    return this.columnCity_Country_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_Domesticreg_IdColumn {
                get {
                    return this.columnCity_Domesticreg_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_State_Prov_IdColumn {
                get {
                    return this.columnCity_State_Prov_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_City_IdColumn {
                get {
                    return this.columnCity_City_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nationality_Global_Country_IdColumn {
                get {
                    return this.columnNationality_Global_Country_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow this[int index] {
                get {
                    return ((DRIVERSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DRIVERSRowChangeEventHandler DRIVERSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DRIVERSRowChangeEventHandler DRIVERSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DRIVERSRowChangeEventHandler DRIVERSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DRIVERSRowChangeEventHandler DRIVERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDRIVERSRow(DRIVERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow AddDRIVERSRow(
                        string FirstName, 
                        string Surname, 
                        string Email, 
                        string PhoneNumber, 
                        System.DateTime DateOfBirth, 
                        bool IsPrincipal, 
                        string Sex, 
                        string Address, 
                        string Mobile, 
                        string WorkPhone, 
                        string License, 
                        int YearsDriving, 
                        int AccidentsLast3Years, 
                        string MaritalStatus, 
                        string Job, 
                        string Company, 
                        int YearsInCompany, 
                        QUOTATIONRow _parentQUOTATIONRowByFK_POS_DRIVERS_POS_QUOTATION_QuotationId, 
                        int City_Country_Id, 
                        int City_Domesticreg_Id, 
                        int City_State_Prov_Id, 
                        int City_City_Id, 
                        ST_GLOBAL_COUNTRYRow _parentST_GLOBAL_COUNTRYRowByFK_POS_DRIVERS_Global_ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id) {
                DRIVERSRow rowDRIVERSRow = ((DRIVERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FirstName,
                        Surname,
                        Email,
                        PhoneNumber,
                        DateOfBirth,
                        IsPrincipal,
                        Sex,
                        Address,
                        Mobile,
                        WorkPhone,
                        License,
                        YearsDriving,
                        AccidentsLast3Years,
                        MaritalStatus,
                        Job,
                        Company,
                        YearsInCompany,
                        null,
                        City_Country_Id,
                        City_Domesticreg_Id,
                        City_State_Prov_Id,
                        City_City_Id,
                        null};
                if ((_parentQUOTATIONRowByFK_POS_DRIVERS_POS_QUOTATION_QuotationId != null)) {
                    columnValuesArray[18] = _parentQUOTATIONRowByFK_POS_DRIVERS_POS_QUOTATION_QuotationId[0];
                }
                if ((_parentST_GLOBAL_COUNTRYRowByFK_POS_DRIVERS_Global_ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id != null)) {
                    columnValuesArray[23] = _parentST_GLOBAL_COUNTRYRowByFK_POS_DRIVERS_Global_ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id[0];
                }
                rowDRIVERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDRIVERSRow);
                return rowDRIVERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow FindById(int Id) {
                return ((DRIVERSRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DRIVERSDataTable cln = ((DRIVERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DRIVERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnSurname = base.Columns["Surname"];
                this.columnEmail = base.Columns["Email"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnDateOfBirth = base.Columns["DateOfBirth"];
                this.columnIsPrincipal = base.Columns["IsPrincipal"];
                this.columnSex = base.Columns["Sex"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnWorkPhone = base.Columns["WorkPhone"];
                this.columnLicense = base.Columns["License"];
                this.columnYearsDriving = base.Columns["YearsDriving"];
                this.columnAccidentsLast3Years = base.Columns["AccidentsLast3Years"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnJob = base.Columns["Job"];
                this.columnCompany = base.Columns["Company"];
                this.columnYearsInCompany = base.Columns["YearsInCompany"];
                this.columnQuotationId = base.Columns["QuotationId"];
                this.columnCity_Country_Id = base.Columns["City_Country_Id"];
                this.columnCity_Domesticreg_Id = base.Columns["City_Domesticreg_Id"];
                this.columnCity_State_Prov_Id = base.Columns["City_State_Prov_Id"];
                this.columnCity_City_Id = base.Columns["City_City_Id"];
                this.columnNationality_Global_Country_Id = base.Columns["Nationality_Global_Country_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurname);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnDateOfBirth = new global::System.Data.DataColumn("DateOfBirth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfBirth);
                this.columnIsPrincipal = new global::System.Data.DataColumn("IsPrincipal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrincipal);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnWorkPhone = new global::System.Data.DataColumn("WorkPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkPhone);
                this.columnLicense = new global::System.Data.DataColumn("License", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicense);
                this.columnYearsDriving = new global::System.Data.DataColumn("YearsDriving", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearsDriving);
                this.columnAccidentsLast3Years = new global::System.Data.DataColumn("AccidentsLast3Years", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccidentsLast3Years);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnJob = new global::System.Data.DataColumn("Job", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnYearsInCompany = new global::System.Data.DataColumn("YearsInCompany", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearsInCompany);
                this.columnQuotationId = new global::System.Data.DataColumn("QuotationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotationId);
                this.columnCity_Country_Id = new global::System.Data.DataColumn("City_Country_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Country_Id);
                this.columnCity_Domesticreg_Id = new global::System.Data.DataColumn("City_Domesticreg_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Domesticreg_Id);
                this.columnCity_State_Prov_Id = new global::System.Data.DataColumn("City_State_Prov_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_State_Prov_Id);
                this.columnCity_City_Id = new global::System.Data.DataColumn("City_City_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_City_Id);
                this.columnNationality_Global_Country_Id = new global::System.Data.DataColumn("Nationality_Global_Country_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality_Global_Country_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnFirstName.MaxLength = 50;
                this.columnSurname.MaxLength = 50;
                this.columnEmail.MaxLength = 255;
                this.columnPhoneNumber.MaxLength = 50;
                this.columnDateOfBirth.AllowDBNull = false;
                this.columnIsPrincipal.AllowDBNull = false;
                this.columnSex.MaxLength = 50;
                this.columnAddress.MaxLength = 50;
                this.columnMobile.MaxLength = 50;
                this.columnWorkPhone.MaxLength = 50;
                this.columnLicense.MaxLength = 50;
                this.columnMaritalStatus.MaxLength = 10;
                this.columnJob.MaxLength = 50;
                this.columnCompany.MaxLength = 50;
                this.columnQuotationId.AllowDBNull = false;
                this.columnCity_Country_Id.AllowDBNull = false;
                this.columnCity_Domesticreg_Id.AllowDBNull = false;
                this.columnCity_State_Prov_Id.AllowDBNull = false;
                this.columnCity_City_Id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow NewDRIVERSRow() {
                return ((DRIVERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DRIVERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DRIVERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DRIVERSRowChanged != null)) {
                    this.DRIVERSRowChanged(this, new DRIVERSRowChangeEvent(((DRIVERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DRIVERSRowChanging != null)) {
                    this.DRIVERSRowChanging(this, new DRIVERSRowChangeEvent(((DRIVERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DRIVERSRowDeleted != null)) {
                    this.DRIVERSRowDeleted(this, new DRIVERSRowChangeEvent(((DRIVERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DRIVERSRowDeleting != null)) {
                    this.DRIVERSRowDeleting(this, new DRIVERSRowChangeEvent(((DRIVERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDRIVERSRow(DRIVERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DRIVERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRODUCT_LIMITSDataTable : global::System.Data.TypedTableBase<PRODUCT_LIMITSRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnIsSelected;
            
            private global::System.Data.DataColumn columnMinDeductible;
            
            private global::System.Data.DataColumn columnOthersProperty;
            
            private global::System.Data.DataColumn columnOnePersonDeath;
            
            private global::System.Data.DataColumn columnAnotherPersonDeath;
            
            private global::System.Data.DataColumn columnPassengerDeath;
            
            private global::System.Data.DataColumn columnAnotherPassengerDeath;
            
            private global::System.Data.DataColumn columnBail;
            
            private global::System.Data.DataColumn columnSdPrime;
            
            private global::System.Data.DataColumn columnDriverRisk;
            
            private global::System.Data.DataColumn columnCollisionRollover;
            
            private global::System.Data.DataColumn columnFireTheft;
            
            private global::System.Data.DataColumn columnComprehensiveRisk;
            
            private global::System.Data.DataColumn columnGlassBreakage;
            
            private global::System.Data.DataColumn columnSpecialEquipment;
            
            private global::System.Data.DataColumn columnTpPrime;
            
            private global::System.Data.DataColumn columnVehicleProduct_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSDataTable() {
                this.TableName = "PRODUCT_LIMITS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRODUCT_LIMITSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PRODUCT_LIMITSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelectedColumn {
                get {
                    return this.columnIsSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinDeductibleColumn {
                get {
                    return this.columnMinDeductible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OthersPropertyColumn {
                get {
                    return this.columnOthersProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OnePersonDeathColumn {
                get {
                    return this.columnOnePersonDeath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnotherPersonDeathColumn {
                get {
                    return this.columnAnotherPersonDeath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PassengerDeathColumn {
                get {
                    return this.columnPassengerDeath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnotherPassengerDeathColumn {
                get {
                    return this.columnAnotherPassengerDeath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BailColumn {
                get {
                    return this.columnBail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SdPrimeColumn {
                get {
                    return this.columnSdPrime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DriverRiskColumn {
                get {
                    return this.columnDriverRisk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CollisionRolloverColumn {
                get {
                    return this.columnCollisionRollover;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FireTheftColumn {
                get {
                    return this.columnFireTheft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComprehensiveRiskColumn {
                get {
                    return this.columnComprehensiveRisk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlassBreakageColumn {
                get {
                    return this.columnGlassBreakage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialEquipmentColumn {
                get {
                    return this.columnSpecialEquipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TpPrimeColumn {
                get {
                    return this.columnTpPrime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehicleProduct_IdColumn {
                get {
                    return this.columnVehicleProduct_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRow this[int index] {
                get {
                    return ((PRODUCT_LIMITSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRODUCT_LIMITSRowChangeEventHandler PRODUCT_LIMITSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRODUCT_LIMITSRowChangeEventHandler PRODUCT_LIMITSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRODUCT_LIMITSRowChangeEventHandler PRODUCT_LIMITSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PRODUCT_LIMITSRowChangeEventHandler PRODUCT_LIMITSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPRODUCT_LIMITSRow(PRODUCT_LIMITSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRow AddPRODUCT_LIMITSRow(
                        bool IsSelected, 
                        decimal MinDeductible, 
                        decimal OthersProperty, 
                        decimal OnePersonDeath, 
                        decimal AnotherPersonDeath, 
                        decimal PassengerDeath, 
                        decimal AnotherPassengerDeath, 
                        decimal Bail, 
                        decimal SdPrime, 
                        decimal DriverRisk, 
                        decimal CollisionRollover, 
                        decimal FireTheft, 
                        decimal ComprehensiveRisk, 
                        decimal GlassBreakage, 
                        decimal SpecialEquipment, 
                        decimal TpPrime, 
                        VEHICLE_PRODUCTRow _parentVEHICLE_PRODUCTRowByFK_POS_PRODUCT_LIMITS_POS_VEHICLE_PRODUCT_VehicleProduct_Id) {
                PRODUCT_LIMITSRow rowPRODUCT_LIMITSRow = ((PRODUCT_LIMITSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        IsSelected,
                        MinDeductible,
                        OthersProperty,
                        OnePersonDeath,
                        AnotherPersonDeath,
                        PassengerDeath,
                        AnotherPassengerDeath,
                        Bail,
                        SdPrime,
                        DriverRisk,
                        CollisionRollover,
                        FireTheft,
                        ComprehensiveRisk,
                        GlassBreakage,
                        SpecialEquipment,
                        TpPrime,
                        null};
                if ((_parentVEHICLE_PRODUCTRowByFK_POS_PRODUCT_LIMITS_POS_VEHICLE_PRODUCT_VehicleProduct_Id != null)) {
                    columnValuesArray[17] = _parentVEHICLE_PRODUCTRowByFK_POS_PRODUCT_LIMITS_POS_VEHICLE_PRODUCT_VehicleProduct_Id[0];
                }
                rowPRODUCT_LIMITSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRODUCT_LIMITSRow);
                return rowPRODUCT_LIMITSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRow FindById(int Id) {
                return ((PRODUCT_LIMITSRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PRODUCT_LIMITSDataTable cln = ((PRODUCT_LIMITSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRODUCT_LIMITSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnIsSelected = base.Columns["IsSelected"];
                this.columnMinDeductible = base.Columns["MinDeductible"];
                this.columnOthersProperty = base.Columns["OthersProperty"];
                this.columnOnePersonDeath = base.Columns["OnePersonDeath"];
                this.columnAnotherPersonDeath = base.Columns["AnotherPersonDeath"];
                this.columnPassengerDeath = base.Columns["PassengerDeath"];
                this.columnAnotherPassengerDeath = base.Columns["AnotherPassengerDeath"];
                this.columnBail = base.Columns["Bail"];
                this.columnSdPrime = base.Columns["SdPrime"];
                this.columnDriverRisk = base.Columns["DriverRisk"];
                this.columnCollisionRollover = base.Columns["CollisionRollover"];
                this.columnFireTheft = base.Columns["FireTheft"];
                this.columnComprehensiveRisk = base.Columns["ComprehensiveRisk"];
                this.columnGlassBreakage = base.Columns["GlassBreakage"];
                this.columnSpecialEquipment = base.Columns["SpecialEquipment"];
                this.columnTpPrime = base.Columns["TpPrime"];
                this.columnVehicleProduct_Id = base.Columns["VehicleProduct_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIsSelected = new global::System.Data.DataColumn("IsSelected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelected);
                this.columnMinDeductible = new global::System.Data.DataColumn("MinDeductible", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinDeductible);
                this.columnOthersProperty = new global::System.Data.DataColumn("OthersProperty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOthersProperty);
                this.columnOnePersonDeath = new global::System.Data.DataColumn("OnePersonDeath", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnePersonDeath);
                this.columnAnotherPersonDeath = new global::System.Data.DataColumn("AnotherPersonDeath", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnotherPersonDeath);
                this.columnPassengerDeath = new global::System.Data.DataColumn("PassengerDeath", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassengerDeath);
                this.columnAnotherPassengerDeath = new global::System.Data.DataColumn("AnotherPassengerDeath", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnotherPassengerDeath);
                this.columnBail = new global::System.Data.DataColumn("Bail", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBail);
                this.columnSdPrime = new global::System.Data.DataColumn("SdPrime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSdPrime);
                this.columnDriverRisk = new global::System.Data.DataColumn("DriverRisk", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverRisk);
                this.columnCollisionRollover = new global::System.Data.DataColumn("CollisionRollover", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollisionRollover);
                this.columnFireTheft = new global::System.Data.DataColumn("FireTheft", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFireTheft);
                this.columnComprehensiveRisk = new global::System.Data.DataColumn("ComprehensiveRisk", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComprehensiveRisk);
                this.columnGlassBreakage = new global::System.Data.DataColumn("GlassBreakage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlassBreakage);
                this.columnSpecialEquipment = new global::System.Data.DataColumn("SpecialEquipment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialEquipment);
                this.columnTpPrime = new global::System.Data.DataColumn("TpPrime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTpPrime);
                this.columnVehicleProduct_Id = new global::System.Data.DataColumn("VehicleProduct_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleProduct_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnIsSelected.AllowDBNull = false;
                this.columnOthersProperty.AllowDBNull = false;
                this.columnOnePersonDeath.AllowDBNull = false;
                this.columnAnotherPersonDeath.AllowDBNull = false;
                this.columnPassengerDeath.AllowDBNull = false;
                this.columnAnotherPassengerDeath.AllowDBNull = false;
                this.columnBail.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRow NewPRODUCT_LIMITSRow() {
                return ((PRODUCT_LIMITSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRODUCT_LIMITSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PRODUCT_LIMITSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRODUCT_LIMITSRowChanged != null)) {
                    this.PRODUCT_LIMITSRowChanged(this, new PRODUCT_LIMITSRowChangeEvent(((PRODUCT_LIMITSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRODUCT_LIMITSRowChanging != null)) {
                    this.PRODUCT_LIMITSRowChanging(this, new PRODUCT_LIMITSRowChangeEvent(((PRODUCT_LIMITSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRODUCT_LIMITSRowDeleted != null)) {
                    this.PRODUCT_LIMITSRowDeleted(this, new PRODUCT_LIMITSRowChangeEvent(((PRODUCT_LIMITSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRODUCT_LIMITSRowDeleting != null)) {
                    this.PRODUCT_LIMITSRowDeleting(this, new PRODUCT_LIMITSRowChangeEvent(((PRODUCT_LIMITSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePRODUCT_LIMITSRow(PRODUCT_LIMITSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRODUCT_LIMITSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUOTATIONDataTable : global::System.Data.TypedTableBase<QUOTATIONRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCreated;
            
            private global::System.Data.DataColumn columnLastModified;
            
            private global::System.Data.DataColumn columnProductNumber;
            
            private global::System.Data.DataColumn columnQuotationDailyNumber;
            
            private global::System.Data.DataColumn columnPolicyNumber;
            
            private global::System.Data.DataColumn columnQuotationNumber;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnTermType_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONDataTable() {
                this.TableName = "QUOTATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QUOTATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QUOTATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedColumn {
                get {
                    return this.columnCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastModifiedColumn {
                get {
                    return this.columnLastModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductNumberColumn {
                get {
                    return this.columnProductNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuotationDailyNumberColumn {
                get {
                    return this.columnQuotationDailyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PolicyNumberColumn {
                get {
                    return this.columnPolicyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuotationNumberColumn {
                get {
                    return this.columnQuotationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TermType_IdColumn {
                get {
                    return this.columnTermType_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow this[int index] {
                get {
                    return ((QUOTATIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUOTATIONRowChangeEventHandler QUOTATIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUOTATIONRowChangeEventHandler QUOTATIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUOTATIONRowChangeEventHandler QUOTATIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUOTATIONRowChangeEventHandler QUOTATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQUOTATIONRow(QUOTATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow AddQUOTATIONRow(byte Status, System.DateTime Created, System.DateTime LastModified, string ProductNumber, int QuotationDailyNumber, string PolicyNumber, string QuotationNumber, System.DateTime StartDate, System.DateTime EndDate, TERM_TYPESRow _parentTERM_TYPESRowByFK_POS_QUOTATION_POS_TERM_TYPES_TermType_Id) {
                QUOTATIONRow rowQUOTATIONRow = ((QUOTATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Status,
                        Created,
                        LastModified,
                        ProductNumber,
                        QuotationDailyNumber,
                        PolicyNumber,
                        QuotationNumber,
                        StartDate,
                        EndDate,
                        null};
                if ((_parentTERM_TYPESRowByFK_POS_QUOTATION_POS_TERM_TYPES_TermType_Id != null)) {
                    columnValuesArray[10] = _parentTERM_TYPESRowByFK_POS_QUOTATION_POS_TERM_TYPES_TermType_Id[0];
                }
                rowQUOTATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQUOTATIONRow);
                return rowQUOTATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow FindById(int Id) {
                return ((QUOTATIONRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QUOTATIONDataTable cln = ((QUOTATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QUOTATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnStatus = base.Columns["Status"];
                this.columnCreated = base.Columns["Created"];
                this.columnLastModified = base.Columns["LastModified"];
                this.columnProductNumber = base.Columns["ProductNumber"];
                this.columnQuotationDailyNumber = base.Columns["QuotationDailyNumber"];
                this.columnPolicyNumber = base.Columns["PolicyNumber"];
                this.columnQuotationNumber = base.Columns["QuotationNumber"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnTermType_Id = base.Columns["TermType_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCreated = new global::System.Data.DataColumn("Created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated);
                this.columnLastModified = new global::System.Data.DataColumn("LastModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastModified);
                this.columnProductNumber = new global::System.Data.DataColumn("ProductNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductNumber);
                this.columnQuotationDailyNumber = new global::System.Data.DataColumn("QuotationDailyNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotationDailyNumber);
                this.columnPolicyNumber = new global::System.Data.DataColumn("PolicyNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPolicyNumber);
                this.columnQuotationNumber = new global::System.Data.DataColumn("QuotationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotationNumber);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnTermType_Id = new global::System.Data.DataColumn("TermType_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermType_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnStatus.AllowDBNull = false;
                this.columnCreated.AllowDBNull = false;
                this.columnLastModified.AllowDBNull = false;
                this.columnProductNumber.MaxLength = 2;
                this.columnQuotationDailyNumber.AllowDBNull = false;
                this.columnPolicyNumber.MaxLength = 20;
                this.columnQuotationNumber.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow NewQUOTATIONRow() {
                return ((QUOTATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QUOTATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QUOTATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUOTATIONRowChanged != null)) {
                    this.QUOTATIONRowChanged(this, new QUOTATIONRowChangeEvent(((QUOTATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUOTATIONRowChanging != null)) {
                    this.QUOTATIONRowChanging(this, new QUOTATIONRowChangeEvent(((QUOTATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUOTATIONRowDeleted != null)) {
                    this.QUOTATIONRowDeleted(this, new QUOTATIONRowChangeEvent(((QUOTATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUOTATIONRowDeleting != null)) {
                    this.QUOTATIONRowDeleting(this, new QUOTATIONRowChangeEvent(((QUOTATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQUOTATIONRow(QUOTATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUOTATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_CITYDataTable : global::System.Data.TypedTableBase<ST_CITYRow> {
            
            private global::System.Data.DataColumn columnCorp_Id;
            
            private global::System.Data.DataColumn columnRegion_Id;
            
            private global::System.Data.DataColumn columnCountry_Id;
            
            private global::System.Data.DataColumn columnDomesticreg_Id;
            
            private global::System.Data.DataColumn columnState_Prov_Id;
            
            private global::System.Data.DataColumn columnCity_Id;
            
            private global::System.Data.DataColumn columnCity_Mgr_Id;
            
            private global::System.Data.DataColumn columnDirectory_Id;
            
            private global::System.Data.DataColumn columnCountry_Headquarter;
            
            private global::System.Data.DataColumn columnCity_Status;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnhostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYDataTable() {
                this.TableName = "ST_CITY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_CITYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_CITYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Corp_IdColumn {
                get {
                    return this.columnCorp_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Region_IdColumn {
                get {
                    return this.columnRegion_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_IdColumn {
                get {
                    return this.columnCountry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Domesticreg_IdColumn {
                get {
                    return this.columnDomesticreg_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn State_Prov_IdColumn {
                get {
                    return this.columnState_Prov_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_IdColumn {
                get {
                    return this.columnCity_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_Mgr_IdColumn {
                get {
                    return this.columnCity_Mgr_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Directory_IdColumn {
                get {
                    return this.columnDirectory_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_HeadquarterColumn {
                get {
                    return this.columnCountry_Headquarter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_StatusColumn {
                get {
                    return this.columnCity_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hostnameColumn {
                get {
                    return this.columnhostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYRow this[int index] {
                get {
                    return ((ST_CITYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_CITYRowChangeEventHandler ST_CITYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_CITYRowChangeEventHandler ST_CITYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_CITYRowChangeEventHandler ST_CITYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_CITYRowChangeEventHandler ST_CITYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_CITYRow(ST_CITYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYRow AddST_CITYRow(int Corp_Id, int Region_Id, int Country_Id, int Domesticreg_Id, int State_Prov_Id, int City_Id, int City_Mgr_Id, int Directory_Id, bool Country_Headquarter, bool City_Status, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string hostname) {
                ST_CITYRow rowST_CITYRow = ((ST_CITYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Corp_Id,
                        Region_Id,
                        Country_Id,
                        Domesticreg_Id,
                        State_Prov_Id,
                        City_Id,
                        City_Mgr_Id,
                        Directory_Id,
                        Country_Headquarter,
                        City_Status,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        hostname};
                rowST_CITYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_CITYRow);
                return rowST_CITYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYRow FindByCorp_IdRegion_IdCountry_IdDomesticreg_IdState_Prov_IdCity_Id(int Corp_Id, int Region_Id, int Country_Id, int Domesticreg_Id, int State_Prov_Id, int City_Id) {
                return ((ST_CITYRow)(this.Rows.Find(new object[] {
                            Corp_Id,
                            Region_Id,
                            Country_Id,
                            Domesticreg_Id,
                            State_Prov_Id,
                            City_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_CITYDataTable cln = ((ST_CITYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_CITYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCorp_Id = base.Columns["Corp_Id"];
                this.columnRegion_Id = base.Columns["Region_Id"];
                this.columnCountry_Id = base.Columns["Country_Id"];
                this.columnDomesticreg_Id = base.Columns["Domesticreg_Id"];
                this.columnState_Prov_Id = base.Columns["State_Prov_Id"];
                this.columnCity_Id = base.Columns["City_Id"];
                this.columnCity_Mgr_Id = base.Columns["City_Mgr_Id"];
                this.columnDirectory_Id = base.Columns["Directory_Id"];
                this.columnCountry_Headquarter = base.Columns["Country_Headquarter"];
                this.columnCity_Status = base.Columns["City_Status"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnhostname = base.Columns["hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCorp_Id = new global::System.Data.DataColumn("Corp_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorp_Id);
                this.columnRegion_Id = new global::System.Data.DataColumn("Region_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion_Id);
                this.columnCountry_Id = new global::System.Data.DataColumn("Country_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Id);
                this.columnDomesticreg_Id = new global::System.Data.DataColumn("Domesticreg_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomesticreg_Id);
                this.columnState_Prov_Id = new global::System.Data.DataColumn("State_Prov_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState_Prov_Id);
                this.columnCity_Id = new global::System.Data.DataColumn("City_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Id);
                this.columnCity_Mgr_Id = new global::System.Data.DataColumn("City_Mgr_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Mgr_Id);
                this.columnDirectory_Id = new global::System.Data.DataColumn("Directory_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectory_Id);
                this.columnCountry_Headquarter = new global::System.Data.DataColumn("Country_Headquarter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Headquarter);
                this.columnCity_Status = new global::System.Data.DataColumn("City_Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Status);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnhostname = new global::System.Data.DataColumn("hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCorp_Id,
                                this.columnRegion_Id,
                                this.columnCountry_Id,
                                this.columnDomesticreg_Id,
                                this.columnState_Prov_Id,
                                this.columnCity_Id}, true));
                this.columnCorp_Id.AllowDBNull = false;
                this.columnRegion_Id.AllowDBNull = false;
                this.columnCountry_Id.AllowDBNull = false;
                this.columnDomesticreg_Id.AllowDBNull = false;
                this.columnState_Prov_Id.AllowDBNull = false;
                this.columnCity_Id.AllowDBNull = false;
                this.columnCountry_Headquarter.AllowDBNull = false;
                this.columnCity_Status.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnhostname.AllowDBNull = false;
                this.columnhostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYRow NewST_CITYRow() {
                return ((ST_CITYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_CITYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_CITYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_CITYRowChanged != null)) {
                    this.ST_CITYRowChanged(this, new ST_CITYRowChangeEvent(((ST_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_CITYRowChanging != null)) {
                    this.ST_CITYRowChanging(this, new ST_CITYRowChangeEvent(((ST_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_CITYRowDeleted != null)) {
                    this.ST_CITYRowDeleted(this, new ST_CITYRowChangeEvent(((ST_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_CITYRowDeleting != null)) {
                    this.ST_CITYRowDeleting(this, new ST_CITYRowChangeEvent(((ST_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_CITYRow(ST_CITYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_CITYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_COUNTRYDataTable : global::System.Data.TypedTableBase<ST_COUNTRYRow> {
            
            private global::System.Data.DataColumn columnCorp_Id;
            
            private global::System.Data.DataColumn columnRegion_Id;
            
            private global::System.Data.DataColumn columnCountry_Id;
            
            private global::System.Data.DataColumn columnContinent_Id;
            
            private global::System.Data.DataColumn columnCountry_Headquarter;
            
            private global::System.Data.DataColumn columnCountry_Mgr_Id;
            
            private global::System.Data.DataColumn columnDirectory_Id;
            
            private global::System.Data.DataColumn columnCountry_Status;
            
            private global::System.Data.DataColumn columnGMT_tz;
            
            private global::System.Data.DataColumn columnDST_tz;
            
            private global::System.Data.DataColumn columnDST_Threshold;
            
            private global::System.Data.DataColumn columnDST_Initial_Date;
            
            private global::System.Data.DataColumn columnDST_End_Date;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnhostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYDataTable() {
                this.TableName = "ST_COUNTRY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_COUNTRYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_COUNTRYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Corp_IdColumn {
                get {
                    return this.columnCorp_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Region_IdColumn {
                get {
                    return this.columnRegion_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_IdColumn {
                get {
                    return this.columnCountry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Continent_IdColumn {
                get {
                    return this.columnContinent_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_HeadquarterColumn {
                get {
                    return this.columnCountry_Headquarter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_Mgr_IdColumn {
                get {
                    return this.columnCountry_Mgr_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Directory_IdColumn {
                get {
                    return this.columnDirectory_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_StatusColumn {
                get {
                    return this.columnCountry_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GMT_tzColumn {
                get {
                    return this.columnGMT_tz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DST_tzColumn {
                get {
                    return this.columnDST_tz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DST_ThresholdColumn {
                get {
                    return this.columnDST_Threshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DST_Initial_DateColumn {
                get {
                    return this.columnDST_Initial_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DST_End_DateColumn {
                get {
                    return this.columnDST_End_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hostnameColumn {
                get {
                    return this.columnhostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYRow this[int index] {
                get {
                    return ((ST_COUNTRYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_COUNTRYRowChangeEventHandler ST_COUNTRYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_COUNTRYRowChangeEventHandler ST_COUNTRYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_COUNTRYRowChangeEventHandler ST_COUNTRYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_COUNTRYRowChangeEventHandler ST_COUNTRYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_COUNTRYRow(ST_COUNTRYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYRow AddST_COUNTRYRow(
                        int Corp_Id, 
                        int Region_Id, 
                        ST_GLOBAL_COUNTRYRow parentST_GLOBAL_COUNTRYRowByFK_CNTRY_GLBLCNTRY, 
                        int Continent_Id, 
                        bool Country_Headquarter, 
                        int Country_Mgr_Id, 
                        int Directory_Id, 
                        bool Country_Status, 
                        int GMT_tz, 
                        bool DST_tz, 
                        int DST_Threshold, 
                        System.DateTime DST_Initial_Date, 
                        System.DateTime DST_End_Date, 
                        System.DateTime Create_Date, 
                        System.DateTime Modi_Date, 
                        int Create_UsrId, 
                        int Modi_UsrId, 
                        string hostname) {
                ST_COUNTRYRow rowST_COUNTRYRow = ((ST_COUNTRYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Corp_Id,
                        Region_Id,
                        null,
                        Continent_Id,
                        Country_Headquarter,
                        Country_Mgr_Id,
                        Directory_Id,
                        Country_Status,
                        GMT_tz,
                        DST_tz,
                        DST_Threshold,
                        DST_Initial_Date,
                        DST_End_Date,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        hostname};
                if ((parentST_GLOBAL_COUNTRYRowByFK_CNTRY_GLBLCNTRY != null)) {
                    columnValuesArray[2] = parentST_GLOBAL_COUNTRYRowByFK_CNTRY_GLBLCNTRY[0];
                }
                rowST_COUNTRYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_COUNTRYRow);
                return rowST_COUNTRYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYRow FindByCorp_IdRegion_IdCountry_Id(int Corp_Id, int Region_Id, int Country_Id) {
                return ((ST_COUNTRYRow)(this.Rows.Find(new object[] {
                            Corp_Id,
                            Region_Id,
                            Country_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_COUNTRYDataTable cln = ((ST_COUNTRYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_COUNTRYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCorp_Id = base.Columns["Corp_Id"];
                this.columnRegion_Id = base.Columns["Region_Id"];
                this.columnCountry_Id = base.Columns["Country_Id"];
                this.columnContinent_Id = base.Columns["Continent_Id"];
                this.columnCountry_Headquarter = base.Columns["Country_Headquarter"];
                this.columnCountry_Mgr_Id = base.Columns["Country_Mgr_Id"];
                this.columnDirectory_Id = base.Columns["Directory_Id"];
                this.columnCountry_Status = base.Columns["Country_Status"];
                this.columnGMT_tz = base.Columns["GMT_tz"];
                this.columnDST_tz = base.Columns["DST_tz"];
                this.columnDST_Threshold = base.Columns["DST_Threshold"];
                this.columnDST_Initial_Date = base.Columns["DST_Initial_Date"];
                this.columnDST_End_Date = base.Columns["DST_End_Date"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnhostname = base.Columns["hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCorp_Id = new global::System.Data.DataColumn("Corp_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorp_Id);
                this.columnRegion_Id = new global::System.Data.DataColumn("Region_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion_Id);
                this.columnCountry_Id = new global::System.Data.DataColumn("Country_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Id);
                this.columnContinent_Id = new global::System.Data.DataColumn("Continent_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContinent_Id);
                this.columnCountry_Headquarter = new global::System.Data.DataColumn("Country_Headquarter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Headquarter);
                this.columnCountry_Mgr_Id = new global::System.Data.DataColumn("Country_Mgr_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Mgr_Id);
                this.columnDirectory_Id = new global::System.Data.DataColumn("Directory_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectory_Id);
                this.columnCountry_Status = new global::System.Data.DataColumn("Country_Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Status);
                this.columnGMT_tz = new global::System.Data.DataColumn("GMT_tz", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGMT_tz);
                this.columnDST_tz = new global::System.Data.DataColumn("DST_tz", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDST_tz);
                this.columnDST_Threshold = new global::System.Data.DataColumn("DST_Threshold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDST_Threshold);
                this.columnDST_Initial_Date = new global::System.Data.DataColumn("DST_Initial_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDST_Initial_Date);
                this.columnDST_End_Date = new global::System.Data.DataColumn("DST_End_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDST_End_Date);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnhostname = new global::System.Data.DataColumn("hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCorp_Id,
                                this.columnRegion_Id,
                                this.columnCountry_Id}, true));
                this.columnCorp_Id.AllowDBNull = false;
                this.columnRegion_Id.AllowDBNull = false;
                this.columnCountry_Id.AllowDBNull = false;
                this.columnContinent_Id.AllowDBNull = false;
                this.columnCountry_Headquarter.AllowDBNull = false;
                this.columnCountry_Status.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnhostname.AllowDBNull = false;
                this.columnhostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYRow NewST_COUNTRYRow() {
                return ((ST_COUNTRYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_COUNTRYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_COUNTRYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_COUNTRYRowChanged != null)) {
                    this.ST_COUNTRYRowChanged(this, new ST_COUNTRYRowChangeEvent(((ST_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_COUNTRYRowChanging != null)) {
                    this.ST_COUNTRYRowChanging(this, new ST_COUNTRYRowChangeEvent(((ST_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_COUNTRYRowDeleted != null)) {
                    this.ST_COUNTRYRowDeleted(this, new ST_COUNTRYRowChangeEvent(((ST_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_COUNTRYRowDeleting != null)) {
                    this.ST_COUNTRYRowDeleting(this, new ST_COUNTRYRowChangeEvent(((ST_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_COUNTRYRow(ST_COUNTRYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_COUNTRYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_GLOBAL_CITYDataTable : global::System.Data.TypedTableBase<ST_GLOBAL_CITYRow> {
            
            private global::System.Data.DataColumn columnCountry_Id;
            
            private global::System.Data.DataColumn columnDomesticreg_Id;
            
            private global::System.Data.DataColumn columnState_Prov_Id;
            
            private global::System.Data.DataColumn columnCity_Id;
            
            private global::System.Data.DataColumn columnCity_Desc;
            
            private global::System.Data.DataColumn columnCity_Abbrv_Name;
            
            private global::System.Data.DataColumn columnCity_Status;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnhostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYDataTable() {
                this.TableName = "ST_GLOBAL_CITY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_GLOBAL_CITYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_GLOBAL_CITYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_IdColumn {
                get {
                    return this.columnCountry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Domesticreg_IdColumn {
                get {
                    return this.columnDomesticreg_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn State_Prov_IdColumn {
                get {
                    return this.columnState_Prov_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_IdColumn {
                get {
                    return this.columnCity_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_DescColumn {
                get {
                    return this.columnCity_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_Abbrv_NameColumn {
                get {
                    return this.columnCity_Abbrv_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City_StatusColumn {
                get {
                    return this.columnCity_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hostnameColumn {
                get {
                    return this.columnhostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRow this[int index] {
                get {
                    return ((ST_GLOBAL_CITYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_CITYRowChangeEventHandler ST_GLOBAL_CITYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_CITYRowChangeEventHandler ST_GLOBAL_CITYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_CITYRowChangeEventHandler ST_GLOBAL_CITYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_CITYRowChangeEventHandler ST_GLOBAL_CITYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_GLOBAL_CITYRow(ST_GLOBAL_CITYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRow AddST_GLOBAL_CITYRow(int Country_Id, int Domesticreg_Id, int State_Prov_Id, int City_Id, string City_Desc, string City_Abbrv_Name, bool City_Status, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string hostname) {
                ST_GLOBAL_CITYRow rowST_GLOBAL_CITYRow = ((ST_GLOBAL_CITYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Country_Id,
                        Domesticreg_Id,
                        State_Prov_Id,
                        City_Id,
                        City_Desc,
                        City_Abbrv_Name,
                        City_Status,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        hostname};
                rowST_GLOBAL_CITYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_GLOBAL_CITYRow);
                return rowST_GLOBAL_CITYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRow FindByCountry_IdDomesticreg_IdState_Prov_IdCity_Id(int Country_Id, int Domesticreg_Id, int State_Prov_Id, int City_Id) {
                return ((ST_GLOBAL_CITYRow)(this.Rows.Find(new object[] {
                            Country_Id,
                            Domesticreg_Id,
                            State_Prov_Id,
                            City_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_GLOBAL_CITYDataTable cln = ((ST_GLOBAL_CITYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_GLOBAL_CITYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCountry_Id = base.Columns["Country_Id"];
                this.columnDomesticreg_Id = base.Columns["Domesticreg_Id"];
                this.columnState_Prov_Id = base.Columns["State_Prov_Id"];
                this.columnCity_Id = base.Columns["City_Id"];
                this.columnCity_Desc = base.Columns["City_Desc"];
                this.columnCity_Abbrv_Name = base.Columns["City_Abbrv_Name"];
                this.columnCity_Status = base.Columns["City_Status"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnhostname = base.Columns["hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCountry_Id = new global::System.Data.DataColumn("Country_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Id);
                this.columnDomesticreg_Id = new global::System.Data.DataColumn("Domesticreg_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomesticreg_Id);
                this.columnState_Prov_Id = new global::System.Data.DataColumn("State_Prov_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState_Prov_Id);
                this.columnCity_Id = new global::System.Data.DataColumn("City_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Id);
                this.columnCity_Desc = new global::System.Data.DataColumn("City_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Desc);
                this.columnCity_Abbrv_Name = new global::System.Data.DataColumn("City_Abbrv_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Abbrv_Name);
                this.columnCity_Status = new global::System.Data.DataColumn("City_Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity_Status);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnhostname = new global::System.Data.DataColumn("hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCountry_Id,
                                this.columnDomesticreg_Id,
                                this.columnState_Prov_Id,
                                this.columnCity_Id}, true));
                this.columnCountry_Id.AllowDBNull = false;
                this.columnDomesticreg_Id.AllowDBNull = false;
                this.columnState_Prov_Id.AllowDBNull = false;
                this.columnCity_Id.AllowDBNull = false;
                this.columnCity_Desc.AllowDBNull = false;
                this.columnCity_Desc.MaxLength = 150;
                this.columnCity_Abbrv_Name.AllowDBNull = false;
                this.columnCity_Abbrv_Name.MaxLength = 20;
                this.columnCity_Status.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnhostname.AllowDBNull = false;
                this.columnhostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRow NewST_GLOBAL_CITYRow() {
                return ((ST_GLOBAL_CITYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_GLOBAL_CITYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_GLOBAL_CITYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_GLOBAL_CITYRowChanged != null)) {
                    this.ST_GLOBAL_CITYRowChanged(this, new ST_GLOBAL_CITYRowChangeEvent(((ST_GLOBAL_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_GLOBAL_CITYRowChanging != null)) {
                    this.ST_GLOBAL_CITYRowChanging(this, new ST_GLOBAL_CITYRowChangeEvent(((ST_GLOBAL_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_GLOBAL_CITYRowDeleted != null)) {
                    this.ST_GLOBAL_CITYRowDeleted(this, new ST_GLOBAL_CITYRowChangeEvent(((ST_GLOBAL_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_GLOBAL_CITYRowDeleting != null)) {
                    this.ST_GLOBAL_CITYRowDeleting(this, new ST_GLOBAL_CITYRowChangeEvent(((ST_GLOBAL_CITYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_GLOBAL_CITYRow(ST_GLOBAL_CITYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_GLOBAL_CITYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_GLOBAL_COUNTRYDataTable : global::System.Data.TypedTableBase<ST_GLOBAL_COUNTRYRow> {
            
            private global::System.Data.DataColumn columnGlobal_Country_Id;
            
            private global::System.Data.DataColumn columnGlobal_Country_Desc;
            
            private global::System.Data.DataColumn columnGlobal_Country_Desc_EN;
            
            private global::System.Data.DataColumn columnGlobal_Country_Status;
            
            private global::System.Data.DataColumn columnCitizenship;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnhostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYDataTable() {
                this.TableName = "ST_GLOBAL_COUNTRY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_GLOBAL_COUNTRYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_GLOBAL_COUNTRYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Global_Country_IdColumn {
                get {
                    return this.columnGlobal_Country_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Global_Country_DescColumn {
                get {
                    return this.columnGlobal_Country_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Global_Country_Desc_ENColumn {
                get {
                    return this.columnGlobal_Country_Desc_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Global_Country_StatusColumn {
                get {
                    return this.columnGlobal_Country_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CitizenshipColumn {
                get {
                    return this.columnCitizenship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hostnameColumn {
                get {
                    return this.columnhostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRow this[int index] {
                get {
                    return ((ST_GLOBAL_COUNTRYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_COUNTRYRowChangeEventHandler ST_GLOBAL_COUNTRYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_COUNTRYRowChangeEventHandler ST_GLOBAL_COUNTRYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_COUNTRYRowChangeEventHandler ST_GLOBAL_COUNTRYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_GLOBAL_COUNTRYRowChangeEventHandler ST_GLOBAL_COUNTRYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_GLOBAL_COUNTRYRow(ST_GLOBAL_COUNTRYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRow AddST_GLOBAL_COUNTRYRow(int Global_Country_Id, string Global_Country_Desc, string Global_Country_Desc_EN, bool Global_Country_Status, string Citizenship, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string hostname) {
                ST_GLOBAL_COUNTRYRow rowST_GLOBAL_COUNTRYRow = ((ST_GLOBAL_COUNTRYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Global_Country_Id,
                        Global_Country_Desc,
                        Global_Country_Desc_EN,
                        Global_Country_Status,
                        Citizenship,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        hostname};
                rowST_GLOBAL_COUNTRYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_GLOBAL_COUNTRYRow);
                return rowST_GLOBAL_COUNTRYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRow FindByGlobal_Country_Id(int Global_Country_Id) {
                return ((ST_GLOBAL_COUNTRYRow)(this.Rows.Find(new object[] {
                            Global_Country_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_GLOBAL_COUNTRYDataTable cln = ((ST_GLOBAL_COUNTRYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_GLOBAL_COUNTRYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGlobal_Country_Id = base.Columns["Global_Country_Id"];
                this.columnGlobal_Country_Desc = base.Columns["Global_Country_Desc"];
                this.columnGlobal_Country_Desc_EN = base.Columns["Global_Country_Desc_EN"];
                this.columnGlobal_Country_Status = base.Columns["Global_Country_Status"];
                this.columnCitizenship = base.Columns["Citizenship"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnhostname = base.Columns["hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGlobal_Country_Id = new global::System.Data.DataColumn("Global_Country_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobal_Country_Id);
                this.columnGlobal_Country_Desc = new global::System.Data.DataColumn("Global_Country_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobal_Country_Desc);
                this.columnGlobal_Country_Desc_EN = new global::System.Data.DataColumn("Global_Country_Desc_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobal_Country_Desc_EN);
                this.columnGlobal_Country_Status = new global::System.Data.DataColumn("Global_Country_Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobal_Country_Status);
                this.columnCitizenship = new global::System.Data.DataColumn("Citizenship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCitizenship);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnhostname = new global::System.Data.DataColumn("hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGlobal_Country_Id}, true));
                this.columnGlobal_Country_Id.AllowDBNull = false;
                this.columnGlobal_Country_Id.Unique = true;
                this.columnGlobal_Country_Desc.AllowDBNull = false;
                this.columnGlobal_Country_Desc.MaxLength = 100;
                this.columnGlobal_Country_Desc_EN.MaxLength = 100;
                this.columnGlobal_Country_Status.AllowDBNull = false;
                this.columnCitizenship.MaxLength = 60;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnhostname.AllowDBNull = false;
                this.columnhostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRow NewST_GLOBAL_COUNTRYRow() {
                return ((ST_GLOBAL_COUNTRYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_GLOBAL_COUNTRYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_GLOBAL_COUNTRYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_GLOBAL_COUNTRYRowChanged != null)) {
                    this.ST_GLOBAL_COUNTRYRowChanged(this, new ST_GLOBAL_COUNTRYRowChangeEvent(((ST_GLOBAL_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_GLOBAL_COUNTRYRowChanging != null)) {
                    this.ST_GLOBAL_COUNTRYRowChanging(this, new ST_GLOBAL_COUNTRYRowChangeEvent(((ST_GLOBAL_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_GLOBAL_COUNTRYRowDeleted != null)) {
                    this.ST_GLOBAL_COUNTRYRowDeleted(this, new ST_GLOBAL_COUNTRYRowChangeEvent(((ST_GLOBAL_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_GLOBAL_COUNTRYRowDeleting != null)) {
                    this.ST_GLOBAL_COUNTRYRowDeleting(this, new ST_GLOBAL_COUNTRYRowChangeEvent(((ST_GLOBAL_COUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_GLOBAL_COUNTRYRow(ST_GLOBAL_COUNTRYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_GLOBAL_COUNTRYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_VEHICLE_MAKEDataTable : global::System.Data.TypedTableBase<ST_VEHICLE_MAKERow> {
            
            private global::System.Data.DataColumn columnMake_Id;
            
            private global::System.Data.DataColumn columnMake_Desc;
            
            private global::System.Data.DataColumn columnMake_Status;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnHostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKEDataTable() {
                this.TableName = "ST_VEHICLE_MAKE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_MAKEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_VEHICLE_MAKEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Make_IdColumn {
                get {
                    return this.columnMake_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Make_DescColumn {
                get {
                    return this.columnMake_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Make_StatusColumn {
                get {
                    return this.columnMake_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HostnameColumn {
                get {
                    return this.columnHostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKERow this[int index] {
                get {
                    return ((ST_VEHICLE_MAKERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MAKERowChangeEventHandler ST_VEHICLE_MAKERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MAKERowChangeEventHandler ST_VEHICLE_MAKERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MAKERowChangeEventHandler ST_VEHICLE_MAKERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MAKERowChangeEventHandler ST_VEHICLE_MAKERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_VEHICLE_MAKERow(ST_VEHICLE_MAKERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKERow AddST_VEHICLE_MAKERow(int Make_Id, string Make_Desc, bool Make_Status, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string Hostname) {
                ST_VEHICLE_MAKERow rowST_VEHICLE_MAKERow = ((ST_VEHICLE_MAKERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Make_Id,
                        Make_Desc,
                        Make_Status,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        Hostname};
                rowST_VEHICLE_MAKERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_VEHICLE_MAKERow);
                return rowST_VEHICLE_MAKERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKERow FindByMake_Id(int Make_Id) {
                return ((ST_VEHICLE_MAKERow)(this.Rows.Find(new object[] {
                            Make_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_VEHICLE_MAKEDataTable cln = ((ST_VEHICLE_MAKEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_VEHICLE_MAKEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMake_Id = base.Columns["Make_Id"];
                this.columnMake_Desc = base.Columns["Make_Desc"];
                this.columnMake_Status = base.Columns["Make_Status"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnHostname = base.Columns["Hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMake_Id = new global::System.Data.DataColumn("Make_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMake_Id);
                this.columnMake_Desc = new global::System.Data.DataColumn("Make_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMake_Desc);
                this.columnMake_Status = new global::System.Data.DataColumn("Make_Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMake_Status);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnHostname = new global::System.Data.DataColumn("Hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMake_Id}, true));
                this.columnMake_Id.AllowDBNull = false;
                this.columnMake_Id.Unique = true;
                this.columnMake_Desc.AllowDBNull = false;
                this.columnMake_Desc.MaxLength = 60;
                this.columnMake_Status.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnHostname.AllowDBNull = false;
                this.columnHostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKERow NewST_VEHICLE_MAKERow() {
                return ((ST_VEHICLE_MAKERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_VEHICLE_MAKERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_VEHICLE_MAKERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_VEHICLE_MAKERowChanged != null)) {
                    this.ST_VEHICLE_MAKERowChanged(this, new ST_VEHICLE_MAKERowChangeEvent(((ST_VEHICLE_MAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_VEHICLE_MAKERowChanging != null)) {
                    this.ST_VEHICLE_MAKERowChanging(this, new ST_VEHICLE_MAKERowChangeEvent(((ST_VEHICLE_MAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_VEHICLE_MAKERowDeleted != null)) {
                    this.ST_VEHICLE_MAKERowDeleted(this, new ST_VEHICLE_MAKERowChangeEvent(((ST_VEHICLE_MAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_VEHICLE_MAKERowDeleting != null)) {
                    this.ST_VEHICLE_MAKERowDeleting(this, new ST_VEHICLE_MAKERowChangeEvent(((ST_VEHICLE_MAKERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_VEHICLE_MAKERow(ST_VEHICLE_MAKERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_VEHICLE_MAKEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_VEHICLE_MODELDataTable : global::System.Data.TypedTableBase<ST_VEHICLE_MODELRow> {
            
            private global::System.Data.DataColumn columnMake_Id;
            
            private global::System.Data.DataColumn columnModel_Id;
            
            private global::System.Data.DataColumn columnVehicle_Type_Id;
            
            private global::System.Data.DataColumn columnModel_Desc;
            
            private global::System.Data.DataColumn columnVehicle_Model_status;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnHostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELDataTable() {
                this.TableName = "ST_VEHICLE_MODEL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_MODELDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_VEHICLE_MODELDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Make_IdColumn {
                get {
                    return this.columnMake_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Model_IdColumn {
                get {
                    return this.columnModel_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vehicle_Type_IdColumn {
                get {
                    return this.columnVehicle_Type_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Model_DescColumn {
                get {
                    return this.columnModel_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vehicle_Model_statusColumn {
                get {
                    return this.columnVehicle_Model_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HostnameColumn {
                get {
                    return this.columnHostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow this[int index] {
                get {
                    return ((ST_VEHICLE_MODELRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MODELRowChangeEventHandler ST_VEHICLE_MODELRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MODELRowChangeEventHandler ST_VEHICLE_MODELRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MODELRowChangeEventHandler ST_VEHICLE_MODELRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_MODELRowChangeEventHandler ST_VEHICLE_MODELRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_VEHICLE_MODELRow(ST_VEHICLE_MODELRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow AddST_VEHICLE_MODELRow(ST_VEHICLE_MAKERow _parentST_VEHICLE_MAKERowByFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_MAKE_Make_Id, int Model_Id, ST_VEHICLE_TYPERow _parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id, string Model_Desc, bool Vehicle_Model_status, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string Hostname) {
                ST_VEHICLE_MODELRow rowST_VEHICLE_MODELRow = ((ST_VEHICLE_MODELRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Model_Id,
                        null,
                        Model_Desc,
                        Vehicle_Model_status,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        Hostname};
                if ((_parentST_VEHICLE_MAKERowByFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_MAKE_Make_Id != null)) {
                    columnValuesArray[0] = _parentST_VEHICLE_MAKERowByFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_MAKE_Make_Id[0];
                }
                if ((_parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id != null)) {
                    columnValuesArray[2] = _parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_MODEL_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id[0];
                }
                rowST_VEHICLE_MODELRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_VEHICLE_MODELRow);
                return rowST_VEHICLE_MODELRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow FindByMake_IdModel_Id(int Make_Id, int Model_Id) {
                return ((ST_VEHICLE_MODELRow)(this.Rows.Find(new object[] {
                            Make_Id,
                            Model_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_VEHICLE_MODELDataTable cln = ((ST_VEHICLE_MODELDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_VEHICLE_MODELDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMake_Id = base.Columns["Make_Id"];
                this.columnModel_Id = base.Columns["Model_Id"];
                this.columnVehicle_Type_Id = base.Columns["Vehicle_Type_Id"];
                this.columnModel_Desc = base.Columns["Model_Desc"];
                this.columnVehicle_Model_status = base.Columns["Vehicle_Model_status"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnHostname = base.Columns["Hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMake_Id = new global::System.Data.DataColumn("Make_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMake_Id);
                this.columnModel_Id = new global::System.Data.DataColumn("Model_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Id);
                this.columnVehicle_Type_Id = new global::System.Data.DataColumn("Vehicle_Type_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_Type_Id);
                this.columnModel_Desc = new global::System.Data.DataColumn("Model_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Desc);
                this.columnVehicle_Model_status = new global::System.Data.DataColumn("Vehicle_Model_status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_Model_status);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnHostname = new global::System.Data.DataColumn("Hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMake_Id,
                                this.columnModel_Id}, true));
                this.columnMake_Id.AllowDBNull = false;
                this.columnModel_Id.AllowDBNull = false;
                this.columnVehicle_Type_Id.AllowDBNull = false;
                this.columnModel_Desc.AllowDBNull = false;
                this.columnModel_Desc.MaxLength = 60;
                this.columnVehicle_Model_status.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnHostname.AllowDBNull = false;
                this.columnHostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow NewST_VEHICLE_MODELRow() {
                return ((ST_VEHICLE_MODELRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_VEHICLE_MODELRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_VEHICLE_MODELRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_VEHICLE_MODELRowChanged != null)) {
                    this.ST_VEHICLE_MODELRowChanged(this, new ST_VEHICLE_MODELRowChangeEvent(((ST_VEHICLE_MODELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_VEHICLE_MODELRowChanging != null)) {
                    this.ST_VEHICLE_MODELRowChanging(this, new ST_VEHICLE_MODELRowChangeEvent(((ST_VEHICLE_MODELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_VEHICLE_MODELRowDeleted != null)) {
                    this.ST_VEHICLE_MODELRowDeleted(this, new ST_VEHICLE_MODELRowChangeEvent(((ST_VEHICLE_MODELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_VEHICLE_MODELRowDeleting != null)) {
                    this.ST_VEHICLE_MODELRowDeleting(this, new ST_VEHICLE_MODELRowChangeEvent(((ST_VEHICLE_MODELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_VEHICLE_MODELRow(ST_VEHICLE_MODELRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_VEHICLE_MODELDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_VEHICLE_STOREDDataTable : global::System.Data.TypedTableBase<ST_VEHICLE_STOREDRow> {
            
            private global::System.Data.DataColumn columnStored_Id;
            
            private global::System.Data.DataColumn columnStored_Desc;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnHostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDDataTable() {
                this.TableName = "ST_VEHICLE_STORED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_STOREDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_VEHICLE_STOREDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Stored_IdColumn {
                get {
                    return this.columnStored_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Stored_DescColumn {
                get {
                    return this.columnStored_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HostnameColumn {
                get {
                    return this.columnHostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDRow this[int index] {
                get {
                    return ((ST_VEHICLE_STOREDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_STOREDRowChangeEventHandler ST_VEHICLE_STOREDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_STOREDRowChangeEventHandler ST_VEHICLE_STOREDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_STOREDRowChangeEventHandler ST_VEHICLE_STOREDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_STOREDRowChangeEventHandler ST_VEHICLE_STOREDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_VEHICLE_STOREDRow(ST_VEHICLE_STOREDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDRow AddST_VEHICLE_STOREDRow(int Stored_Id, string Stored_Desc, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string Hostname) {
                ST_VEHICLE_STOREDRow rowST_VEHICLE_STOREDRow = ((ST_VEHICLE_STOREDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Stored_Id,
                        Stored_Desc,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        Hostname};
                rowST_VEHICLE_STOREDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_VEHICLE_STOREDRow);
                return rowST_VEHICLE_STOREDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDRow FindByStored_Id(int Stored_Id) {
                return ((ST_VEHICLE_STOREDRow)(this.Rows.Find(new object[] {
                            Stored_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_VEHICLE_STOREDDataTable cln = ((ST_VEHICLE_STOREDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_VEHICLE_STOREDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStored_Id = base.Columns["Stored_Id"];
                this.columnStored_Desc = base.Columns["Stored_Desc"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnHostname = base.Columns["Hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStored_Id = new global::System.Data.DataColumn("Stored_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStored_Id);
                this.columnStored_Desc = new global::System.Data.DataColumn("Stored_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStored_Desc);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnHostname = new global::System.Data.DataColumn("Hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStored_Id}, true));
                this.columnStored_Id.AllowDBNull = false;
                this.columnStored_Id.Unique = true;
                this.columnStored_Desc.MaxLength = 100;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnHostname.AllowDBNull = false;
                this.columnHostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDRow NewST_VEHICLE_STOREDRow() {
                return ((ST_VEHICLE_STOREDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_VEHICLE_STOREDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_VEHICLE_STOREDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_VEHICLE_STOREDRowChanged != null)) {
                    this.ST_VEHICLE_STOREDRowChanged(this, new ST_VEHICLE_STOREDRowChangeEvent(((ST_VEHICLE_STOREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_VEHICLE_STOREDRowChanging != null)) {
                    this.ST_VEHICLE_STOREDRowChanging(this, new ST_VEHICLE_STOREDRowChangeEvent(((ST_VEHICLE_STOREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_VEHICLE_STOREDRowDeleted != null)) {
                    this.ST_VEHICLE_STOREDRowDeleted(this, new ST_VEHICLE_STOREDRowChangeEvent(((ST_VEHICLE_STOREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_VEHICLE_STOREDRowDeleting != null)) {
                    this.ST_VEHICLE_STOREDRowDeleting(this, new ST_VEHICLE_STOREDRowChangeEvent(((ST_VEHICLE_STOREDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_VEHICLE_STOREDRow(ST_VEHICLE_STOREDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_VEHICLE_STOREDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_VEHICLE_TYPEDataTable : global::System.Data.TypedTableBase<ST_VEHICLE_TYPERow> {
            
            private global::System.Data.DataColumn columnVehicle_Type_Id;
            
            private global::System.Data.DataColumn columnVehicle_Type_Desc;
            
            private global::System.Data.DataColumn columnVehicle_Type_Status;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnHostname;
            
            private global::System.Data.DataColumn columnnamekey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPEDataTable() {
                this.TableName = "ST_VEHICLE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_VEHICLE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vehicle_Type_IdColumn {
                get {
                    return this.columnVehicle_Type_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vehicle_Type_DescColumn {
                get {
                    return this.columnVehicle_Type_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vehicle_Type_StatusColumn {
                get {
                    return this.columnVehicle_Type_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HostnameColumn {
                get {
                    return this.columnHostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn namekeyColumn {
                get {
                    return this.columnnamekey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow this[int index] {
                get {
                    return ((ST_VEHICLE_TYPERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPERowChangeEventHandler ST_VEHICLE_TYPERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPERowChangeEventHandler ST_VEHICLE_TYPERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPERowChangeEventHandler ST_VEHICLE_TYPERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPERowChangeEventHandler ST_VEHICLE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_VEHICLE_TYPERow(ST_VEHICLE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow AddST_VEHICLE_TYPERow(int Vehicle_Type_Id, string Vehicle_Type_Desc, bool Vehicle_Type_Status, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string Hostname, string namekey) {
                ST_VEHICLE_TYPERow rowST_VEHICLE_TYPERow = ((ST_VEHICLE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Vehicle_Type_Id,
                        Vehicle_Type_Desc,
                        Vehicle_Type_Status,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        Hostname,
                        namekey};
                rowST_VEHICLE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_VEHICLE_TYPERow);
                return rowST_VEHICLE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow FindByVehicle_Type_Id(int Vehicle_Type_Id) {
                return ((ST_VEHICLE_TYPERow)(this.Rows.Find(new object[] {
                            Vehicle_Type_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_VEHICLE_TYPEDataTable cln = ((ST_VEHICLE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_VEHICLE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVehicle_Type_Id = base.Columns["Vehicle_Type_Id"];
                this.columnVehicle_Type_Desc = base.Columns["Vehicle_Type_Desc"];
                this.columnVehicle_Type_Status = base.Columns["Vehicle_Type_Status"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnHostname = base.Columns["Hostname"];
                this.columnnamekey = base.Columns["namekey"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVehicle_Type_Id = new global::System.Data.DataColumn("Vehicle_Type_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_Type_Id);
                this.columnVehicle_Type_Desc = new global::System.Data.DataColumn("Vehicle_Type_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_Type_Desc);
                this.columnVehicle_Type_Status = new global::System.Data.DataColumn("Vehicle_Type_Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_Type_Status);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnHostname = new global::System.Data.DataColumn("Hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostname);
                this.columnnamekey = new global::System.Data.DataColumn("namekey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamekey);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVehicle_Type_Id}, true));
                this.columnVehicle_Type_Id.AllowDBNull = false;
                this.columnVehicle_Type_Id.Unique = true;
                this.columnVehicle_Type_Desc.AllowDBNull = false;
                this.columnVehicle_Type_Desc.MaxLength = 60;
                this.columnVehicle_Type_Status.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnHostname.AllowDBNull = false;
                this.columnHostname.MaxLength = 100;
                this.columnnamekey.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow NewST_VEHICLE_TYPERow() {
                return ((ST_VEHICLE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_VEHICLE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_VEHICLE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_VEHICLE_TYPERowChanged != null)) {
                    this.ST_VEHICLE_TYPERowChanged(this, new ST_VEHICLE_TYPERowChangeEvent(((ST_VEHICLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_VEHICLE_TYPERowChanging != null)) {
                    this.ST_VEHICLE_TYPERowChanging(this, new ST_VEHICLE_TYPERowChangeEvent(((ST_VEHICLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_VEHICLE_TYPERowDeleted != null)) {
                    this.ST_VEHICLE_TYPERowDeleted(this, new ST_VEHICLE_TYPERowChangeEvent(((ST_VEHICLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_VEHICLE_TYPERowDeleting != null)) {
                    this.ST_VEHICLE_TYPERowDeleting(this, new ST_VEHICLE_TYPERowChangeEvent(((ST_VEHICLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_VEHICLE_TYPERow(ST_VEHICLE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_VEHICLE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_VEHICLE_TYPE_PRODUCTDataTable : global::System.Data.TypedTableBase<ST_VEHICLE_TYPE_PRODUCTRow> {
            
            private global::System.Data.DataColumn columnCorp_Id;
            
            private global::System.Data.DataColumn columnRegion_Id;
            
            private global::System.Data.DataColumn columnCountry_Id;
            
            private global::System.Data.DataColumn columnBl_Type_Id;
            
            private global::System.Data.DataColumn columnBl_Id;
            
            private global::System.Data.DataColumn columnProduct_Id;
            
            private global::System.Data.DataColumn columnVehicle_Type_Id;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnHostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTDataTable() {
                this.TableName = "ST_VEHICLE_TYPE_PRODUCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_TYPE_PRODUCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_VEHICLE_TYPE_PRODUCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Corp_IdColumn {
                get {
                    return this.columnCorp_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Region_IdColumn {
                get {
                    return this.columnRegion_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Country_IdColumn {
                get {
                    return this.columnCountry_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bl_Type_IdColumn {
                get {
                    return this.columnBl_Type_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bl_IdColumn {
                get {
                    return this.columnBl_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Product_IdColumn {
                get {
                    return this.columnProduct_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vehicle_Type_IdColumn {
                get {
                    return this.columnVehicle_Type_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HostnameColumn {
                get {
                    return this.columnHostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTRow this[int index] {
                get {
                    return ((ST_VEHICLE_TYPE_PRODUCTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPE_PRODUCTRowChangeEventHandler ST_VEHICLE_TYPE_PRODUCTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPE_PRODUCTRowChangeEventHandler ST_VEHICLE_TYPE_PRODUCTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPE_PRODUCTRowChangeEventHandler ST_VEHICLE_TYPE_PRODUCTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_TYPE_PRODUCTRowChangeEventHandler ST_VEHICLE_TYPE_PRODUCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_VEHICLE_TYPE_PRODUCTRow(ST_VEHICLE_TYPE_PRODUCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTRow AddST_VEHICLE_TYPE_PRODUCTRow(int Corp_Id, int Region_Id, int Country_Id, int Bl_Type_Id, int Bl_Id, int Product_Id, ST_VEHICLE_TYPERow _parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_TYPE_PRODUCT_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string Hostname) {
                ST_VEHICLE_TYPE_PRODUCTRow rowST_VEHICLE_TYPE_PRODUCTRow = ((ST_VEHICLE_TYPE_PRODUCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Corp_Id,
                        Region_Id,
                        Country_Id,
                        Bl_Type_Id,
                        Bl_Id,
                        Product_Id,
                        null,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        Hostname};
                if ((_parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_TYPE_PRODUCT_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id != null)) {
                    columnValuesArray[6] = _parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_TYPE_PRODUCT_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id[0];
                }
                rowST_VEHICLE_TYPE_PRODUCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_VEHICLE_TYPE_PRODUCTRow);
                return rowST_VEHICLE_TYPE_PRODUCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTRow FindByCorp_IdRegion_IdCountry_IdBl_Type_IdBl_IdProduct_IdVehicle_Type_Id(int Corp_Id, int Region_Id, int Country_Id, int Bl_Type_Id, int Bl_Id, int Product_Id, int Vehicle_Type_Id) {
                return ((ST_VEHICLE_TYPE_PRODUCTRow)(this.Rows.Find(new object[] {
                            Corp_Id,
                            Region_Id,
                            Country_Id,
                            Bl_Type_Id,
                            Bl_Id,
                            Product_Id,
                            Vehicle_Type_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_VEHICLE_TYPE_PRODUCTDataTable cln = ((ST_VEHICLE_TYPE_PRODUCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_VEHICLE_TYPE_PRODUCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCorp_Id = base.Columns["Corp_Id"];
                this.columnRegion_Id = base.Columns["Region_Id"];
                this.columnCountry_Id = base.Columns["Country_Id"];
                this.columnBl_Type_Id = base.Columns["Bl_Type_Id"];
                this.columnBl_Id = base.Columns["Bl_Id"];
                this.columnProduct_Id = base.Columns["Product_Id"];
                this.columnVehicle_Type_Id = base.Columns["Vehicle_Type_Id"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnHostname = base.Columns["Hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCorp_Id = new global::System.Data.DataColumn("Corp_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorp_Id);
                this.columnRegion_Id = new global::System.Data.DataColumn("Region_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion_Id);
                this.columnCountry_Id = new global::System.Data.DataColumn("Country_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry_Id);
                this.columnBl_Type_Id = new global::System.Data.DataColumn("Bl_Type_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBl_Type_Id);
                this.columnBl_Id = new global::System.Data.DataColumn("Bl_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBl_Id);
                this.columnProduct_Id = new global::System.Data.DataColumn("Product_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Id);
                this.columnVehicle_Type_Id = new global::System.Data.DataColumn("Vehicle_Type_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_Type_Id);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnHostname = new global::System.Data.DataColumn("Hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCorp_Id,
                                this.columnRegion_Id,
                                this.columnCountry_Id,
                                this.columnBl_Type_Id,
                                this.columnBl_Id,
                                this.columnProduct_Id,
                                this.columnVehicle_Type_Id}, true));
                this.columnCorp_Id.AllowDBNull = false;
                this.columnRegion_Id.AllowDBNull = false;
                this.columnCountry_Id.AllowDBNull = false;
                this.columnBl_Type_Id.AllowDBNull = false;
                this.columnBl_Id.AllowDBNull = false;
                this.columnProduct_Id.AllowDBNull = false;
                this.columnVehicle_Type_Id.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnHostname.AllowDBNull = false;
                this.columnHostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTRow NewST_VEHICLE_TYPE_PRODUCTRow() {
                return ((ST_VEHICLE_TYPE_PRODUCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_VEHICLE_TYPE_PRODUCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_VEHICLE_TYPE_PRODUCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_VEHICLE_TYPE_PRODUCTRowChanged != null)) {
                    this.ST_VEHICLE_TYPE_PRODUCTRowChanged(this, new ST_VEHICLE_TYPE_PRODUCTRowChangeEvent(((ST_VEHICLE_TYPE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_VEHICLE_TYPE_PRODUCTRowChanging != null)) {
                    this.ST_VEHICLE_TYPE_PRODUCTRowChanging(this, new ST_VEHICLE_TYPE_PRODUCTRowChangeEvent(((ST_VEHICLE_TYPE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_VEHICLE_TYPE_PRODUCTRowDeleted != null)) {
                    this.ST_VEHICLE_TYPE_PRODUCTRowDeleted(this, new ST_VEHICLE_TYPE_PRODUCTRowChangeEvent(((ST_VEHICLE_TYPE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_VEHICLE_TYPE_PRODUCTRowDeleting != null)) {
                    this.ST_VEHICLE_TYPE_PRODUCTRowDeleting(this, new ST_VEHICLE_TYPE_PRODUCTRowChangeEvent(((ST_VEHICLE_TYPE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_VEHICLE_TYPE_PRODUCTRow(ST_VEHICLE_TYPE_PRODUCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_VEHICLE_TYPE_PRODUCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_VEHICLE_USAGEDataTable : global::System.Data.TypedTableBase<ST_VEHICLE_USAGERow> {
            
            private global::System.Data.DataColumn columnUsage_Id;
            
            private global::System.Data.DataColumn columnUsage_Desc;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnHostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGEDataTable() {
                this.TableName = "ST_VEHICLE_USAGE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_USAGEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_VEHICLE_USAGEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Usage_IdColumn {
                get {
                    return this.columnUsage_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Usage_DescColumn {
                get {
                    return this.columnUsage_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HostnameColumn {
                get {
                    return this.columnHostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGERow this[int index] {
                get {
                    return ((ST_VEHICLE_USAGERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_USAGERowChangeEventHandler ST_VEHICLE_USAGERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_USAGERowChangeEventHandler ST_VEHICLE_USAGERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_USAGERowChangeEventHandler ST_VEHICLE_USAGERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_USAGERowChangeEventHandler ST_VEHICLE_USAGERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_VEHICLE_USAGERow(ST_VEHICLE_USAGERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGERow AddST_VEHICLE_USAGERow(string Usage_Desc, System.DateTime Create_Date, System.DateTime Modi_Date, int Create_UsrId, int Modi_UsrId, string Hostname) {
                ST_VEHICLE_USAGERow rowST_VEHICLE_USAGERow = ((ST_VEHICLE_USAGERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Usage_Desc,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        Hostname};
                rowST_VEHICLE_USAGERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_VEHICLE_USAGERow);
                return rowST_VEHICLE_USAGERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGERow FindByUsage_Id(int Usage_Id) {
                return ((ST_VEHICLE_USAGERow)(this.Rows.Find(new object[] {
                            Usage_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_VEHICLE_USAGEDataTable cln = ((ST_VEHICLE_USAGEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_VEHICLE_USAGEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUsage_Id = base.Columns["Usage_Id"];
                this.columnUsage_Desc = base.Columns["Usage_Desc"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnHostname = base.Columns["Hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUsage_Id = new global::System.Data.DataColumn("Usage_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsage_Id);
                this.columnUsage_Desc = new global::System.Data.DataColumn("Usage_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsage_Desc);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnHostname = new global::System.Data.DataColumn("Hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUsage_Id}, true));
                this.columnUsage_Id.AutoIncrement = true;
                this.columnUsage_Id.AutoIncrementSeed = -1;
                this.columnUsage_Id.AutoIncrementStep = -1;
                this.columnUsage_Id.AllowDBNull = false;
                this.columnUsage_Id.ReadOnly = true;
                this.columnUsage_Id.Unique = true;
                this.columnUsage_Desc.MaxLength = 50;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnHostname.AllowDBNull = false;
                this.columnHostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGERow NewST_VEHICLE_USAGERow() {
                return ((ST_VEHICLE_USAGERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_VEHICLE_USAGERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_VEHICLE_USAGERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_VEHICLE_USAGERowChanged != null)) {
                    this.ST_VEHICLE_USAGERowChanged(this, new ST_VEHICLE_USAGERowChangeEvent(((ST_VEHICLE_USAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_VEHICLE_USAGERowChanging != null)) {
                    this.ST_VEHICLE_USAGERowChanging(this, new ST_VEHICLE_USAGERowChangeEvent(((ST_VEHICLE_USAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_VEHICLE_USAGERowDeleted != null)) {
                    this.ST_VEHICLE_USAGERowDeleted(this, new ST_VEHICLE_USAGERowChangeEvent(((ST_VEHICLE_USAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_VEHICLE_USAGERowDeleting != null)) {
                    this.ST_VEHICLE_USAGERowDeleting(this, new ST_VEHICLE_USAGERowChangeEvent(((ST_VEHICLE_USAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_VEHICLE_USAGERow(ST_VEHICLE_USAGERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_VEHICLE_USAGEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ST_VEHICLE_VERSIONDataTable : global::System.Data.TypedTableBase<ST_VEHICLE_VERSIONRow> {
            
            private global::System.Data.DataColumn columnMake_Id;
            
            private global::System.Data.DataColumn columnModel_Id;
            
            private global::System.Data.DataColumn columnVersion_Id;
            
            private global::System.Data.DataColumn columnVehicle_Type_Id;
            
            private global::System.Data.DataColumn columnVersion_Desc;
            
            private global::System.Data.DataColumn columnModel_Year;
            
            private global::System.Data.DataColumn columnBody_Style;
            
            private global::System.Data.DataColumn columnCylinder;
            
            private global::System.Data.DataColumn columnEngine_Type;
            
            private global::System.Data.DataColumn columnEngine_RPM;
            
            private global::System.Data.DataColumn columnFuel_Int;
            
            private global::System.Data.DataColumn columnCo2_Emissions;
            
            private global::System.Data.DataColumn columnTop_Speed_Kph;
            
            private global::System.Data.DataColumn columnDrive_Type;
            
            private global::System.Data.DataColumn columnTransmission_Type;
            
            private global::System.Data.DataColumn columnSeats;
            
            private global::System.Data.DataColumn columnDoors;
            
            private global::System.Data.DataColumn columnWeight_Kg;
            
            private global::System.Data.DataColumn columnSold_In_USA;
            
            private global::System.Data.DataColumn columnLoad_Capacity_Tons;
            
            private global::System.Data.DataColumn columnLoad_Capacity_Pound;
            
            private global::System.Data.DataColumn columnHP;
            
            private global::System.Data.DataColumn columnLT_CubicCentimeter;
            
            private global::System.Data.DataColumn columnVersion_Status;
            
            private global::System.Data.DataColumn columnValor_Referencia_Dgii;
            
            private global::System.Data.DataColumn columnCreate_Date;
            
            private global::System.Data.DataColumn columnModi_Date;
            
            private global::System.Data.DataColumn columnCreate_UsrId;
            
            private global::System.Data.DataColumn columnModi_UsrId;
            
            private global::System.Data.DataColumn columnHostname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONDataTable() {
                this.TableName = "ST_VEHICLE_VERSION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_VERSIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ST_VEHICLE_VERSIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Make_IdColumn {
                get {
                    return this.columnMake_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Model_IdColumn {
                get {
                    return this.columnModel_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Version_IdColumn {
                get {
                    return this.columnVersion_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vehicle_Type_IdColumn {
                get {
                    return this.columnVehicle_Type_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Version_DescColumn {
                get {
                    return this.columnVersion_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Model_YearColumn {
                get {
                    return this.columnModel_Year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Body_StyleColumn {
                get {
                    return this.columnBody_Style;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CylinderColumn {
                get {
                    return this.columnCylinder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Engine_TypeColumn {
                get {
                    return this.columnEngine_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Engine_RPMColumn {
                get {
                    return this.columnEngine_RPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Fuel_IntColumn {
                get {
                    return this.columnFuel_Int;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Co2_EmissionsColumn {
                get {
                    return this.columnCo2_Emissions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Top_Speed_KphColumn {
                get {
                    return this.columnTop_Speed_Kph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Drive_TypeColumn {
                get {
                    return this.columnDrive_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Transmission_TypeColumn {
                get {
                    return this.columnTransmission_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatsColumn {
                get {
                    return this.columnSeats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoorsColumn {
                get {
                    return this.columnDoors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Weight_KgColumn {
                get {
                    return this.columnWeight_Kg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sold_In_USAColumn {
                get {
                    return this.columnSold_In_USA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Load_Capacity_TonsColumn {
                get {
                    return this.columnLoad_Capacity_Tons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Load_Capacity_PoundColumn {
                get {
                    return this.columnLoad_Capacity_Pound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HPColumn {
                get {
                    return this.columnHP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LT_CubicCentimeterColumn {
                get {
                    return this.columnLT_CubicCentimeter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Version_StatusColumn {
                get {
                    return this.columnVersion_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Valor_Referencia_DgiiColumn {
                get {
                    return this.columnValor_Referencia_Dgii;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_DateColumn {
                get {
                    return this.columnCreate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_DateColumn {
                get {
                    return this.columnModi_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Create_UsrIdColumn {
                get {
                    return this.columnCreate_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Modi_UsrIdColumn {
                get {
                    return this.columnModi_UsrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HostnameColumn {
                get {
                    return this.columnHostname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow this[int index] {
                get {
                    return ((ST_VEHICLE_VERSIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_VERSIONRowChangeEventHandler ST_VEHICLE_VERSIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_VERSIONRowChangeEventHandler ST_VEHICLE_VERSIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_VERSIONRowChangeEventHandler ST_VEHICLE_VERSIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ST_VEHICLE_VERSIONRowChangeEventHandler ST_VEHICLE_VERSIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddST_VEHICLE_VERSIONRow(ST_VEHICLE_VERSIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow AddST_VEHICLE_VERSIONRow(
                        int Make_Id, 
                        int Model_Id, 
                        int Version_Id, 
                        ST_VEHICLE_TYPERow _parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id, 
                        string Version_Desc, 
                        int Model_Year, 
                        string Body_Style, 
                        int Cylinder, 
                        string Engine_Type, 
                        string Engine_RPM, 
                        int Fuel_Int, 
                        string Co2_Emissions, 
                        string Top_Speed_Kph, 
                        string Drive_Type, 
                        string Transmission_Type, 
                        int Seats, 
                        string Doors, 
                        int Weight_Kg, 
                        bool Sold_In_USA, 
                        decimal Load_Capacity_Tons, 
                        decimal Load_Capacity_Pound, 
                        int HP, 
                        decimal LT_CubicCentimeter, 
                        bool Version_Status, 
                        decimal Valor_Referencia_Dgii, 
                        System.DateTime Create_Date, 
                        System.DateTime Modi_Date, 
                        int Create_UsrId, 
                        int Modi_UsrId, 
                        string Hostname) {
                ST_VEHICLE_VERSIONRow rowST_VEHICLE_VERSIONRow = ((ST_VEHICLE_VERSIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Make_Id,
                        Model_Id,
                        Version_Id,
                        null,
                        Version_Desc,
                        Model_Year,
                        Body_Style,
                        Cylinder,
                        Engine_Type,
                        Engine_RPM,
                        Fuel_Int,
                        Co2_Emissions,
                        Top_Speed_Kph,
                        Drive_Type,
                        Transmission_Type,
                        Seats,
                        Doors,
                        Weight_Kg,
                        Sold_In_USA,
                        Load_Capacity_Tons,
                        Load_Capacity_Pound,
                        HP,
                        LT_CubicCentimeter,
                        Version_Status,
                        Valor_Referencia_Dgii,
                        Create_Date,
                        Modi_Date,
                        Create_UsrId,
                        Modi_UsrId,
                        Hostname};
                if ((_parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id != null)) {
                    columnValuesArray[3] = _parentST_VEHICLE_TYPERowByFK_Global_ST_VEHICLE_VERSION_Global_ST_VEHICLE_TYPE_Vehicle_Type_Id[0];
                }
                rowST_VEHICLE_VERSIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowST_VEHICLE_VERSIONRow);
                return rowST_VEHICLE_VERSIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow FindByMake_IdModel_IdVersion_Id(int Make_Id, int Model_Id, int Version_Id) {
                return ((ST_VEHICLE_VERSIONRow)(this.Rows.Find(new object[] {
                            Make_Id,
                            Model_Id,
                            Version_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ST_VEHICLE_VERSIONDataTable cln = ((ST_VEHICLE_VERSIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ST_VEHICLE_VERSIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMake_Id = base.Columns["Make_Id"];
                this.columnModel_Id = base.Columns["Model_Id"];
                this.columnVersion_Id = base.Columns["Version_Id"];
                this.columnVehicle_Type_Id = base.Columns["Vehicle_Type_Id"];
                this.columnVersion_Desc = base.Columns["Version_Desc"];
                this.columnModel_Year = base.Columns["Model_Year"];
                this.columnBody_Style = base.Columns["Body_Style"];
                this.columnCylinder = base.Columns["Cylinder"];
                this.columnEngine_Type = base.Columns["Engine_Type"];
                this.columnEngine_RPM = base.Columns["Engine_RPM"];
                this.columnFuel_Int = base.Columns["Fuel_Int"];
                this.columnCo2_Emissions = base.Columns["Co2_Emissions"];
                this.columnTop_Speed_Kph = base.Columns["Top_Speed_Kph"];
                this.columnDrive_Type = base.Columns["Drive_Type"];
                this.columnTransmission_Type = base.Columns["Transmission_Type"];
                this.columnSeats = base.Columns["Seats"];
                this.columnDoors = base.Columns["Doors"];
                this.columnWeight_Kg = base.Columns["Weight_Kg"];
                this.columnSold_In_USA = base.Columns["Sold_In_USA"];
                this.columnLoad_Capacity_Tons = base.Columns["Load_Capacity_Tons"];
                this.columnLoad_Capacity_Pound = base.Columns["Load_Capacity_Pound"];
                this.columnHP = base.Columns["HP"];
                this.columnLT_CubicCentimeter = base.Columns["LT_CubicCentimeter"];
                this.columnVersion_Status = base.Columns["Version_Status"];
                this.columnValor_Referencia_Dgii = base.Columns["Valor_Referencia_Dgii"];
                this.columnCreate_Date = base.Columns["Create_Date"];
                this.columnModi_Date = base.Columns["Modi_Date"];
                this.columnCreate_UsrId = base.Columns["Create_UsrId"];
                this.columnModi_UsrId = base.Columns["Modi_UsrId"];
                this.columnHostname = base.Columns["Hostname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMake_Id = new global::System.Data.DataColumn("Make_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMake_Id);
                this.columnModel_Id = new global::System.Data.DataColumn("Model_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Id);
                this.columnVersion_Id = new global::System.Data.DataColumn("Version_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion_Id);
                this.columnVehicle_Type_Id = new global::System.Data.DataColumn("Vehicle_Type_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_Type_Id);
                this.columnVersion_Desc = new global::System.Data.DataColumn("Version_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion_Desc);
                this.columnModel_Year = new global::System.Data.DataColumn("Model_Year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel_Year);
                this.columnBody_Style = new global::System.Data.DataColumn("Body_Style", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBody_Style);
                this.columnCylinder = new global::System.Data.DataColumn("Cylinder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCylinder);
                this.columnEngine_Type = new global::System.Data.DataColumn("Engine_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngine_Type);
                this.columnEngine_RPM = new global::System.Data.DataColumn("Engine_RPM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngine_RPM);
                this.columnFuel_Int = new global::System.Data.DataColumn("Fuel_Int", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuel_Int);
                this.columnCo2_Emissions = new global::System.Data.DataColumn("Co2_Emissions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCo2_Emissions);
                this.columnTop_Speed_Kph = new global::System.Data.DataColumn("Top_Speed_Kph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTop_Speed_Kph);
                this.columnDrive_Type = new global::System.Data.DataColumn("Drive_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrive_Type);
                this.columnTransmission_Type = new global::System.Data.DataColumn("Transmission_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransmission_Type);
                this.columnSeats = new global::System.Data.DataColumn("Seats", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeats);
                this.columnDoors = new global::System.Data.DataColumn("Doors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoors);
                this.columnWeight_Kg = new global::System.Data.DataColumn("Weight_Kg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_Kg);
                this.columnSold_In_USA = new global::System.Data.DataColumn("Sold_In_USA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSold_In_USA);
                this.columnLoad_Capacity_Tons = new global::System.Data.DataColumn("Load_Capacity_Tons", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoad_Capacity_Tons);
                this.columnLoad_Capacity_Pound = new global::System.Data.DataColumn("Load_Capacity_Pound", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoad_Capacity_Pound);
                this.columnHP = new global::System.Data.DataColumn("HP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP);
                this.columnLT_CubicCentimeter = new global::System.Data.DataColumn("LT_CubicCentimeter", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLT_CubicCentimeter);
                this.columnVersion_Status = new global::System.Data.DataColumn("Version_Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion_Status);
                this.columnValor_Referencia_Dgii = new global::System.Data.DataColumn("Valor_Referencia_Dgii", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValor_Referencia_Dgii);
                this.columnCreate_Date = new global::System.Data.DataColumn("Create_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_Date);
                this.columnModi_Date = new global::System.Data.DataColumn("Modi_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_Date);
                this.columnCreate_UsrId = new global::System.Data.DataColumn("Create_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreate_UsrId);
                this.columnModi_UsrId = new global::System.Data.DataColumn("Modi_UsrId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModi_UsrId);
                this.columnHostname = new global::System.Data.DataColumn("Hostname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMake_Id,
                                this.columnModel_Id,
                                this.columnVersion_Id}, true));
                this.columnMake_Id.AllowDBNull = false;
                this.columnModel_Id.AllowDBNull = false;
                this.columnVersion_Id.AllowDBNull = false;
                this.columnVehicle_Type_Id.AllowDBNull = false;
                this.columnVersion_Desc.AllowDBNull = false;
                this.columnVersion_Desc.MaxLength = 150;
                this.columnBody_Style.MaxLength = 100;
                this.columnCylinder.AllowDBNull = false;
                this.columnEngine_Type.MaxLength = 100;
                this.columnEngine_RPM.MaxLength = 50;
                this.columnFuel_Int.AllowDBNull = false;
                this.columnCo2_Emissions.MaxLength = 100;
                this.columnTop_Speed_Kph.MaxLength = 100;
                this.columnDrive_Type.MaxLength = 100;
                this.columnTransmission_Type.MaxLength = 100;
                this.columnSeats.AllowDBNull = false;
                this.columnDoors.MaxLength = 100;
                this.columnVersion_Status.AllowDBNull = false;
                this.columnCreate_Date.AllowDBNull = false;
                this.columnCreate_UsrId.AllowDBNull = false;
                this.columnHostname.AllowDBNull = false;
                this.columnHostname.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow NewST_VEHICLE_VERSIONRow() {
                return ((ST_VEHICLE_VERSIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ST_VEHICLE_VERSIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ST_VEHICLE_VERSIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ST_VEHICLE_VERSIONRowChanged != null)) {
                    this.ST_VEHICLE_VERSIONRowChanged(this, new ST_VEHICLE_VERSIONRowChangeEvent(((ST_VEHICLE_VERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ST_VEHICLE_VERSIONRowChanging != null)) {
                    this.ST_VEHICLE_VERSIONRowChanging(this, new ST_VEHICLE_VERSIONRowChangeEvent(((ST_VEHICLE_VERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ST_VEHICLE_VERSIONRowDeleted != null)) {
                    this.ST_VEHICLE_VERSIONRowDeleted(this, new ST_VEHICLE_VERSIONRowChangeEvent(((ST_VEHICLE_VERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ST_VEHICLE_VERSIONRowDeleting != null)) {
                    this.ST_VEHICLE_VERSIONRowDeleting(this, new ST_VEHICLE_VERSIONRowChangeEvent(((ST_VEHICLE_VERSIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveST_VEHICLE_VERSIONRow(ST_VEHICLE_VERSIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ST_VEHICLE_VERSIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TERM_TYPESDataTable : global::System.Data.TypedTableBase<TERM_TYPESRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnTimesPanInMonths;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESDataTable() {
                this.TableName = "TERM_TYPES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TERM_TYPESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TERM_TYPESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimesPanInMonthsColumn {
                get {
                    return this.columnTimesPanInMonths;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESRow this[int index] {
                get {
                    return ((TERM_TYPESRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TERM_TYPESRowChangeEventHandler TERM_TYPESRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TERM_TYPESRowChangeEventHandler TERM_TYPESRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TERM_TYPESRowChangeEventHandler TERM_TYPESRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TERM_TYPESRowChangeEventHandler TERM_TYPESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTERM_TYPESRow(TERM_TYPESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESRow AddTERM_TYPESRow(string Name, int TimesPanInMonths) {
                TERM_TYPESRow rowTERM_TYPESRow = ((TERM_TYPESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        TimesPanInMonths};
                rowTERM_TYPESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTERM_TYPESRow);
                return rowTERM_TYPESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESRow FindById(int Id) {
                return ((TERM_TYPESRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TERM_TYPESDataTable cln = ((TERM_TYPESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TERM_TYPESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTimesPanInMonths = base.Columns["TimesPanInMonths"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTimesPanInMonths = new global::System.Data.DataColumn("TimesPanInMonths", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimesPanInMonths);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESRow NewTERM_TYPESRow() {
                return ((TERM_TYPESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TERM_TYPESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TERM_TYPESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TERM_TYPESRowChanged != null)) {
                    this.TERM_TYPESRowChanged(this, new TERM_TYPESRowChangeEvent(((TERM_TYPESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TERM_TYPESRowChanging != null)) {
                    this.TERM_TYPESRowChanging(this, new TERM_TYPESRowChangeEvent(((TERM_TYPESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TERM_TYPESRowDeleted != null)) {
                    this.TERM_TYPESRowDeleted(this, new TERM_TYPESRowChangeEvent(((TERM_TYPESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TERM_TYPESRowDeleting != null)) {
                    this.TERM_TYPESRowDeleting(this, new TERM_TYPESRowChangeEvent(((TERM_TYPESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTERM_TYPESRow(TERM_TYPESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TERM_TYPESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VEHICLE_PRODUCTDataTable : global::System.Data.TypedTableBase<VEHICLE_PRODUCTRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnMakeId;
            
            private global::System.Data.DataColumn columnModelId;
            
            private global::System.Data.DataColumn columnVersionId;
            
            private global::System.Data.DataColumn columnQuotationId;
            
            private global::System.Data.DataColumn columnDriverId;
            
            private global::System.Data.DataColumn columnUsageId;
            
            private global::System.Data.DataColumn columnStoredId;
            
            private global::System.Data.DataColumn columnChassis;
            
            private global::System.Data.DataColumn columnPlate;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnVehiclePrice;
            
            private global::System.Data.DataColumn columnEnsuredAmount;
            
            private global::System.Data.DataColumn columnPercentageToEnsure;
            
            private global::System.Data.DataColumn columnOthersPropertyLimits;
            
            private global::System.Data.DataColumn columnOnePersonDeathLimits;
            
            private global::System.Data.DataColumn columnAnotherPersonDeathLimits;
            
            private global::System.Data.DataColumn columnPassengerDeathLimits;
            
            private global::System.Data.DataColumn columnAnotherPassengerDeathLimits;
            
            private global::System.Data.DataColumn columnBailLimits;
            
            private global::System.Data.DataColumn columnDriverRiskLimits;
            
            private global::System.Data.DataColumn columnCollisionRolloverLimits;
            
            private global::System.Data.DataColumn columnFireTheftLimits;
            
            private global::System.Data.DataColumn columnComprehensiveRiskLimits;
            
            private global::System.Data.DataColumn columnGlassBreakageLimits;
            
            private global::System.Data.DataColumn columnSpecialEquipmentLimits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTDataTable() {
                this.TableName = "VEHICLE_PRODUCT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VEHICLE_PRODUCTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VEHICLE_PRODUCTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MakeIdColumn {
                get {
                    return this.columnMakeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModelIdColumn {
                get {
                    return this.columnModelId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionIdColumn {
                get {
                    return this.columnVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuotationIdColumn {
                get {
                    return this.columnQuotationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DriverIdColumn {
                get {
                    return this.columnDriverId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UsageIdColumn {
                get {
                    return this.columnUsageId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoredIdColumn {
                get {
                    return this.columnStoredId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChassisColumn {
                get {
                    return this.columnChassis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlateColumn {
                get {
                    return this.columnPlate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VehiclePriceColumn {
                get {
                    return this.columnVehiclePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnsuredAmountColumn {
                get {
                    return this.columnEnsuredAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PercentageToEnsureColumn {
                get {
                    return this.columnPercentageToEnsure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OthersPropertyLimitsColumn {
                get {
                    return this.columnOthersPropertyLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OnePersonDeathLimitsColumn {
                get {
                    return this.columnOnePersonDeathLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnotherPersonDeathLimitsColumn {
                get {
                    return this.columnAnotherPersonDeathLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PassengerDeathLimitsColumn {
                get {
                    return this.columnPassengerDeathLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnotherPassengerDeathLimitsColumn {
                get {
                    return this.columnAnotherPassengerDeathLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BailLimitsColumn {
                get {
                    return this.columnBailLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DriverRiskLimitsColumn {
                get {
                    return this.columnDriverRiskLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CollisionRolloverLimitsColumn {
                get {
                    return this.columnCollisionRolloverLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FireTheftLimitsColumn {
                get {
                    return this.columnFireTheftLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComprehensiveRiskLimitsColumn {
                get {
                    return this.columnComprehensiveRiskLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GlassBreakageLimitsColumn {
                get {
                    return this.columnGlassBreakageLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialEquipmentLimitsColumn {
                get {
                    return this.columnSpecialEquipmentLimits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow this[int index] {
                get {
                    return ((VEHICLE_PRODUCTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VEHICLE_PRODUCTRowChangeEventHandler VEHICLE_PRODUCTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VEHICLE_PRODUCTRowChangeEventHandler VEHICLE_PRODUCTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VEHICLE_PRODUCTRowChangeEventHandler VEHICLE_PRODUCTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VEHICLE_PRODUCTRowChangeEventHandler VEHICLE_PRODUCTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVEHICLE_PRODUCTRow(VEHICLE_PRODUCTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow AddVEHICLE_PRODUCTRow(
                        int MakeId, 
                        int ModelId, 
                        int VersionId, 
                        QUOTATIONRow _parentQUOTATIONRowByFK_POS_VEHICLE_INFO_POS_QUOTATION_QuotationId, 
                        DRIVERSRow _parentDRIVERSRowByFK_POS_VEHICLE_INFO_POS_DRIVERS_VehicleInfoId, 
                        ST_VEHICLE_USAGERow _parentST_VEHICLE_USAGERowByFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_USAGE_UsageId, 
                        ST_VEHICLE_STOREDRow _parentST_VEHICLE_STOREDRowByFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_STORED_StoredId, 
                        string Chassis, 
                        string Plate, 
                        string Color, 
                        decimal VehiclePrice, 
                        decimal EnsuredAmount, 
                        decimal PercentageToEnsure, 
                        string OthersPropertyLimits, 
                        string OnePersonDeathLimits, 
                        string AnotherPersonDeathLimits, 
                        string PassengerDeathLimits, 
                        string AnotherPassengerDeathLimits, 
                        string BailLimits, 
                        string DriverRiskLimits, 
                        string CollisionRolloverLimits, 
                        string FireTheftLimits, 
                        string ComprehensiveRiskLimits, 
                        string GlassBreakageLimits, 
                        string SpecialEquipmentLimits) {
                VEHICLE_PRODUCTRow rowVEHICLE_PRODUCTRow = ((VEHICLE_PRODUCTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MakeId,
                        ModelId,
                        VersionId,
                        null,
                        null,
                        null,
                        null,
                        Chassis,
                        Plate,
                        Color,
                        VehiclePrice,
                        EnsuredAmount,
                        PercentageToEnsure,
                        OthersPropertyLimits,
                        OnePersonDeathLimits,
                        AnotherPersonDeathLimits,
                        PassengerDeathLimits,
                        AnotherPassengerDeathLimits,
                        BailLimits,
                        DriverRiskLimits,
                        CollisionRolloverLimits,
                        FireTheftLimits,
                        ComprehensiveRiskLimits,
                        GlassBreakageLimits,
                        SpecialEquipmentLimits};
                if ((_parentQUOTATIONRowByFK_POS_VEHICLE_INFO_POS_QUOTATION_QuotationId != null)) {
                    columnValuesArray[4] = _parentQUOTATIONRowByFK_POS_VEHICLE_INFO_POS_QUOTATION_QuotationId[0];
                }
                if ((_parentDRIVERSRowByFK_POS_VEHICLE_INFO_POS_DRIVERS_VehicleInfoId != null)) {
                    columnValuesArray[5] = _parentDRIVERSRowByFK_POS_VEHICLE_INFO_POS_DRIVERS_VehicleInfoId[0];
                }
                if ((_parentST_VEHICLE_USAGERowByFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_USAGE_UsageId != null)) {
                    columnValuesArray[6] = _parentST_VEHICLE_USAGERowByFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_USAGE_UsageId[0];
                }
                if ((_parentST_VEHICLE_STOREDRowByFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_STORED_StoredId != null)) {
                    columnValuesArray[7] = _parentST_VEHICLE_STOREDRowByFK_POS_VEHICLE_INFO_Global_ST_VEHICLE_STORED_StoredId[0];
                }
                rowVEHICLE_PRODUCTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVEHICLE_PRODUCTRow);
                return rowVEHICLE_PRODUCTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow FindById(int Id) {
                return ((VEHICLE_PRODUCTRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VEHICLE_PRODUCTDataTable cln = ((VEHICLE_PRODUCTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VEHICLE_PRODUCTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnMakeId = base.Columns["MakeId"];
                this.columnModelId = base.Columns["ModelId"];
                this.columnVersionId = base.Columns["VersionId"];
                this.columnQuotationId = base.Columns["QuotationId"];
                this.columnDriverId = base.Columns["DriverId"];
                this.columnUsageId = base.Columns["UsageId"];
                this.columnStoredId = base.Columns["StoredId"];
                this.columnChassis = base.Columns["Chassis"];
                this.columnPlate = base.Columns["Plate"];
                this.columnColor = base.Columns["Color"];
                this.columnVehiclePrice = base.Columns["VehiclePrice"];
                this.columnEnsuredAmount = base.Columns["EnsuredAmount"];
                this.columnPercentageToEnsure = base.Columns["PercentageToEnsure"];
                this.columnOthersPropertyLimits = base.Columns["OthersPropertyLimits"];
                this.columnOnePersonDeathLimits = base.Columns["OnePersonDeathLimits"];
                this.columnAnotherPersonDeathLimits = base.Columns["AnotherPersonDeathLimits"];
                this.columnPassengerDeathLimits = base.Columns["PassengerDeathLimits"];
                this.columnAnotherPassengerDeathLimits = base.Columns["AnotherPassengerDeathLimits"];
                this.columnBailLimits = base.Columns["BailLimits"];
                this.columnDriverRiskLimits = base.Columns["DriverRiskLimits"];
                this.columnCollisionRolloverLimits = base.Columns["CollisionRolloverLimits"];
                this.columnFireTheftLimits = base.Columns["FireTheftLimits"];
                this.columnComprehensiveRiskLimits = base.Columns["ComprehensiveRiskLimits"];
                this.columnGlassBreakageLimits = base.Columns["GlassBreakageLimits"];
                this.columnSpecialEquipmentLimits = base.Columns["SpecialEquipmentLimits"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnMakeId = new global::System.Data.DataColumn("MakeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeId);
                this.columnModelId = new global::System.Data.DataColumn("ModelId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelId);
                this.columnVersionId = new global::System.Data.DataColumn("VersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionId);
                this.columnQuotationId = new global::System.Data.DataColumn("QuotationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotationId);
                this.columnDriverId = new global::System.Data.DataColumn("DriverId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverId);
                this.columnUsageId = new global::System.Data.DataColumn("UsageId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsageId);
                this.columnStoredId = new global::System.Data.DataColumn("StoredId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoredId);
                this.columnChassis = new global::System.Data.DataColumn("Chassis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChassis);
                this.columnPlate = new global::System.Data.DataColumn("Plate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlate);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnVehiclePrice = new global::System.Data.DataColumn("VehiclePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehiclePrice);
                this.columnEnsuredAmount = new global::System.Data.DataColumn("EnsuredAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnsuredAmount);
                this.columnPercentageToEnsure = new global::System.Data.DataColumn("PercentageToEnsure", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentageToEnsure);
                this.columnOthersPropertyLimits = new global::System.Data.DataColumn("OthersPropertyLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOthersPropertyLimits);
                this.columnOnePersonDeathLimits = new global::System.Data.DataColumn("OnePersonDeathLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnePersonDeathLimits);
                this.columnAnotherPersonDeathLimits = new global::System.Data.DataColumn("AnotherPersonDeathLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnotherPersonDeathLimits);
                this.columnPassengerDeathLimits = new global::System.Data.DataColumn("PassengerDeathLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassengerDeathLimits);
                this.columnAnotherPassengerDeathLimits = new global::System.Data.DataColumn("AnotherPassengerDeathLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnotherPassengerDeathLimits);
                this.columnBailLimits = new global::System.Data.DataColumn("BailLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBailLimits);
                this.columnDriverRiskLimits = new global::System.Data.DataColumn("DriverRiskLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverRiskLimits);
                this.columnCollisionRolloverLimits = new global::System.Data.DataColumn("CollisionRolloverLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollisionRolloverLimits);
                this.columnFireTheftLimits = new global::System.Data.DataColumn("FireTheftLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFireTheftLimits);
                this.columnComprehensiveRiskLimits = new global::System.Data.DataColumn("ComprehensiveRiskLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComprehensiveRiskLimits);
                this.columnGlassBreakageLimits = new global::System.Data.DataColumn("GlassBreakageLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlassBreakageLimits);
                this.columnSpecialEquipmentLimits = new global::System.Data.DataColumn("SpecialEquipmentLimits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialEquipmentLimits);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnMakeId.AllowDBNull = false;
                this.columnModelId.AllowDBNull = false;
                this.columnVersionId.AllowDBNull = false;
                this.columnQuotationId.AllowDBNull = false;
                this.columnDriverId.AllowDBNull = false;
                this.columnUsageId.AllowDBNull = false;
                this.columnStoredId.AllowDBNull = false;
                this.columnChassis.MaxLength = 50;
                this.columnPlate.MaxLength = 50;
                this.columnColor.MaxLength = 50;
                this.columnVehiclePrice.AllowDBNull = false;
                this.columnEnsuredAmount.AllowDBNull = false;
                this.columnOthersPropertyLimits.MaxLength = 2147483647;
                this.columnOnePersonDeathLimits.MaxLength = 2147483647;
                this.columnAnotherPersonDeathLimits.MaxLength = 2147483647;
                this.columnPassengerDeathLimits.MaxLength = 2147483647;
                this.columnAnotherPassengerDeathLimits.MaxLength = 2147483647;
                this.columnBailLimits.MaxLength = 2147483647;
                this.columnDriverRiskLimits.MaxLength = 2147483647;
                this.columnCollisionRolloverLimits.MaxLength = 2147483647;
                this.columnFireTheftLimits.MaxLength = 2147483647;
                this.columnComprehensiveRiskLimits.MaxLength = 2147483647;
                this.columnGlassBreakageLimits.MaxLength = 2147483647;
                this.columnSpecialEquipmentLimits.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow NewVEHICLE_PRODUCTRow() {
                return ((VEHICLE_PRODUCTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VEHICLE_PRODUCTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VEHICLE_PRODUCTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VEHICLE_PRODUCTRowChanged != null)) {
                    this.VEHICLE_PRODUCTRowChanged(this, new VEHICLE_PRODUCTRowChangeEvent(((VEHICLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VEHICLE_PRODUCTRowChanging != null)) {
                    this.VEHICLE_PRODUCTRowChanging(this, new VEHICLE_PRODUCTRowChangeEvent(((VEHICLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VEHICLE_PRODUCTRowDeleted != null)) {
                    this.VEHICLE_PRODUCTRowDeleted(this, new VEHICLE_PRODUCTRowChangeEvent(((VEHICLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VEHICLE_PRODUCTRowDeleting != null)) {
                    this.VEHICLE_PRODUCTRowDeleting(this, new VEHICLE_PRODUCTRowChangeEvent(((VEHICLE_PRODUCTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVEHICLE_PRODUCTRow(VEHICLE_PRODUCTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS_SiteDS ds = new POS_SiteDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VEHICLE_PRODUCTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class @__MigrationHistoryRow : global::System.Data.DataRow {
            
            private @__MigrationHistoryDataTable table__MigrationHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal @__MigrationHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table__MigrationHistory = ((@__MigrationHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MigrationId {
                get {
                    return ((string)(this[this.table__MigrationHistory.MigrationIdColumn]));
                }
                set {
                    this[this.table__MigrationHistory.MigrationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContextKey {
                get {
                    return ((string)(this[this.table__MigrationHistory.ContextKeyColumn]));
                }
                set {
                    this[this.table__MigrationHistory.ContextKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Model {
                get {
                    return ((byte[])(this[this.table__MigrationHistory.ModelColumn]));
                }
                set {
                    this[this.table__MigrationHistory.ModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductVersion {
                get {
                    return ((string)(this[this.table__MigrationHistory.ProductVersionColumn]));
                }
                set {
                    this[this.table__MigrationHistory.ProductVersionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ADDITIONAL_PRODUCTSRow : global::System.Data.DataRow {
            
            private ADDITIONAL_PRODUCTSDataTable tableADDITIONAL_PRODUCTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ADDITIONAL_PRODUCTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableADDITIONAL_PRODUCTS = ((ADDITIONAL_PRODUCTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableADDITIONAL_PRODUCTS.IdColumn]));
                }
                set {
                    this[this.tableADDITIONAL_PRODUCTS.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableADDITIONAL_PRODUCTS.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'ADDITIONAL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADDITIONAL_PRODUCTS.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableADDITIONAL_PRODUCTS.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ADDITIONAL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADDITIONAL_PRODUCTS.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelected {
                get {
                    return ((bool)(this[this.tableADDITIONAL_PRODUCTS.IsSelectedColumn]));
                }
                set {
                    this[this.tableADDITIONAL_PRODUCTS.IsSelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Prime {
                get {
                    try {
                        return ((decimal)(this[this.tableADDITIONAL_PRODUCTS.PrimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prime\' in table \'ADDITIONAL_PRODUCTS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableADDITIONAL_PRODUCTS.PrimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductLimits_Id {
                get {
                    return ((int)(this[this.tableADDITIONAL_PRODUCTS.ProductLimits_IdColumn]));
                }
                set {
                    this[this.tableADDITIONAL_PRODUCTS.ProductLimits_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRow PRODUCT_LIMITSRow {
                get {
                    return ((PRODUCT_LIMITSRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.ADDITIONAL_PRODUCTS_POS.PRODUCT_LIMITS_ProductLimits_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.ADDITIONAL_PRODUCTS_POS.PRODUCT_LIMITS_ProductLimits_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableADDITIONAL_PRODUCTS.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableADDITIONAL_PRODUCTS.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableADDITIONAL_PRODUCTS.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableADDITIONAL_PRODUCTS.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrimeNull() {
                return this.IsNull(this.tableADDITIONAL_PRODUCTS.PrimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrimeNull() {
                this[this.tableADDITIONAL_PRODUCTS.PrimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DRIVERSRow : global::System.Data.DataRow {
            
            private DRIVERSDataTable tableDRIVERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DRIVERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDRIVERS = ((DRIVERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableDRIVERS.IdColumn]));
                }
                set {
                    this[this.tableDRIVERS.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Surname {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.SurnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Surname\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.SurnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.PhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNumber\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateOfBirth {
                get {
                    return ((global::System.DateTime)(this[this.tableDRIVERS.DateOfBirthColumn]));
                }
                set {
                    this[this.tableDRIVERS.DateOfBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrincipal {
                get {
                    return ((bool)(this[this.tableDRIVERS.IsPrincipalColumn]));
                }
                set {
                    this[this.tableDRIVERS.IsPrincipalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WorkPhone {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.WorkPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkPhone\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.WorkPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string License {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.LicenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'License\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.LicenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int YearsDriving {
                get {
                    try {
                        return ((int)(this[this.tableDRIVERS.YearsDrivingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearsDriving\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.YearsDrivingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccidentsLast3Years {
                get {
                    try {
                        return ((int)(this[this.tableDRIVERS.AccidentsLast3YearsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccidentsLast3Years\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.AccidentsLast3YearsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Job {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.JobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Job\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.JobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.tableDRIVERS.CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int YearsInCompany {
                get {
                    try {
                        return ((int)(this[this.tableDRIVERS.YearsInCompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearsInCompany\' in table \'DRIVERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.YearsInCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuotationId {
                get {
                    return ((int)(this[this.tableDRIVERS.QuotationIdColumn]));
                }
                set {
                    this[this.tableDRIVERS.QuotationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int City_Country_Id {
                get {
                    return ((int)(this[this.tableDRIVERS.City_Country_IdColumn]));
                }
                set {
                    this[this.tableDRIVERS.City_Country_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int City_Domesticreg_Id {
                get {
                    return ((int)(this[this.tableDRIVERS.City_Domesticreg_IdColumn]));
                }
                set {
                    this[this.tableDRIVERS.City_Domesticreg_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int City_State_Prov_Id {
                get {
                    return ((int)(this[this.tableDRIVERS.City_State_Prov_IdColumn]));
                }
                set {
                    this[this.tableDRIVERS.City_State_Prov_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int City_City_Id {
                get {
                    return ((int)(this[this.tableDRIVERS.City_City_IdColumn]));
                }
                set {
                    this[this.tableDRIVERS.City_City_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Nationality_Global_Country_Id {
                get {
                    try {
                        return ((int)(this[this.tableDRIVERS.Nationality_Global_Country_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nationality_Global_Country_Id\' in table \'DRIVERS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDRIVERS.Nationality_Global_Country_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRow ST_GLOBAL_CITYRowParent {
                get {
                    return ((ST_GLOBAL_CITYRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_Sta" +
                            "te_Prov_Id_City_City_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_Sta" +
                            "te_Prov_Id_City_City_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRow ST_GLOBAL_COUNTRYRow {
                get {
                    return ((ST_GLOBAL_COUNTRYRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow QUOTATIONRow {
                get {
                    return ((QUOTATIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.DRIVERS_POS.QUOTATION_QuotationId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.DRIVERS_POS.QUOTATION_QuotationId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableDRIVERS.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tableDRIVERS.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurnameNull() {
                return this.IsNull(this.tableDRIVERS.SurnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurnameNull() {
                this[this.tableDRIVERS.SurnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tableDRIVERS.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmailNull() {
                this[this.tableDRIVERS.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhoneNumberNull() {
                return this.IsNull(this.tableDRIVERS.PhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhoneNumberNull() {
                this[this.tableDRIVERS.PhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSexNull() {
                return this.IsNull(this.tableDRIVERS.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSexNull() {
                this[this.tableDRIVERS.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableDRIVERS.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableDRIVERS.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNull() {
                return this.IsNull(this.tableDRIVERS.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNull() {
                this[this.tableDRIVERS.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkPhoneNull() {
                return this.IsNull(this.tableDRIVERS.WorkPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkPhoneNull() {
                this[this.tableDRIVERS.WorkPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicenseNull() {
                return this.IsNull(this.tableDRIVERS.LicenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicenseNull() {
                this[this.tableDRIVERS.LicenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearsDrivingNull() {
                return this.IsNull(this.tableDRIVERS.YearsDrivingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearsDrivingNull() {
                this[this.tableDRIVERS.YearsDrivingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccidentsLast3YearsNull() {
                return this.IsNull(this.tableDRIVERS.AccidentsLast3YearsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccidentsLast3YearsNull() {
                this[this.tableDRIVERS.AccidentsLast3YearsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableDRIVERS.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaritalStatusNull() {
                this[this.tableDRIVERS.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobNull() {
                return this.IsNull(this.tableDRIVERS.JobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobNull() {
                this[this.tableDRIVERS.JobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyNull() {
                return this.IsNull(this.tableDRIVERS.CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyNull() {
                this[this.tableDRIVERS.CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearsInCompanyNull() {
                return this.IsNull(this.tableDRIVERS.YearsInCompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearsInCompanyNull() {
                this[this.tableDRIVERS.YearsInCompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNationality_Global_Country_IdNull() {
                return this.IsNull(this.tableDRIVERS.Nationality_Global_Country_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNationality_Global_Country_IdNull() {
                this[this.tableDRIVERS.Nationality_Global_Country_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow[] GetVEHICLE_PRODUCTRows() {
                if ((this.Table.ChildRelations["FK_POS.VEHICLE_INFO_POS.DRIVERS_VehicleInfoId"] == null)) {
                    return new VEHICLE_PRODUCTRow[0];
                }
                else {
                    return ((VEHICLE_PRODUCTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.VEHICLE_INFO_POS.DRIVERS_VehicleInfoId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PRODUCT_LIMITSRow : global::System.Data.DataRow {
            
            private PRODUCT_LIMITSDataTable tablePRODUCT_LIMITS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PRODUCT_LIMITSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRODUCT_LIMITS = ((PRODUCT_LIMITSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tablePRODUCT_LIMITS.IdColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelected {
                get {
                    return ((bool)(this[this.tablePRODUCT_LIMITS.IsSelectedColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.IsSelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MinDeductible {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.MinDeductibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinDeductible\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.MinDeductibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OthersProperty {
                get {
                    return ((decimal)(this[this.tablePRODUCT_LIMITS.OthersPropertyColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.OthersPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OnePersonDeath {
                get {
                    return ((decimal)(this[this.tablePRODUCT_LIMITS.OnePersonDeathColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.OnePersonDeathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AnotherPersonDeath {
                get {
                    return ((decimal)(this[this.tablePRODUCT_LIMITS.AnotherPersonDeathColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.AnotherPersonDeathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PassengerDeath {
                get {
                    return ((decimal)(this[this.tablePRODUCT_LIMITS.PassengerDeathColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.PassengerDeathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AnotherPassengerDeath {
                get {
                    return ((decimal)(this[this.tablePRODUCT_LIMITS.AnotherPassengerDeathColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.AnotherPassengerDeathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Bail {
                get {
                    return ((decimal)(this[this.tablePRODUCT_LIMITS.BailColumn]));
                }
                set {
                    this[this.tablePRODUCT_LIMITS.BailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SdPrime {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.SdPrimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SdPrime\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.SdPrimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DriverRisk {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.DriverRiskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverRisk\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.DriverRiskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CollisionRollover {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.CollisionRolloverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CollisionRollover\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.CollisionRolloverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FireTheft {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.FireTheftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FireTheft\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.FireTheftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ComprehensiveRisk {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.ComprehensiveRiskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComprehensiveRisk\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.ComprehensiveRiskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GlassBreakage {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.GlassBreakageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlassBreakage\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.GlassBreakageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SpecialEquipment {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.SpecialEquipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialEquipment\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.SpecialEquipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TpPrime {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCT_LIMITS.TpPrimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TpPrime\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.TpPrimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VehicleProduct_Id {
                get {
                    try {
                        return ((int)(this[this.tablePRODUCT_LIMITS.VehicleProduct_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleProduct_Id\' in table \'PRODUCT_LIMITS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePRODUCT_LIMITS.VehicleProduct_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow VEHICLE_PRODUCTRow {
                get {
                    return ((VEHICLE_PRODUCTRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.PRODUCT_LIMITS_POS.VEHICLE_PRODUCT_VehicleProduct_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.PRODUCT_LIMITS_POS.VEHICLE_PRODUCT_VehicleProduct_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinDeductibleNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.MinDeductibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinDeductibleNull() {
                this[this.tablePRODUCT_LIMITS.MinDeductibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSdPrimeNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.SdPrimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSdPrimeNull() {
                this[this.tablePRODUCT_LIMITS.SdPrimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDriverRiskNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.DriverRiskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDriverRiskNull() {
                this[this.tablePRODUCT_LIMITS.DriverRiskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCollisionRolloverNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.CollisionRolloverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCollisionRolloverNull() {
                this[this.tablePRODUCT_LIMITS.CollisionRolloverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFireTheftNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.FireTheftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFireTheftNull() {
                this[this.tablePRODUCT_LIMITS.FireTheftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComprehensiveRiskNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.ComprehensiveRiskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComprehensiveRiskNull() {
                this[this.tablePRODUCT_LIMITS.ComprehensiveRiskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlassBreakageNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.GlassBreakageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlassBreakageNull() {
                this[this.tablePRODUCT_LIMITS.GlassBreakageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialEquipmentNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.SpecialEquipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialEquipmentNull() {
                this[this.tablePRODUCT_LIMITS.SpecialEquipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTpPrimeNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.TpPrimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTpPrimeNull() {
                this[this.tablePRODUCT_LIMITS.TpPrimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVehicleProduct_IdNull() {
                return this.IsNull(this.tablePRODUCT_LIMITS.VehicleProduct_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVehicleProduct_IdNull() {
                this[this.tablePRODUCT_LIMITS.VehicleProduct_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSRow[] GetADDITIONAL_PRODUCTSRows() {
                if ((this.Table.ChildRelations["FK_POS.ADDITIONAL_PRODUCTS_POS.PRODUCT_LIMITS_ProductLimits_Id"] == null)) {
                    return new ADDITIONAL_PRODUCTSRow[0];
                }
                else {
                    return ((ADDITIONAL_PRODUCTSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.ADDITIONAL_PRODUCTS_POS.PRODUCT_LIMITS_ProductLimits_Id"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QUOTATIONRow : global::System.Data.DataRow {
            
            private QUOTATIONDataTable tableQUOTATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QUOTATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUOTATION = ((QUOTATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableQUOTATION.IdColumn]));
                }
                set {
                    this[this.tableQUOTATION.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Status {
                get {
                    return ((byte)(this[this.tableQUOTATION.StatusColumn]));
                }
                set {
                    this[this.tableQUOTATION.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Created {
                get {
                    return ((global::System.DateTime)(this[this.tableQUOTATION.CreatedColumn]));
                }
                set {
                    this[this.tableQUOTATION.CreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastModified {
                get {
                    return ((global::System.DateTime)(this[this.tableQUOTATION.LastModifiedColumn]));
                }
                set {
                    this[this.tableQUOTATION.LastModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductNumber {
                get {
                    try {
                        return ((string)(this[this.tableQUOTATION.ProductNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductNumber\' in table \'QUOTATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUOTATION.ProductNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuotationDailyNumber {
                get {
                    return ((int)(this[this.tableQUOTATION.QuotationDailyNumberColumn]));
                }
                set {
                    this[this.tableQUOTATION.QuotationDailyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PolicyNumber {
                get {
                    try {
                        return ((string)(this[this.tableQUOTATION.PolicyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PolicyNumber\' in table \'QUOTATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUOTATION.PolicyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QuotationNumber {
                get {
                    try {
                        return ((string)(this[this.tableQUOTATION.QuotationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuotationNumber\' in table \'QUOTATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUOTATION.QuotationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQUOTATION.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'QUOTATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUOTATION.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQUOTATION.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'QUOTATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUOTATION.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TermType_Id {
                get {
                    try {
                        return ((int)(this[this.tableQUOTATION.TermType_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TermType_Id\' in table \'QUOTATION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUOTATION.TermType_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESRow TERM_TYPESRow {
                get {
                    return ((TERM_TYPESRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.QUOTATION_POS.TERM_TYPES_TermType_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.QUOTATION_POS.TERM_TYPES_TermType_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductNumberNull() {
                return this.IsNull(this.tableQUOTATION.ProductNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductNumberNull() {
                this[this.tableQUOTATION.ProductNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPolicyNumberNull() {
                return this.IsNull(this.tableQUOTATION.PolicyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPolicyNumberNull() {
                this[this.tableQUOTATION.PolicyNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuotationNumberNull() {
                return this.IsNull(this.tableQUOTATION.QuotationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuotationNumberNull() {
                this[this.tableQUOTATION.QuotationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableQUOTATION.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartDateNull() {
                this[this.tableQUOTATION.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableQUOTATION.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEndDateNull() {
                this[this.tableQUOTATION.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTermType_IdNull() {
                return this.IsNull(this.tableQUOTATION.TermType_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTermType_IdNull() {
                this[this.tableQUOTATION.TermType_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow[] GetDRIVERSRows() {
                if ((this.Table.ChildRelations["FK_POS.DRIVERS_POS.QUOTATION_QuotationId"] == null)) {
                    return new DRIVERSRow[0];
                }
                else {
                    return ((DRIVERSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.DRIVERS_POS.QUOTATION_QuotationId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow[] GetVEHICLE_PRODUCTRows() {
                if ((this.Table.ChildRelations["FK_POS.VEHICLE_INFO_POS.QUOTATION_QuotationId"] == null)) {
                    return new VEHICLE_PRODUCTRow[0];
                }
                else {
                    return ((VEHICLE_PRODUCTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.VEHICLE_INFO_POS.QUOTATION_QuotationId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_CITYRow : global::System.Data.DataRow {
            
            private ST_CITYDataTable tableST_CITY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_CITYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_CITY = ((ST_CITYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Corp_Id {
                get {
                    return ((int)(this[this.tableST_CITY.Corp_IdColumn]));
                }
                set {
                    this[this.tableST_CITY.Corp_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Region_Id {
                get {
                    return ((int)(this[this.tableST_CITY.Region_IdColumn]));
                }
                set {
                    this[this.tableST_CITY.Region_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Country_Id {
                get {
                    return ((int)(this[this.tableST_CITY.Country_IdColumn]));
                }
                set {
                    this[this.tableST_CITY.Country_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Domesticreg_Id {
                get {
                    return ((int)(this[this.tableST_CITY.Domesticreg_IdColumn]));
                }
                set {
                    this[this.tableST_CITY.Domesticreg_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int State_Prov_Id {
                get {
                    return ((int)(this[this.tableST_CITY.State_Prov_IdColumn]));
                }
                set {
                    this[this.tableST_CITY.State_Prov_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int City_Id {
                get {
                    return ((int)(this[this.tableST_CITY.City_IdColumn]));
                }
                set {
                    this[this.tableST_CITY.City_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int City_Mgr_Id {
                get {
                    try {
                        return ((int)(this[this.tableST_CITY.City_Mgr_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City_Mgr_Id\' in table \'ST_CITY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_CITY.City_Mgr_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Directory_Id {
                get {
                    try {
                        return ((int)(this[this.tableST_CITY.Directory_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Directory_Id\' in table \'ST_CITY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_CITY.Directory_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Country_Headquarter {
                get {
                    return ((bool)(this[this.tableST_CITY.Country_HeadquarterColumn]));
                }
                set {
                    this[this.tableST_CITY.Country_HeadquarterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool City_Status {
                get {
                    return ((bool)(this[this.tableST_CITY.City_StatusColumn]));
                }
                set {
                    this[this.tableST_CITY.City_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_CITY.Create_DateColumn]));
                }
                set {
                    this[this.tableST_CITY.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_CITY.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_CITY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_CITY.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_CITY.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_CITY.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_CITY.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_CITY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_CITY.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hostname {
                get {
                    return ((string)(this[this.tableST_CITY.hostnameColumn]));
                }
                set {
                    this[this.tableST_CITY.hostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRow ST_GLOBAL_CITYRowParent {
                get {
                    return ((ST_GLOBAL_CITYRow)(this.GetParentRow(this.Table.ParentRelations["FK_CITY_GLBLCITY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CITY_GLBLCITY"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCity_Mgr_IdNull() {
                return this.IsNull(this.tableST_CITY.City_Mgr_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCity_Mgr_IdNull() {
                this[this.tableST_CITY.City_Mgr_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectory_IdNull() {
                return this.IsNull(this.tableST_CITY.Directory_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectory_IdNull() {
                this[this.tableST_CITY.Directory_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_CITY.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_CITY.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_CITY.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_CITY.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_COUNTRYRow : global::System.Data.DataRow {
            
            private ST_COUNTRYDataTable tableST_COUNTRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_COUNTRYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_COUNTRY = ((ST_COUNTRYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Corp_Id {
                get {
                    return ((int)(this[this.tableST_COUNTRY.Corp_IdColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Corp_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Region_Id {
                get {
                    return ((int)(this[this.tableST_COUNTRY.Region_IdColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Region_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Country_Id {
                get {
                    return ((int)(this[this.tableST_COUNTRY.Country_IdColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Country_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Continent_Id {
                get {
                    return ((int)(this[this.tableST_COUNTRY.Continent_IdColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Continent_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Country_Headquarter {
                get {
                    return ((bool)(this[this.tableST_COUNTRY.Country_HeadquarterColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Country_HeadquarterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Country_Mgr_Id {
                get {
                    try {
                        return ((int)(this[this.tableST_COUNTRY.Country_Mgr_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country_Mgr_Id\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.Country_Mgr_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Directory_Id {
                get {
                    try {
                        return ((int)(this[this.tableST_COUNTRY.Directory_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Directory_Id\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.Directory_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Country_Status {
                get {
                    return ((bool)(this[this.tableST_COUNTRY.Country_StatusColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Country_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GMT_tz {
                get {
                    try {
                        return ((int)(this[this.tableST_COUNTRY.GMT_tzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GMT_tz\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.GMT_tzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DST_tz {
                get {
                    try {
                        return ((bool)(this[this.tableST_COUNTRY.DST_tzColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DST_tz\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.DST_tzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DST_Threshold {
                get {
                    try {
                        return ((int)(this[this.tableST_COUNTRY.DST_ThresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DST_Threshold\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.DST_ThresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DST_Initial_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_COUNTRY.DST_Initial_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DST_Initial_Date\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.DST_Initial_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DST_End_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_COUNTRY.DST_End_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DST_End_Date\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.DST_End_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_COUNTRY.Create_DateColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_COUNTRY.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_COUNTRY.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_COUNTRY.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_COUNTRY.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hostname {
                get {
                    return ((string)(this[this.tableST_COUNTRY.hostnameColumn]));
                }
                set {
                    this[this.tableST_COUNTRY.hostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRow ST_GLOBAL_COUNTRYRow {
                get {
                    return ((ST_GLOBAL_COUNTRYRow)(this.GetParentRow(this.Table.ParentRelations["FK_CNTRY_GLBLCNTRY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CNTRY_GLBLCNTRY"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountry_Mgr_IdNull() {
                return this.IsNull(this.tableST_COUNTRY.Country_Mgr_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountry_Mgr_IdNull() {
                this[this.tableST_COUNTRY.Country_Mgr_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDirectory_IdNull() {
                return this.IsNull(this.tableST_COUNTRY.Directory_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDirectory_IdNull() {
                this[this.tableST_COUNTRY.Directory_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGMT_tzNull() {
                return this.IsNull(this.tableST_COUNTRY.GMT_tzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGMT_tzNull() {
                this[this.tableST_COUNTRY.GMT_tzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDST_tzNull() {
                return this.IsNull(this.tableST_COUNTRY.DST_tzColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDST_tzNull() {
                this[this.tableST_COUNTRY.DST_tzColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDST_ThresholdNull() {
                return this.IsNull(this.tableST_COUNTRY.DST_ThresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDST_ThresholdNull() {
                this[this.tableST_COUNTRY.DST_ThresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDST_Initial_DateNull() {
                return this.IsNull(this.tableST_COUNTRY.DST_Initial_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDST_Initial_DateNull() {
                this[this.tableST_COUNTRY.DST_Initial_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDST_End_DateNull() {
                return this.IsNull(this.tableST_COUNTRY.DST_End_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDST_End_DateNull() {
                this[this.tableST_COUNTRY.DST_End_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_COUNTRY.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_COUNTRY.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_COUNTRY.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_COUNTRY.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_GLOBAL_CITYRow : global::System.Data.DataRow {
            
            private ST_GLOBAL_CITYDataTable tableST_GLOBAL_CITY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_GLOBAL_CITYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_GLOBAL_CITY = ((ST_GLOBAL_CITYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Country_Id {
                get {
                    return ((int)(this[this.tableST_GLOBAL_CITY.Country_IdColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.Country_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Domesticreg_Id {
                get {
                    return ((int)(this[this.tableST_GLOBAL_CITY.Domesticreg_IdColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.Domesticreg_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int State_Prov_Id {
                get {
                    return ((int)(this[this.tableST_GLOBAL_CITY.State_Prov_IdColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.State_Prov_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int City_Id {
                get {
                    return ((int)(this[this.tableST_GLOBAL_CITY.City_IdColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.City_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City_Desc {
                get {
                    return ((string)(this[this.tableST_GLOBAL_CITY.City_DescColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.City_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City_Abbrv_Name {
                get {
                    return ((string)(this[this.tableST_GLOBAL_CITY.City_Abbrv_NameColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.City_Abbrv_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool City_Status {
                get {
                    return ((bool)(this[this.tableST_GLOBAL_CITY.City_StatusColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.City_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_GLOBAL_CITY.Create_DateColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_GLOBAL_CITY.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_GLOBAL_CITY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_GLOBAL_CITY.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_GLOBAL_CITY.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_GLOBAL_CITY.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_GLOBAL_CITY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_GLOBAL_CITY.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hostname {
                get {
                    return ((string)(this[this.tableST_GLOBAL_CITY.hostnameColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_CITY.hostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_GLOBAL_CITY.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_GLOBAL_CITY.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_GLOBAL_CITY.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_GLOBAL_CITY.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow[] GetDRIVERSRows() {
                if ((this.Table.ChildRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_Sta" +
                    "te_Prov_Id_City_City_Id"] == null)) {
                    return new DRIVERSRow[0];
                }
                else {
                    return ((DRIVERSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_CITY_City_Country_Id_City_Domesticreg_Id_City_Sta" +
                            "te_Prov_Id_City_City_Id"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYRow[] GetST_CITYRows() {
                if ((this.Table.ChildRelations["FK_CITY_GLBLCITY"] == null)) {
                    return new ST_CITYRow[0];
                }
                else {
                    return ((ST_CITYRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CITY_GLBLCITY"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_GLOBAL_COUNTRYRow : global::System.Data.DataRow {
            
            private ST_GLOBAL_COUNTRYDataTable tableST_GLOBAL_COUNTRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_GLOBAL_COUNTRYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_GLOBAL_COUNTRY = ((ST_GLOBAL_COUNTRYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Global_Country_Id {
                get {
                    return ((int)(this[this.tableST_GLOBAL_COUNTRY.Global_Country_IdColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Global_Country_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Global_Country_Desc {
                get {
                    return ((string)(this[this.tableST_GLOBAL_COUNTRY.Global_Country_DescColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Global_Country_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Global_Country_Desc_EN {
                get {
                    try {
                        return ((string)(this[this.tableST_GLOBAL_COUNTRY.Global_Country_Desc_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Global_Country_Desc_EN\' in table \'ST_GLOBAL_COUNTRY\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Global_Country_Desc_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Global_Country_Status {
                get {
                    return ((bool)(this[this.tableST_GLOBAL_COUNTRY.Global_Country_StatusColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Global_Country_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Citizenship {
                get {
                    try {
                        return ((string)(this[this.tableST_GLOBAL_COUNTRY.CitizenshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Citizenship\' in table \'ST_GLOBAL_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.CitizenshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_GLOBAL_COUNTRY.Create_DateColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_GLOBAL_COUNTRY.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_GLOBAL_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_GLOBAL_COUNTRY.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_GLOBAL_COUNTRY.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_GLOBAL_COUNTRY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hostname {
                get {
                    return ((string)(this[this.tableST_GLOBAL_COUNTRY.hostnameColumn]));
                }
                set {
                    this[this.tableST_GLOBAL_COUNTRY.hostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlobal_Country_Desc_ENNull() {
                return this.IsNull(this.tableST_GLOBAL_COUNTRY.Global_Country_Desc_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlobal_Country_Desc_ENNull() {
                this[this.tableST_GLOBAL_COUNTRY.Global_Country_Desc_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCitizenshipNull() {
                return this.IsNull(this.tableST_GLOBAL_COUNTRY.CitizenshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCitizenshipNull() {
                this[this.tableST_GLOBAL_COUNTRY.CitizenshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_GLOBAL_COUNTRY.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_GLOBAL_COUNTRY.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_GLOBAL_COUNTRY.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_GLOBAL_COUNTRY.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow[] GetDRIVERSRows() {
                if ((this.Table.ChildRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id"] == null)) {
                    return new DRIVERSRow[0];
                }
                else {
                    return ((DRIVERSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.DRIVERS_Global.ST_GLOBAL_COUNTRY_Nationality_Global_Country_Id"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYRow[] GetST_COUNTRYRows() {
                if ((this.Table.ChildRelations["FK_CNTRY_GLBLCNTRY"] == null)) {
                    return new ST_COUNTRYRow[0];
                }
                else {
                    return ((ST_COUNTRYRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CNTRY_GLBLCNTRY"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_VEHICLE_MAKERow : global::System.Data.DataRow {
            
            private ST_VEHICLE_MAKEDataTable tableST_VEHICLE_MAKE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_MAKERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_VEHICLE_MAKE = ((ST_VEHICLE_MAKEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Make_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_MAKE.Make_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.Make_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Make_Desc {
                get {
                    return ((string)(this[this.tableST_VEHICLE_MAKE.Make_DescColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.Make_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Make_Status {
                get {
                    return ((bool)(this[this.tableST_VEHICLE_MAKE.Make_StatusColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.Make_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_VEHICLE_MAKE.Create_DateColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_VEHICLE_MAKE.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_VEHICLE_MAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_VEHICLE_MAKE.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_MAKE.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_VEHICLE_MAKE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hostname {
                get {
                    return ((string)(this[this.tableST_VEHICLE_MAKE.HostnameColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MAKE.HostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_VEHICLE_MAKE.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_VEHICLE_MAKE.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_VEHICLE_MAKE.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_VEHICLE_MAKE.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow[] GetST_VEHICLE_MODELRows() {
                if ((this.Table.ChildRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_MAKE_Make_Id"] == null)) {
                    return new ST_VEHICLE_MODELRow[0];
                }
                else {
                    return ((ST_VEHICLE_MODELRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_MAKE_Make_Id"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_VEHICLE_MODELRow : global::System.Data.DataRow {
            
            private ST_VEHICLE_MODELDataTable tableST_VEHICLE_MODEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_MODELRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_VEHICLE_MODEL = ((ST_VEHICLE_MODELDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Make_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_MODEL.Make_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Make_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Model_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_MODEL.Model_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Model_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Vehicle_Type_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_MODEL.Vehicle_Type_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Vehicle_Type_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Model_Desc {
                get {
                    return ((string)(this[this.tableST_VEHICLE_MODEL.Model_DescColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Model_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Vehicle_Model_status {
                get {
                    return ((bool)(this[this.tableST_VEHICLE_MODEL.Vehicle_Model_statusColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Vehicle_Model_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_VEHICLE_MODEL.Create_DateColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_VEHICLE_MODEL.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_VEHICLE_MODEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_VEHICLE_MODEL.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_MODEL.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_VEHICLE_MODEL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hostname {
                get {
                    return ((string)(this[this.tableST_VEHICLE_MODEL.HostnameColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_MODEL.HostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKERow ST_VEHICLE_MAKERow {
                get {
                    return ((ST_VEHICLE_MAKERow)(this.GetParentRow(this.Table.ParentRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_MAKE_Make_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_MAKE_Make_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow ST_VEHICLE_TYPERow {
                get {
                    return ((ST_VEHICLE_TYPERow)(this.GetParentRow(this.Table.ParentRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_VEHICLE_MODEL.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_VEHICLE_MODEL.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_VEHICLE_MODEL.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_VEHICLE_MODEL.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow[] GetST_VEHICLE_VERSIONRows() {
                if ((this.Table.ChildRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_MODEL_Make_Id_Model_Id"] == null)) {
                    return new ST_VEHICLE_VERSIONRow[0];
                }
                else {
                    return ((ST_VEHICLE_VERSIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_MODEL_Make_Id_Model_Id"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_VEHICLE_STOREDRow : global::System.Data.DataRow {
            
            private ST_VEHICLE_STOREDDataTable tableST_VEHICLE_STORED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_STOREDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_VEHICLE_STORED = ((ST_VEHICLE_STOREDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Stored_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_STORED.Stored_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_STORED.Stored_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Stored_Desc {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_STORED.Stored_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stored_Desc\' in table \'ST_VEHICLE_STORED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_STORED.Stored_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_VEHICLE_STORED.Create_DateColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_STORED.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_VEHICLE_STORED.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_VEHICLE_STORED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_STORED.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_VEHICLE_STORED.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_STORED.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_STORED.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_VEHICLE_STORED\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_STORED.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hostname {
                get {
                    return ((string)(this[this.tableST_VEHICLE_STORED.HostnameColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_STORED.HostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStored_DescNull() {
                return this.IsNull(this.tableST_VEHICLE_STORED.Stored_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStored_DescNull() {
                this[this.tableST_VEHICLE_STORED.Stored_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_VEHICLE_STORED.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_VEHICLE_STORED.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_VEHICLE_STORED.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_VEHICLE_STORED.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow[] GetVEHICLE_PRODUCTRows() {
                if ((this.Table.ChildRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_STORED_StoredId"] == null)) {
                    return new VEHICLE_PRODUCTRow[0];
                }
                else {
                    return ((VEHICLE_PRODUCTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_STORED_StoredId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_VEHICLE_TYPERow : global::System.Data.DataRow {
            
            private ST_VEHICLE_TYPEDataTable tableST_VEHICLE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_VEHICLE_TYPE = ((ST_VEHICLE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Vehicle_Type_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE.Vehicle_Type_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.Vehicle_Type_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vehicle_Type_Desc {
                get {
                    return ((string)(this[this.tableST_VEHICLE_TYPE.Vehicle_Type_DescColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.Vehicle_Type_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Vehicle_Type_Status {
                get {
                    return ((bool)(this[this.tableST_VEHICLE_TYPE.Vehicle_Type_StatusColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.Vehicle_Type_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_VEHICLE_TYPE.Create_DateColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_VEHICLE_TYPE.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_VEHICLE_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_TYPE.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_VEHICLE_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hostname {
                get {
                    return ((string)(this[this.tableST_VEHICLE_TYPE.HostnameColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.HostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string namekey {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_TYPE.namekeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'namekey\' in table \'ST_VEHICLE_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_TYPE.namekeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_VEHICLE_TYPE.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_VEHICLE_TYPE.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_VEHICLE_TYPE.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_VEHICLE_TYPE.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnamekeyNull() {
                return this.IsNull(this.tableST_VEHICLE_TYPE.namekeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnamekeyNull() {
                this[this.tableST_VEHICLE_TYPE.namekeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow[] GetST_VEHICLE_MODELRows() {
                if ((this.Table.ChildRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"] == null)) {
                    return new ST_VEHICLE_MODELRow[0];
                }
                else {
                    return ((ST_VEHICLE_MODELRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Global.ST_VEHICLE_MODEL_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTRow[] GetST_VEHICLE_TYPE_PRODUCTRows() {
                if ((this.Table.ChildRelations["FK_Global.ST_VEHICLE_TYPE_PRODUCT_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"] == null)) {
                    return new ST_VEHICLE_TYPE_PRODUCTRow[0];
                }
                else {
                    return ((ST_VEHICLE_TYPE_PRODUCTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Global.ST_VEHICLE_TYPE_PRODUCT_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow[] GetST_VEHICLE_VERSIONRows() {
                if ((this.Table.ChildRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"] == null)) {
                    return new ST_VEHICLE_VERSIONRow[0];
                }
                else {
                    return ((ST_VEHICLE_VERSIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_VEHICLE_TYPE_PRODUCTRow : global::System.Data.DataRow {
            
            private ST_VEHICLE_TYPE_PRODUCTDataTable tableST_VEHICLE_TYPE_PRODUCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_TYPE_PRODUCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_VEHICLE_TYPE_PRODUCT = ((ST_VEHICLE_TYPE_PRODUCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Corp_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Corp_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Corp_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Region_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Region_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Region_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Country_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Country_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Country_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Bl_Type_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Bl_Type_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Bl_Type_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Bl_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Bl_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Bl_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Product_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Product_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Product_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Vehicle_Type_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Vehicle_Type_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Vehicle_Type_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Create_DateColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_VEHICLE_TYPE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_TYPE_PRODUCT.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_VEHICLE_TYPE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hostname {
                get {
                    return ((string)(this[this.tableST_VEHICLE_TYPE_PRODUCT.HostnameColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_TYPE_PRODUCT.HostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow ST_VEHICLE_TYPERow {
                get {
                    return ((ST_VEHICLE_TYPERow)(this.GetParentRow(this.Table.ParentRelations["FK_Global.ST_VEHICLE_TYPE_PRODUCT_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Global.ST_VEHICLE_TYPE_PRODUCT_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_VEHICLE_TYPE_PRODUCT.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_VEHICLE_TYPE_PRODUCT.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_VEHICLE_TYPE_PRODUCT.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_VEHICLE_TYPE_PRODUCT.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_VEHICLE_USAGERow : global::System.Data.DataRow {
            
            private ST_VEHICLE_USAGEDataTable tableST_VEHICLE_USAGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_USAGERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_VEHICLE_USAGE = ((ST_VEHICLE_USAGEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Usage_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_USAGE.Usage_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_USAGE.Usage_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Usage_Desc {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_USAGE.Usage_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Usage_Desc\' in table \'ST_VEHICLE_USAGE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_USAGE.Usage_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_VEHICLE_USAGE.Create_DateColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_USAGE.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_VEHICLE_USAGE.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_VEHICLE_USAGE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_USAGE.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_VEHICLE_USAGE.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_USAGE.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_USAGE.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_VEHICLE_USAGE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_USAGE.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hostname {
                get {
                    return ((string)(this[this.tableST_VEHICLE_USAGE.HostnameColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_USAGE.HostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUsage_DescNull() {
                return this.IsNull(this.tableST_VEHICLE_USAGE.Usage_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUsage_DescNull() {
                this[this.tableST_VEHICLE_USAGE.Usage_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_VEHICLE_USAGE.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_VEHICLE_USAGE.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_VEHICLE_USAGE.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_VEHICLE_USAGE.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow[] GetVEHICLE_PRODUCTRows() {
                if ((this.Table.ChildRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_USAGE_UsageId"] == null)) {
                    return new VEHICLE_PRODUCTRow[0];
                }
                else {
                    return ((VEHICLE_PRODUCTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_USAGE_UsageId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ST_VEHICLE_VERSIONRow : global::System.Data.DataRow {
            
            private ST_VEHICLE_VERSIONDataTable tableST_VEHICLE_VERSION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ST_VEHICLE_VERSIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableST_VEHICLE_VERSION = ((ST_VEHICLE_VERSIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Make_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.Make_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Make_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Model_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.Model_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Model_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Version_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.Version_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Version_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Vehicle_Type_Id {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.Vehicle_Type_IdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Vehicle_Type_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Version_Desc {
                get {
                    return ((string)(this[this.tableST_VEHICLE_VERSION.Version_DescColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Version_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Model_Year {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_VERSION.Model_YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Model_Year\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Model_YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Body_Style {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.Body_StyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Body_Style\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Body_StyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Cylinder {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.CylinderColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.CylinderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Engine_Type {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.Engine_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Engine_Type\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Engine_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Engine_RPM {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.Engine_RPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Engine_RPM\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Engine_RPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Fuel_Int {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.Fuel_IntColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Fuel_IntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Co2_Emissions {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.Co2_EmissionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Co2_Emissions\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Co2_EmissionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Top_Speed_Kph {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.Top_Speed_KphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Top_Speed_Kph\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Top_Speed_KphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Drive_Type {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.Drive_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Drive_Type\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Drive_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Transmission_Type {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.Transmission_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transmission_Type\' in table \'ST_VEHICLE_VERSION\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Transmission_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Seats {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.SeatsColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.SeatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Doors {
                get {
                    try {
                        return ((string)(this[this.tableST_VEHICLE_VERSION.DoorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Doors\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.DoorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Weight_Kg {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_VERSION.Weight_KgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight_Kg\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Weight_KgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Sold_In_USA {
                get {
                    try {
                        return ((bool)(this[this.tableST_VEHICLE_VERSION.Sold_In_USAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sold_In_USA\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Sold_In_USAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Load_Capacity_Tons {
                get {
                    try {
                        return ((decimal)(this[this.tableST_VEHICLE_VERSION.Load_Capacity_TonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Load_Capacity_Tons\' in table \'ST_VEHICLE_VERSION\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Load_Capacity_TonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Load_Capacity_Pound {
                get {
                    try {
                        return ((decimal)(this[this.tableST_VEHICLE_VERSION.Load_Capacity_PoundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Load_Capacity_Pound\' in table \'ST_VEHICLE_VERSION\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Load_Capacity_PoundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HP {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_VERSION.HPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HP\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.HPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LT_CubicCentimeter {
                get {
                    try {
                        return ((decimal)(this[this.tableST_VEHICLE_VERSION.LT_CubicCentimeterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LT_CubicCentimeter\' in table \'ST_VEHICLE_VERSION\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.LT_CubicCentimeterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Version_Status {
                get {
                    return ((bool)(this[this.tableST_VEHICLE_VERSION.Version_StatusColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Version_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Valor_Referencia_Dgii {
                get {
                    try {
                        return ((decimal)(this[this.tableST_VEHICLE_VERSION.Valor_Referencia_DgiiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Valor_Referencia_Dgii\' in table \'ST_VEHICLE_VERSION\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Valor_Referencia_DgiiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Create_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableST_VEHICLE_VERSION.Create_DateColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Create_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Modi_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableST_VEHICLE_VERSION.Modi_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_Date\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Modi_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Create_UsrId {
                get {
                    return ((int)(this[this.tableST_VEHICLE_VERSION.Create_UsrIdColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Create_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modi_UsrId {
                get {
                    try {
                        return ((int)(this[this.tableST_VEHICLE_VERSION.Modi_UsrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modi_UsrId\' in table \'ST_VEHICLE_VERSION\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.Modi_UsrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hostname {
                get {
                    return ((string)(this[this.tableST_VEHICLE_VERSION.HostnameColumn]));
                }
                set {
                    this[this.tableST_VEHICLE_VERSION.HostnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow ST_VEHICLE_MODELRowParent {
                get {
                    return ((ST_VEHICLE_MODELRow)(this.GetParentRow(this.Table.ParentRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_MODEL_Make_Id_Model_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_MODEL_Make_Id_Model_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow ST_VEHICLE_TYPERow {
                get {
                    return ((ST_VEHICLE_TYPERow)(this.GetParentRow(this.Table.ParentRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Global.ST_VEHICLE_VERSION_Global.ST_VEHICLE_TYPE_Vehicle_Type_Id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModel_YearNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Model_YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModel_YearNull() {
                this[this.tableST_VEHICLE_VERSION.Model_YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBody_StyleNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Body_StyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBody_StyleNull() {
                this[this.tableST_VEHICLE_VERSION.Body_StyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngine_TypeNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Engine_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngine_TypeNull() {
                this[this.tableST_VEHICLE_VERSION.Engine_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngine_RPMNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Engine_RPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngine_RPMNull() {
                this[this.tableST_VEHICLE_VERSION.Engine_RPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCo2_EmissionsNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Co2_EmissionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCo2_EmissionsNull() {
                this[this.tableST_VEHICLE_VERSION.Co2_EmissionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTop_Speed_KphNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Top_Speed_KphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTop_Speed_KphNull() {
                this[this.tableST_VEHICLE_VERSION.Top_Speed_KphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrive_TypeNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Drive_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrive_TypeNull() {
                this[this.tableST_VEHICLE_VERSION.Drive_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransmission_TypeNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Transmission_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransmission_TypeNull() {
                this[this.tableST_VEHICLE_VERSION.Transmission_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoorsNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.DoorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoorsNull() {
                this[this.tableST_VEHICLE_VERSION.DoorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeight_KgNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Weight_KgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeight_KgNull() {
                this[this.tableST_VEHICLE_VERSION.Weight_KgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSold_In_USANull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Sold_In_USAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSold_In_USANull() {
                this[this.tableST_VEHICLE_VERSION.Sold_In_USAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoad_Capacity_TonsNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Load_Capacity_TonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoad_Capacity_TonsNull() {
                this[this.tableST_VEHICLE_VERSION.Load_Capacity_TonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoad_Capacity_PoundNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Load_Capacity_PoundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoad_Capacity_PoundNull() {
                this[this.tableST_VEHICLE_VERSION.Load_Capacity_PoundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHPNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.HPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHPNull() {
                this[this.tableST_VEHICLE_VERSION.HPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLT_CubicCentimeterNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.LT_CubicCentimeterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLT_CubicCentimeterNull() {
                this[this.tableST_VEHICLE_VERSION.LT_CubicCentimeterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValor_Referencia_DgiiNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Valor_Referencia_DgiiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValor_Referencia_DgiiNull() {
                this[this.tableST_VEHICLE_VERSION.Valor_Referencia_DgiiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_DateNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Modi_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_DateNull() {
                this[this.tableST_VEHICLE_VERSION.Modi_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModi_UsrIdNull() {
                return this.IsNull(this.tableST_VEHICLE_VERSION.Modi_UsrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModi_UsrIdNull() {
                this[this.tableST_VEHICLE_VERSION.Modi_UsrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow[] GetVEHICLE_PRODUCTRows() {
                if ((this.Table.ChildRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_VERSION_MakeId_ModelId_VersionId"] == null)) {
                    return new VEHICLE_PRODUCTRow[0];
                }
                else {
                    return ((VEHICLE_PRODUCTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_VERSION_MakeId_ModelId_VersionId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TERM_TYPESRow : global::System.Data.DataRow {
            
            private TERM_TYPESDataTable tableTERM_TYPES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TERM_TYPESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTERM_TYPES = ((TERM_TYPESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableTERM_TYPES.IdColumn]));
                }
                set {
                    this[this.tableTERM_TYPES.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTERM_TYPES.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'TERM_TYPES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTERM_TYPES.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TimesPanInMonths {
                get {
                    try {
                        return ((int)(this[this.tableTERM_TYPES.TimesPanInMonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimesPanInMonths\' in table \'TERM_TYPES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTERM_TYPES.TimesPanInMonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableTERM_TYPES.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableTERM_TYPES.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimesPanInMonthsNull() {
                return this.IsNull(this.tableTERM_TYPES.TimesPanInMonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimesPanInMonthsNull() {
                this[this.tableTERM_TYPES.TimesPanInMonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow[] GetQUOTATIONRows() {
                if ((this.Table.ChildRelations["FK_POS.QUOTATION_POS.TERM_TYPES_TermType_Id"] == null)) {
                    return new QUOTATIONRow[0];
                }
                else {
                    return ((QUOTATIONRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.QUOTATION_POS.TERM_TYPES_TermType_Id"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VEHICLE_PRODUCTRow : global::System.Data.DataRow {
            
            private VEHICLE_PRODUCTDataTable tableVEHICLE_PRODUCT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VEHICLE_PRODUCTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVEHICLE_PRODUCT = ((VEHICLE_PRODUCTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.IdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MakeId {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.MakeIdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.MakeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModelId {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.ModelIdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.ModelIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VersionId {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.VersionIdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.VersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuotationId {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.QuotationIdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.QuotationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DriverId {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.DriverIdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.DriverIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UsageId {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.UsageIdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.UsageIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StoredId {
                get {
                    return ((int)(this[this.tableVEHICLE_PRODUCT.StoredIdColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.StoredIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Chassis {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.ChassisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chassis\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.ChassisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Plate {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.PlateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plate\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.PlateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Color {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VehiclePrice {
                get {
                    return ((decimal)(this[this.tableVEHICLE_PRODUCT.VehiclePriceColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.VehiclePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EnsuredAmount {
                get {
                    return ((decimal)(this[this.tableVEHICLE_PRODUCT.EnsuredAmountColumn]));
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.EnsuredAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PercentageToEnsure {
                get {
                    try {
                        return ((decimal)(this[this.tableVEHICLE_PRODUCT.PercentageToEnsureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PercentageToEnsure\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.PercentageToEnsureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OthersPropertyLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.OthersPropertyLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OthersPropertyLimits\' in table \'VEHICLE_PRODUCT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.OthersPropertyLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OnePersonDeathLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.OnePersonDeathLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnePersonDeathLimits\' in table \'VEHICLE_PRODUCT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.OnePersonDeathLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnotherPersonDeathLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.AnotherPersonDeathLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnotherPersonDeathLimits\' in table \'VEHICLE_PRODUCT\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.AnotherPersonDeathLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PassengerDeathLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.PassengerDeathLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PassengerDeathLimits\' in table \'VEHICLE_PRODUCT\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.PassengerDeathLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AnotherPassengerDeathLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.AnotherPassengerDeathLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnotherPassengerDeathLimits\' in table \'VEHICLE_PRODUCT\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.AnotherPassengerDeathLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BailLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.BailLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BailLimits\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.BailLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DriverRiskLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.DriverRiskLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverRiskLimits\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.DriverRiskLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CollisionRolloverLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.CollisionRolloverLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CollisionRolloverLimits\' in table \'VEHICLE_PRODUCT\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.CollisionRolloverLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FireTheftLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.FireTheftLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FireTheftLimits\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.FireTheftLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ComprehensiveRiskLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.ComprehensiveRiskLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComprehensiveRiskLimits\' in table \'VEHICLE_PRODUCT\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.ComprehensiveRiskLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GlassBreakageLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.GlassBreakageLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlassBreakageLimits\' in table \'VEHICLE_PRODUCT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.GlassBreakageLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecialEquipmentLimits {
                get {
                    try {
                        return ((string)(this[this.tableVEHICLE_PRODUCT.SpecialEquipmentLimitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialEquipmentLimits\' in table \'VEHICLE_PRODUCT\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableVEHICLE_PRODUCT.SpecialEquipmentLimitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDRow ST_VEHICLE_STOREDRow {
                get {
                    return ((ST_VEHICLE_STOREDRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_STORED_StoredId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_STORED_StoredId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGERow ST_VEHICLE_USAGERow {
                get {
                    return ((ST_VEHICLE_USAGERow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_USAGE_UsageId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_USAGE_UsageId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow ST_VEHICLE_VERSIONRowParent {
                get {
                    return ((ST_VEHICLE_VERSIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_VERSION_MakeId_ModelId_VersionId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.VEHICLE_INFO_Global.ST_VEHICLE_VERSION_MakeId_ModelId_VersionId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow DRIVERSRow {
                get {
                    return ((DRIVERSRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.VEHICLE_INFO_POS.DRIVERS_VehicleInfoId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.VEHICLE_INFO_POS.DRIVERS_VehicleInfoId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow QUOTATIONRow {
                get {
                    return ((QUOTATIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_POS.VEHICLE_INFO_POS.QUOTATION_QuotationId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_POS.VEHICLE_INFO_POS.QUOTATION_QuotationId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChassisNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.ChassisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChassisNull() {
                this[this.tableVEHICLE_PRODUCT.ChassisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlateNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.PlateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlateNull() {
                this[this.tableVEHICLE_PRODUCT.PlateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColorNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColorNull() {
                this[this.tableVEHICLE_PRODUCT.ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentageToEnsureNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.PercentageToEnsureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPercentageToEnsureNull() {
                this[this.tableVEHICLE_PRODUCT.PercentageToEnsureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOthersPropertyLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.OthersPropertyLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOthersPropertyLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.OthersPropertyLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnePersonDeathLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.OnePersonDeathLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOnePersonDeathLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.OnePersonDeathLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnotherPersonDeathLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.AnotherPersonDeathLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnotherPersonDeathLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.AnotherPersonDeathLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPassengerDeathLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.PassengerDeathLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPassengerDeathLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.PassengerDeathLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnotherPassengerDeathLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.AnotherPassengerDeathLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnotherPassengerDeathLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.AnotherPassengerDeathLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBailLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.BailLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBailLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.BailLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDriverRiskLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.DriverRiskLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDriverRiskLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.DriverRiskLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCollisionRolloverLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.CollisionRolloverLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCollisionRolloverLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.CollisionRolloverLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFireTheftLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.FireTheftLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFireTheftLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.FireTheftLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComprehensiveRiskLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.ComprehensiveRiskLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComprehensiveRiskLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.ComprehensiveRiskLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGlassBreakageLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.GlassBreakageLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGlassBreakageLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.GlassBreakageLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialEquipmentLimitsNull() {
                return this.IsNull(this.tableVEHICLE_PRODUCT.SpecialEquipmentLimitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialEquipmentLimitsNull() {
                this[this.tableVEHICLE_PRODUCT.SpecialEquipmentLimitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRow[] GetPRODUCT_LIMITSRows() {
                if ((this.Table.ChildRelations["FK_POS.PRODUCT_LIMITS_POS.VEHICLE_PRODUCT_VehicleProduct_Id"] == null)) {
                    return new PRODUCT_LIMITSRow[0];
                }
                else {
                    return ((PRODUCT_LIMITSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_POS.PRODUCT_LIMITS_POS.VEHICLE_PRODUCT_VehicleProduct_Id"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class @__MigrationHistoryRowChangeEvent : global::System.EventArgs {
            
            private @__MigrationHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public @__MigrationHistoryRowChangeEvent(@__MigrationHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public @__MigrationHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ADDITIONAL_PRODUCTSRowChangeEvent : global::System.EventArgs {
            
            private ADDITIONAL_PRODUCTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSRowChangeEvent(ADDITIONAL_PRODUCTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ADDITIONAL_PRODUCTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DRIVERSRowChangeEvent : global::System.EventArgs {
            
            private DRIVERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRowChangeEvent(DRIVERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DRIVERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PRODUCT_LIMITSRowChangeEvent : global::System.EventArgs {
            
            private PRODUCT_LIMITSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRowChangeEvent(PRODUCT_LIMITSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PRODUCT_LIMITSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QUOTATIONRowChangeEvent : global::System.EventArgs {
            
            private QUOTATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRowChangeEvent(QUOTATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUOTATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_CITYRowChangeEvent : global::System.EventArgs {
            
            private ST_CITYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYRowChangeEvent(ST_CITYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_CITYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_COUNTRYRowChangeEvent : global::System.EventArgs {
            
            private ST_COUNTRYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYRowChangeEvent(ST_COUNTRYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_COUNTRYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_GLOBAL_CITYRowChangeEvent : global::System.EventArgs {
            
            private ST_GLOBAL_CITYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRowChangeEvent(ST_GLOBAL_CITYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_CITYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_GLOBAL_COUNTRYRowChangeEvent : global::System.EventArgs {
            
            private ST_GLOBAL_COUNTRYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRowChangeEvent(ST_GLOBAL_COUNTRYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_GLOBAL_COUNTRYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_VEHICLE_MAKERowChangeEvent : global::System.EventArgs {
            
            private ST_VEHICLE_MAKERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKERowChangeEvent(ST_VEHICLE_MAKERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MAKERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_VEHICLE_MODELRowChangeEvent : global::System.EventArgs {
            
            private ST_VEHICLE_MODELRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRowChangeEvent(ST_VEHICLE_MODELRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_MODELRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_VEHICLE_STOREDRowChangeEvent : global::System.EventArgs {
            
            private ST_VEHICLE_STOREDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDRowChangeEvent(ST_VEHICLE_STOREDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_STOREDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_VEHICLE_TYPERowChangeEvent : global::System.EventArgs {
            
            private ST_VEHICLE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERowChangeEvent(ST_VEHICLE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_VEHICLE_TYPE_PRODUCTRowChangeEvent : global::System.EventArgs {
            
            private ST_VEHICLE_TYPE_PRODUCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTRowChangeEvent(ST_VEHICLE_TYPE_PRODUCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_TYPE_PRODUCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_VEHICLE_USAGERowChangeEvent : global::System.EventArgs {
            
            private ST_VEHICLE_USAGERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGERowChangeEvent(ST_VEHICLE_USAGERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_USAGERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ST_VEHICLE_VERSIONRowChangeEvent : global::System.EventArgs {
            
            private ST_VEHICLE_VERSIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRowChangeEvent(ST_VEHICLE_VERSIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ST_VEHICLE_VERSIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TERM_TYPESRowChangeEvent : global::System.EventArgs {
            
            private TERM_TYPESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESRowChangeEvent(TERM_TYPESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TERM_TYPESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VEHICLE_PRODUCTRowChangeEvent : global::System.EventArgs {
            
            private VEHICLE_PRODUCTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRowChangeEvent(VEHICLE_PRODUCTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VEHICLE_PRODUCTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace STL.POS.Frontend.Web.POS_SiteDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class @__MigrationHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public @__MigrationHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "__MigrationHistory";
            tableMapping.ColumnMappings.Add("MigrationId", "MigrationId");
            tableMapping.ColumnMappings.Add("ContextKey", "ContextKey");
            tableMapping.ColumnMappings.Add("Model", "Model");
            tableMapping.ColumnMappings.Add("ProductVersion", "ProductVersion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [POS].[__MigrationHistory] WHERE (([MigrationId] = @Original_Migratio" +
                "nId) AND ([ContextKey] = @Original_ContextKey))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MigrationId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MigrationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContextKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContextKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [POS].[__MigrationHistory] ([MigrationId], [ContextKey], [Model], [Pr" +
                "oductVersion]) VALUES (@MigrationId, @ContextKey, @Model, @ProductVersion)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MigrationId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MigrationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContextKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContextKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductVersion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [POS].[__MigrationHistory] SET [MigrationId] = @MigrationId, [ContextKey] " +
                "= @ContextKey, [Model] = @Model, [ProductVersion] = @ProductVersion WHERE (([Mig" +
                "rationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MigrationId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MigrationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContextKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContextKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductVersion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MigrationId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MigrationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContextKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContextKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MigrationId, ContextKey, Model, ProductVersion FROM POS.[__MigrationHistor" +
                "y]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.@__MigrationHistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.@__MigrationHistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.@__MigrationHistoryDataTable dataTable = new POS_SiteDS.@__MigrationHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.@__MigrationHistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "__MigrationHistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MigrationId, string Original_ContextKey) {
            if ((Original_MigrationId == null)) {
                throw new global::System.ArgumentNullException("Original_MigrationId");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MigrationId));
            }
            if ((Original_ContextKey == null)) {
                throw new global::System.ArgumentNullException("Original_ContextKey");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ContextKey));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MigrationId, string ContextKey, byte[] Model, string ProductVersion) {
            if ((MigrationId == null)) {
                throw new global::System.ArgumentNullException("MigrationId");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MigrationId));
            }
            if ((ContextKey == null)) {
                throw new global::System.ArgumentNullException("ContextKey");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ContextKey));
            }
            if ((Model == null)) {
                throw new global::System.ArgumentNullException("Model");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte[])(Model));
            }
            if ((ProductVersion == null)) {
                throw new global::System.ArgumentNullException("ProductVersion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ProductVersion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MigrationId, string ContextKey, byte[] Model, string ProductVersion, string Original_MigrationId, string Original_ContextKey) {
            if ((MigrationId == null)) {
                throw new global::System.ArgumentNullException("MigrationId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MigrationId));
            }
            if ((ContextKey == null)) {
                throw new global::System.ArgumentNullException("ContextKey");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ContextKey));
            }
            if ((Model == null)) {
                throw new global::System.ArgumentNullException("Model");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte[])(Model));
            }
            if ((ProductVersion == null)) {
                throw new global::System.ArgumentNullException("ProductVersion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ProductVersion));
            }
            if ((Original_MigrationId == null)) {
                throw new global::System.ArgumentNullException("Original_MigrationId");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MigrationId));
            }
            if ((Original_ContextKey == null)) {
                throw new global::System.ArgumentNullException("Original_ContextKey");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ContextKey));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(byte[] Model, string ProductVersion, string Original_MigrationId, string Original_ContextKey) {
            return this.Update(Original_MigrationId, Original_ContextKey, Model, ProductVersion, Original_MigrationId, Original_ContextKey);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ADDITIONAL_PRODUCTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ADDITIONAL_PRODUCTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ADDITIONAL_PRODUCTS";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("IsSelected", "IsSelected");
            tableMapping.ColumnMappings.Add("Prime", "Prime");
            tableMapping.ColumnMappings.Add("ProductLimits_Id", "ProductLimits_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [POS].[ADDITIONAL_PRODUCTS] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [POS].[ADDITIONAL_PRODUCTS] ([Name], [Description], [IsSelected], [Pr" +
                "ime], [ProductLimits_Id]) VALUES (@Name, @Description, @IsSelected, @Prime, @Pro" +
                "ductLimits_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSelected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prime", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductLimits_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLimits_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [POS].[ADDITIONAL_PRODUCTS] SET [Name] = @Name, [Description] = @Descripti" +
                "on, [IsSelected] = @IsSelected, [Prime] = @Prime, [ProductLimits_Id] = @ProductL" +
                "imits_Id WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSelected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Prime", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Prime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductLimits_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductLimits_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Name, Description, IsSelected, Prime, ProductLimits_Id FROM POS.ADDITI" +
                "ONAL_PRODUCTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ADDITIONAL_PRODUCTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ADDITIONAL_PRODUCTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ADDITIONAL_PRODUCTSDataTable dataTable = new POS_SiteDS.ADDITIONAL_PRODUCTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ADDITIONAL_PRODUCTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ADDITIONAL_PRODUCTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Name, string Description, bool IsSelected, global::System.Nullable<decimal> Prime, int ProductLimits_Id) {
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(IsSelected));
            if ((Prime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Prime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ProductLimits_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, string Description, bool IsSelected, global::System.Nullable<decimal> Prime, int ProductLimits_Id, int Original_Id) {
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(IsSelected));
            if ((Prime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Prime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ProductLimits_Id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DRIVERSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DRIVERSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DRIVERS";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("Surname", "Surname");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth");
            tableMapping.ColumnMappings.Add("IsPrincipal", "IsPrincipal");
            tableMapping.ColumnMappings.Add("Sex", "Sex");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("WorkPhone", "WorkPhone");
            tableMapping.ColumnMappings.Add("License", "License");
            tableMapping.ColumnMappings.Add("YearsDriving", "YearsDriving");
            tableMapping.ColumnMappings.Add("AccidentsLast3Years", "AccidentsLast3Years");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("Job", "Job");
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("YearsInCompany", "YearsInCompany");
            tableMapping.ColumnMappings.Add("QuotationId", "QuotationId");
            tableMapping.ColumnMappings.Add("City_Country_Id", "City_Country_Id");
            tableMapping.ColumnMappings.Add("City_Domesticreg_Id", "City_Domesticreg_Id");
            tableMapping.ColumnMappings.Add("City_State_Prov_Id", "City_State_Prov_Id");
            tableMapping.ColumnMappings.Add("City_City_Id", "City_City_Id");
            tableMapping.ColumnMappings.Add("Nationality_Global_Country_Id", "Nationality_Global_Country_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [POS].[DRIVERS] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [POS].[DRIVERS] ([FirstName], [Surname], [Email], [PhoneNumber], [DateOfBirth], [IsPrincipal], [Sex], [Address], [Mobile], [WorkPhone], [License], [YearsDriving], [AccidentsLast3Years], [MaritalStatus], [Job], [Company], [YearsInCompany], [QuotationId], [City_Country_Id], [City_Domesticreg_Id], [City_State_Prov_Id], [City_City_Id], [Nationality_Global_Country_Id]) VALUES (@FirstName, @Surname, @Email, @PhoneNumber, @DateOfBirth, @IsPrincipal, @Sex, @Address, @Mobile, @WorkPhone, @License, @YearsDriving, @AccidentsLast3Years, @MaritalStatus, @Job, @Company, @YearsInCompany, @QuotationId, @City_Country_Id, @City_Domesticreg_Id, @City_State_Prov_Id, @City_City_Id, @Nationality_Global_Country_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfBirth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPrincipal", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPrincipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@License", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearsDriving", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsDriving", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccidentsLast3Years", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccidentsLast3Years", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearsInCompany", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsInCompany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Domesticreg_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_State_Prov_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_City_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality_Global_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality_Global_Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [POS].[DRIVERS] SET [FirstName] = @FirstName, [Surname] = @Surname, [Email] = @Email, [PhoneNumber] = @PhoneNumber, [DateOfBirth] = @DateOfBirth, [IsPrincipal] = @IsPrincipal, [Sex] = @Sex, [Address] = @Address, [Mobile] = @Mobile, [WorkPhone] = @WorkPhone, [License] = @License, [YearsDriving] = @YearsDriving, [AccidentsLast3Years] = @AccidentsLast3Years, [MaritalStatus] = @MaritalStatus, [Job] = @Job, [Company] = @Company, [YearsInCompany] = @YearsInCompany, [QuotationId] = @QuotationId, [City_Country_Id] = @City_Country_Id, [City_Domesticreg_Id] = @City_Domesticreg_Id, [City_State_Prov_Id] = @City_State_Prov_Id, [City_City_Id] = @City_City_Id, [Nationality_Global_Country_Id] = @Nationality_Global_Country_Id WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfBirth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPrincipal", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPrincipal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sex", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mobile", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkPhone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkPhone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@License", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearsDriving", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsDriving", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccidentsLast3Years", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccidentsLast3Years", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaritalStatus", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearsInCompany", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsInCompany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Domesticreg_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_State_Prov_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_City_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nationality_Global_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nationality_Global_Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, FirstName, Surname, Email, PhoneNumber, DateOfBirth, IsPrincipal, Sex, Address, Mobile, WorkPhone, License, YearsDriving, AccidentsLast3Years, MaritalStatus, Job, Company, YearsInCompany, QuotationId, City_Country_Id, City_Domesticreg_Id, City_State_Prov_Id, City_City_Id, Nationality_Global_Country_Id FROM POS.DRIVERS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.DRIVERSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.DRIVERSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.DRIVERSDataTable dataTable = new POS_SiteDS.DRIVERSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.DRIVERSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "DRIVERS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FirstName, 
                    string Surname, 
                    string Email, 
                    string PhoneNumber, 
                    System.DateTime DateOfBirth, 
                    bool IsPrincipal, 
                    string Sex, 
                    string Address, 
                    string Mobile, 
                    string WorkPhone, 
                    string License, 
                    global::System.Nullable<int> YearsDriving, 
                    global::System.Nullable<int> AccidentsLast3Years, 
                    string MaritalStatus, 
                    string Job, 
                    string Company, 
                    global::System.Nullable<int> YearsInCompany, 
                    int QuotationId, 
                    int City_Country_Id, 
                    int City_Domesticreg_Id, 
                    int City_State_Prov_Id, 
                    int City_City_Id, 
                    global::System.Nullable<int> Nationality_Global_Country_Id) {
            if ((FirstName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FirstName));
            }
            if ((Surname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Surname));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Email));
            }
            if ((PhoneNumber == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PhoneNumber));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DateOfBirth));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(IsPrincipal));
            if ((Sex == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Sex));
            }
            if ((Address == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Address));
            }
            if ((Mobile == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Mobile));
            }
            if ((WorkPhone == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(WorkPhone));
            }
            if ((License == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(License));
            }
            if ((YearsDriving.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(YearsDriving.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AccidentsLast3Years.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(AccidentsLast3Years.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MaritalStatus == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MaritalStatus));
            }
            if ((Job == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Job));
            }
            if ((Company == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Company));
            }
            if ((YearsInCompany.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(YearsInCompany.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(QuotationId));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(City_Country_Id));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(City_Domesticreg_Id));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(City_State_Prov_Id));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(City_City_Id));
            if ((Nationality_Global_Country_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Nationality_Global_Country_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FirstName, 
                    string Surname, 
                    string Email, 
                    string PhoneNumber, 
                    System.DateTime DateOfBirth, 
                    bool IsPrincipal, 
                    string Sex, 
                    string Address, 
                    string Mobile, 
                    string WorkPhone, 
                    string License, 
                    global::System.Nullable<int> YearsDriving, 
                    global::System.Nullable<int> AccidentsLast3Years, 
                    string MaritalStatus, 
                    string Job, 
                    string Company, 
                    global::System.Nullable<int> YearsInCompany, 
                    int QuotationId, 
                    int City_Country_Id, 
                    int City_Domesticreg_Id, 
                    int City_State_Prov_Id, 
                    int City_City_Id, 
                    global::System.Nullable<int> Nationality_Global_Country_Id, 
                    int Original_Id) {
            if ((FirstName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FirstName));
            }
            if ((Surname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Surname));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Email));
            }
            if ((PhoneNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PhoneNumber));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DateOfBirth));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(IsPrincipal));
            if ((Sex == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Sex));
            }
            if ((Address == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Address));
            }
            if ((Mobile == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Mobile));
            }
            if ((WorkPhone == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(WorkPhone));
            }
            if ((License == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(License));
            }
            if ((YearsDriving.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(YearsDriving.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AccidentsLast3Years.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(AccidentsLast3Years.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((MaritalStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MaritalStatus));
            }
            if ((Job == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Job));
            }
            if ((Company == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Company));
            }
            if ((YearsInCompany.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(YearsInCompany.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(QuotationId));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(City_Country_Id));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(City_Domesticreg_Id));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(City_State_Prov_Id));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(City_City_Id));
            if ((Nationality_Global_Country_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Nationality_Global_Country_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRODUCT_LIMITSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PRODUCT_LIMITSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRODUCT_LIMITS";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("IsSelected", "IsSelected");
            tableMapping.ColumnMappings.Add("MinDeductible", "MinDeductible");
            tableMapping.ColumnMappings.Add("OthersProperty", "OthersProperty");
            tableMapping.ColumnMappings.Add("OnePersonDeath", "OnePersonDeath");
            tableMapping.ColumnMappings.Add("AnotherPersonDeath", "AnotherPersonDeath");
            tableMapping.ColumnMappings.Add("PassengerDeath", "PassengerDeath");
            tableMapping.ColumnMappings.Add("AnotherPassengerDeath", "AnotherPassengerDeath");
            tableMapping.ColumnMappings.Add("Bail", "Bail");
            tableMapping.ColumnMappings.Add("SdPrime", "SdPrime");
            tableMapping.ColumnMappings.Add("DriverRisk", "DriverRisk");
            tableMapping.ColumnMappings.Add("CollisionRollover", "CollisionRollover");
            tableMapping.ColumnMappings.Add("FireTheft", "FireTheft");
            tableMapping.ColumnMappings.Add("ComprehensiveRisk", "ComprehensiveRisk");
            tableMapping.ColumnMappings.Add("GlassBreakage", "GlassBreakage");
            tableMapping.ColumnMappings.Add("SpecialEquipment", "SpecialEquipment");
            tableMapping.ColumnMappings.Add("TpPrime", "TpPrime");
            tableMapping.ColumnMappings.Add("VehicleProduct_Id", "VehicleProduct_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [POS].[PRODUCT_LIMITS] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [POS].[PRODUCT_LIMITS] ([IsSelected], [MinDeductible], [OthersProperty], [OnePersonDeath], [AnotherPersonDeath], [PassengerDeath], [AnotherPassengerDeath], [Bail], [SdPrime], [DriverRisk], [CollisionRollover], [FireTheft], [ComprehensiveRisk], [GlassBreakage], [SpecialEquipment], [TpPrime], [VehicleProduct_Id]) VALUES (@IsSelected, @MinDeductible, @OthersProperty, @OnePersonDeath, @AnotherPersonDeath, @PassengerDeath, @AnotherPassengerDeath, @Bail, @SdPrime, @DriverRisk, @CollisionRollover, @FireTheft, @ComprehensiveRisk, @GlassBreakage, @SpecialEquipment, @TpPrime, @VehicleProduct_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSelected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinDeductible", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MinDeductible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OthersProperty", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OthersProperty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnePersonDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnePersonDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPersonDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPersonDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassengerDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPassengerDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPassengerDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bail", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SdPrime", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SdPrime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverRisk", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverRisk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CollisionRollover", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CollisionRollover", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FireTheft", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FireTheft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComprehensiveRisk", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComprehensiveRisk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlassBreakage", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlassBreakage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialEquipment", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialEquipment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TpPrime", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TpPrime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleProduct_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleProduct_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [POS].[PRODUCT_LIMITS] SET [IsSelected] = @IsSelected, [MinDeductible] = @MinDeductible, [OthersProperty] = @OthersProperty, [OnePersonDeath] = @OnePersonDeath, [AnotherPersonDeath] = @AnotherPersonDeath, [PassengerDeath] = @PassengerDeath, [AnotherPassengerDeath] = @AnotherPassengerDeath, [Bail] = @Bail, [SdPrime] = @SdPrime, [DriverRisk] = @DriverRisk, [CollisionRollover] = @CollisionRollover, [FireTheft] = @FireTheft, [ComprehensiveRisk] = @ComprehensiveRisk, [GlassBreakage] = @GlassBreakage, [SpecialEquipment] = @SpecialEquipment, [TpPrime] = @TpPrime, [VehicleProduct_Id] = @VehicleProduct_Id WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSelected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinDeductible", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MinDeductible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OthersProperty", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OthersProperty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnePersonDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnePersonDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPersonDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPersonDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassengerDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPassengerDeath", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPassengerDeath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bail", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SdPrime", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SdPrime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverRisk", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverRisk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CollisionRollover", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CollisionRollover", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FireTheft", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FireTheft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComprehensiveRisk", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComprehensiveRisk", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlassBreakage", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlassBreakage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialEquipment", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialEquipment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TpPrime", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TpPrime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleProduct_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleProduct_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, IsSelected, MinDeductible, OthersProperty, OnePersonDeath, AnotherPersonDeath, PassengerDeath, AnotherPassengerDeath, Bail, SdPrime, DriverRisk, CollisionRollover, FireTheft, ComprehensiveRisk, GlassBreakage, SpecialEquipment, TpPrime, VehicleProduct_Id FROM POS.PRODUCT_LIMITS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.PRODUCT_LIMITSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.PRODUCT_LIMITSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.PRODUCT_LIMITSDataTable dataTable = new POS_SiteDS.PRODUCT_LIMITSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.PRODUCT_LIMITSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "PRODUCT_LIMITS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    bool IsSelected, 
                    global::System.Nullable<decimal> MinDeductible, 
                    decimal OthersProperty, 
                    decimal OnePersonDeath, 
                    decimal AnotherPersonDeath, 
                    decimal PassengerDeath, 
                    decimal AnotherPassengerDeath, 
                    decimal Bail, 
                    global::System.Nullable<decimal> SdPrime, 
                    global::System.Nullable<decimal> DriverRisk, 
                    global::System.Nullable<decimal> CollisionRollover, 
                    global::System.Nullable<decimal> FireTheft, 
                    global::System.Nullable<decimal> ComprehensiveRisk, 
                    global::System.Nullable<decimal> GlassBreakage, 
                    global::System.Nullable<decimal> SpecialEquipment, 
                    global::System.Nullable<decimal> TpPrime, 
                    global::System.Nullable<int> VehicleProduct_Id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((bool)(IsSelected));
            if ((MinDeductible.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(MinDeductible.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(OthersProperty));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(OnePersonDeath));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(AnotherPersonDeath));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PassengerDeath));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(AnotherPassengerDeath));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Bail));
            if ((SdPrime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(SdPrime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DriverRisk.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(DriverRisk.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CollisionRollover.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(CollisionRollover.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FireTheft.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(FireTheft.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ComprehensiveRisk.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(ComprehensiveRisk.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((GlassBreakage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(GlassBreakage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SpecialEquipment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(SpecialEquipment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TpPrime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(TpPrime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((VehicleProduct_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(VehicleProduct_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    bool IsSelected, 
                    global::System.Nullable<decimal> MinDeductible, 
                    decimal OthersProperty, 
                    decimal OnePersonDeath, 
                    decimal AnotherPersonDeath, 
                    decimal PassengerDeath, 
                    decimal AnotherPassengerDeath, 
                    decimal Bail, 
                    global::System.Nullable<decimal> SdPrime, 
                    global::System.Nullable<decimal> DriverRisk, 
                    global::System.Nullable<decimal> CollisionRollover, 
                    global::System.Nullable<decimal> FireTheft, 
                    global::System.Nullable<decimal> ComprehensiveRisk, 
                    global::System.Nullable<decimal> GlassBreakage, 
                    global::System.Nullable<decimal> SpecialEquipment, 
                    global::System.Nullable<decimal> TpPrime, 
                    global::System.Nullable<int> VehicleProduct_Id, 
                    int Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((bool)(IsSelected));
            if ((MinDeductible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(MinDeductible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(OthersProperty));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(OnePersonDeath));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(AnotherPersonDeath));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PassengerDeath));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(AnotherPassengerDeath));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Bail));
            if ((SdPrime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(SdPrime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DriverRisk.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(DriverRisk.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((CollisionRollover.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(CollisionRollover.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FireTheft.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(FireTheft.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ComprehensiveRisk.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(ComprehensiveRisk.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((GlassBreakage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(GlassBreakage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SpecialEquipment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(SpecialEquipment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TpPrime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(TpPrime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((VehicleProduct_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(VehicleProduct_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUOTATIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QUOTATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUOTATION";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("Created", "Created");
            tableMapping.ColumnMappings.Add("LastModified", "LastModified");
            tableMapping.ColumnMappings.Add("ProductNumber", "ProductNumber");
            tableMapping.ColumnMappings.Add("QuotationDailyNumber", "QuotationDailyNumber");
            tableMapping.ColumnMappings.Add("PolicyNumber", "PolicyNumber");
            tableMapping.ColumnMappings.Add("QuotationNumber", "QuotationNumber");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("EndDate", "EndDate");
            tableMapping.ColumnMappings.Add("TermType_Id", "TermType_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [POS].[QUOTATION] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [POS].[QUOTATION] ([Status], [Created], [LastModified], [ProductNumber], [QuotationDailyNumber], [PolicyNumber], [QuotationNumber], [StartDate], [EndDate], [TermType_Id]) VALUES (@Status, @Created, @LastModified, @ProductNumber, @QuotationDailyNumber, @PolicyNumber, @QuotationNumber, @StartDate, @EndDate, @TermType_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationDailyNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationDailyNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PolicyNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PolicyNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermType_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermType_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [POS].[QUOTATION] SET [Status] = @Status, [Created] = @Created, [LastModified] = @LastModified, [ProductNumber] = @ProductNumber, [QuotationDailyNumber] = @QuotationDailyNumber, [PolicyNumber] = @PolicyNumber, [QuotationNumber] = @QuotationNumber, [StartDate] = @StartDate, [EndDate] = @EndDate, [TermType_Id] = @TermType_Id WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Created", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Created", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationDailyNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationDailyNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PolicyNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PolicyNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermType_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermType_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Status, Created, LastModified, ProductNumber, QuotationDailyNumber, Po" +
                "licyNumber, QuotationNumber, StartDate, EndDate, TermType_Id FROM POS.QUOTATION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.QUOTATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.QUOTATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.QUOTATIONDataTable dataTable = new POS_SiteDS.QUOTATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.QUOTATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "QUOTATION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(byte Status, System.DateTime Created, System.DateTime LastModified, string ProductNumber, int QuotationDailyNumber, string PolicyNumber, string QuotationNumber, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate, global::System.Nullable<int> TermType_Id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((byte)(Status));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Created));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(LastModified));
            if ((ProductNumber == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ProductNumber));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(QuotationDailyNumber));
            if ((PolicyNumber == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PolicyNumber));
            }
            if ((QuotationNumber == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(QuotationNumber));
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((TermType_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(TermType_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(byte Status, System.DateTime Created, System.DateTime LastModified, string ProductNumber, int QuotationDailyNumber, string PolicyNumber, string QuotationNumber, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate, global::System.Nullable<int> TermType_Id, int Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((byte)(Status));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Created));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(LastModified));
            if ((ProductNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ProductNumber));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(QuotationDailyNumber));
            if ((PolicyNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PolicyNumber));
            }
            if ((QuotationNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(QuotationNumber));
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((TermType_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(TermType_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_CITYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_CITYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_CITY";
            tableMapping.ColumnMappings.Add("Corp_Id", "Corp_Id");
            tableMapping.ColumnMappings.Add("Region_Id", "Region_Id");
            tableMapping.ColumnMappings.Add("Country_Id", "Country_Id");
            tableMapping.ColumnMappings.Add("Domesticreg_Id", "Domesticreg_Id");
            tableMapping.ColumnMappings.Add("State_Prov_Id", "State_Prov_Id");
            tableMapping.ColumnMappings.Add("City_Id", "City_Id");
            tableMapping.ColumnMappings.Add("City_Mgr_Id", "City_Mgr_Id");
            tableMapping.ColumnMappings.Add("Directory_Id", "Directory_Id");
            tableMapping.ColumnMappings.Add("Country_Headquarter", "Country_Headquarter");
            tableMapping.ColumnMappings.Add("City_Status", "City_Status");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("hostname", "hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Global].[ST_CITY] WHERE (([Corp_Id] = @Original_Corp_Id) AND ([Region_Id] = @Original_Region_Id) AND ([Country_Id] = @Original_Country_Id) AND ([Domesticreg_Id] = @Original_Domesticreg_Id) AND ([State_Prov_Id] = @Original_State_Prov_Id) AND ([City_Id] = @Original_City_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_CITY] ([Corp_Id], [Region_Id], [Country_Id], [Domesticreg_Id], [State_Prov_Id], [City_Id], [City_Mgr_Id], [Directory_Id], [Country_Headquarter], [City_Status], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [hostname]) VALUES (@Corp_Id, @Region_Id, @Country_Id, @Domesticreg_Id, @State_Prov_Id, @City_Id, @City_Mgr_Id, @Directory_Id, @Country_Headquarter, @City_Status, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Mgr_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Mgr_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Directory_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Directory_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Headquarter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Headquarter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_CITY] SET [Corp_Id] = @Corp_Id, [Region_Id] = @Region_Id, [Country_Id] = @Country_Id, [Domesticreg_Id] = @Domesticreg_Id, [State_Prov_Id] = @State_Prov_Id, [City_Id] = @City_Id, [City_Mgr_Id] = @City_Mgr_Id, [Directory_Id] = @Directory_Id, [Country_Headquarter] = @Country_Headquarter, [City_Status] = @City_Status, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [hostname] = @hostname WHERE (([Corp_Id] = @Original_Corp_Id) AND ([Region_Id] = @Original_Region_Id) AND ([Country_Id] = @Original_Country_Id) AND ([Domesticreg_Id] = @Original_Domesticreg_Id) AND ([State_Prov_Id] = @Original_State_Prov_Id) AND ([City_Id] = @Original_City_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Mgr_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Mgr_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Directory_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Directory_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Headquarter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Headquarter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Corp_Id, Region_Id, Country_Id, Domesticreg_Id, State_Prov_Id, City_Id, Ci" +
                "ty_Mgr_Id, Directory_Id, Country_Headquarter, City_Status, Create_Date, Modi_Dat" +
                "e, Create_UsrId, Modi_UsrId, hostname FROM Global.ST_CITY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_CITYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_CITYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_CITYDataTable dataTable = new POS_SiteDS.ST_CITYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_CITYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_CITY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Corp_Id, int Original_Region_Id, int Original_Country_Id, int Original_Domesticreg_Id, int Original_State_Prov_Id, int Original_City_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Corp_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Region_Id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Country_Id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Domesticreg_Id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_State_Prov_Id));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_City_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Corp_Id, int Region_Id, int Country_Id, int Domesticreg_Id, int State_Prov_Id, int City_Id, global::System.Nullable<int> City_Mgr_Id, global::System.Nullable<int> Directory_Id, bool Country_Headquarter, bool City_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Corp_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Region_Id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Country_Id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Domesticreg_Id));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(State_Prov_Id));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(City_Id));
            if ((City_Mgr_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(City_Mgr_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Directory_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Directory_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Country_Headquarter));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(City_Status));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Corp_Id, 
                    int Region_Id, 
                    int Country_Id, 
                    int Domesticreg_Id, 
                    int State_Prov_Id, 
                    int City_Id, 
                    global::System.Nullable<int> City_Mgr_Id, 
                    global::System.Nullable<int> Directory_Id, 
                    bool Country_Headquarter, 
                    bool City_Status, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string hostname, 
                    int Original_Corp_Id, 
                    int Original_Region_Id, 
                    int Original_Country_Id, 
                    int Original_Domesticreg_Id, 
                    int Original_State_Prov_Id, 
                    int Original_City_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Corp_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Region_Id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Country_Id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Domesticreg_Id));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(State_Prov_Id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(City_Id));
            if ((City_Mgr_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(City_Mgr_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Directory_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Directory_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Country_Headquarter));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(City_Status));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(hostname));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Corp_Id));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Region_Id));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Country_Id));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Domesticreg_Id));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_State_Prov_Id));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_City_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> City_Mgr_Id, global::System.Nullable<int> Directory_Id, bool Country_Headquarter, bool City_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string hostname, int Original_Corp_Id, int Original_Region_Id, int Original_Country_Id, int Original_Domesticreg_Id, int Original_State_Prov_Id, int Original_City_Id) {
            return this.Update(Original_Corp_Id, Original_Region_Id, Original_Country_Id, Original_Domesticreg_Id, Original_State_Prov_Id, Original_City_Id, City_Mgr_Id, Directory_Id, Country_Headquarter, City_Status, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, hostname, Original_Corp_Id, Original_Region_Id, Original_Country_Id, Original_Domesticreg_Id, Original_State_Prov_Id, Original_City_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_COUNTRYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_COUNTRYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_COUNTRY";
            tableMapping.ColumnMappings.Add("Corp_Id", "Corp_Id");
            tableMapping.ColumnMappings.Add("Region_Id", "Region_Id");
            tableMapping.ColumnMappings.Add("Country_Id", "Country_Id");
            tableMapping.ColumnMappings.Add("Continent_Id", "Continent_Id");
            tableMapping.ColumnMappings.Add("Country_Headquarter", "Country_Headquarter");
            tableMapping.ColumnMappings.Add("Country_Mgr_Id", "Country_Mgr_Id");
            tableMapping.ColumnMappings.Add("Directory_Id", "Directory_Id");
            tableMapping.ColumnMappings.Add("Country_Status", "Country_Status");
            tableMapping.ColumnMappings.Add("GMT_tz", "GMT_tz");
            tableMapping.ColumnMappings.Add("DST_tz", "DST_tz");
            tableMapping.ColumnMappings.Add("DST_Threshold", "DST_Threshold");
            tableMapping.ColumnMappings.Add("DST_Initial_Date", "DST_Initial_Date");
            tableMapping.ColumnMappings.Add("DST_End_Date", "DST_End_Date");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("hostname", "hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_COUNTRY] WHERE (([Corp_Id] = @Original_Corp_Id) AND ([Re" +
                "gion_Id] = @Original_Region_Id) AND ([Country_Id] = @Original_Country_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_COUNTRY] ([Corp_Id], [Region_Id], [Country_Id], [Continent_Id], [Country_Headquarter], [Country_Mgr_Id], [Directory_Id], [Country_Status], [GMT_tz], [DST_tz], [DST_Threshold], [DST_Initial_Date], [DST_End_Date], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [hostname]) VALUES (@Corp_Id, @Region_Id, @Country_Id, @Continent_Id, @Country_Headquarter, @Country_Mgr_Id, @Directory_Id, @Country_Status, @GMT_tz, @DST_tz, @DST_Threshold, @DST_Initial_Date, @DST_End_Date, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Continent_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Continent_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Headquarter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Headquarter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Mgr_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Mgr_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Directory_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Directory_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMT_tz", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMT_tz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_tz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_tz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_Threshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_Initial_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_Initial_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_End_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_End_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_COUNTRY] SET [Corp_Id] = @Corp_Id, [Region_Id] = @Region_Id, [Country_Id] = @Country_Id, [Continent_Id] = @Continent_Id, [Country_Headquarter] = @Country_Headquarter, [Country_Mgr_Id] = @Country_Mgr_Id, [Directory_Id] = @Directory_Id, [Country_Status] = @Country_Status, [GMT_tz] = @GMT_tz, [DST_tz] = @DST_tz, [DST_Threshold] = @DST_Threshold, [DST_Initial_Date] = @DST_Initial_Date, [DST_End_Date] = @DST_End_Date, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [hostname] = @hostname WHERE (([Corp_Id] = @Original_Corp_Id) AND ([Region_Id] = @Original_Region_Id) AND ([Country_Id] = @Original_Country_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Continent_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Continent_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Headquarter", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Headquarter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Mgr_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Mgr_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Directory_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Directory_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMT_tz", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GMT_tz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_tz", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_tz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_Threshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_Initial_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_Initial_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DST_End_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DST_End_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Corp_Id, Region_Id, Country_Id, Continent_Id, Country_Headquarter, Country_Mgr_Id, Directory_Id, Country_Status, GMT_tz, DST_tz, DST_Threshold, DST_Initial_Date, DST_End_Date, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, hostname FROM Global.ST_COUNTRY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_COUNTRYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_COUNTRYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_COUNTRYDataTable dataTable = new POS_SiteDS.ST_COUNTRYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_COUNTRYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_COUNTRY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Corp_Id, int Original_Region_Id, int Original_Country_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Corp_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Region_Id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Country_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Corp_Id, 
                    int Region_Id, 
                    int Country_Id, 
                    int Continent_Id, 
                    bool Country_Headquarter, 
                    global::System.Nullable<int> Country_Mgr_Id, 
                    global::System.Nullable<int> Directory_Id, 
                    bool Country_Status, 
                    global::System.Nullable<int> GMT_tz, 
                    global::System.Nullable<bool> DST_tz, 
                    global::System.Nullable<int> DST_Threshold, 
                    global::System.Nullable<global::System.DateTime> DST_Initial_Date, 
                    global::System.Nullable<global::System.DateTime> DST_End_Date, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Corp_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Region_Id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Country_Id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Continent_Id));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Country_Headquarter));
            if ((Country_Mgr_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Country_Mgr_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Directory_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Directory_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(Country_Status));
            if ((GMT_tz.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(GMT_tz.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DST_tz.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(DST_tz.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DST_Threshold.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(DST_Threshold.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DST_Initial_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(DST_Initial_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DST_End_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(DST_End_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Corp_Id, 
                    int Region_Id, 
                    int Country_Id, 
                    int Continent_Id, 
                    bool Country_Headquarter, 
                    global::System.Nullable<int> Country_Mgr_Id, 
                    global::System.Nullable<int> Directory_Id, 
                    bool Country_Status, 
                    global::System.Nullable<int> GMT_tz, 
                    global::System.Nullable<bool> DST_tz, 
                    global::System.Nullable<int> DST_Threshold, 
                    global::System.Nullable<global::System.DateTime> DST_Initial_Date, 
                    global::System.Nullable<global::System.DateTime> DST_End_Date, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string hostname, 
                    int Original_Corp_Id, 
                    int Original_Region_Id, 
                    int Original_Country_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Corp_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Region_Id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Country_Id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Continent_Id));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Country_Headquarter));
            if ((Country_Mgr_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Country_Mgr_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Directory_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Directory_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Country_Status));
            if ((GMT_tz.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(GMT_tz.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DST_tz.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(DST_tz.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DST_Threshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(DST_Threshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DST_Initial_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(DST_Initial_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DST_End_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(DST_End_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(hostname));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Corp_Id));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_Region_Id));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Country_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Continent_Id, 
                    bool Country_Headquarter, 
                    global::System.Nullable<int> Country_Mgr_Id, 
                    global::System.Nullable<int> Directory_Id, 
                    bool Country_Status, 
                    global::System.Nullable<int> GMT_tz, 
                    global::System.Nullable<bool> DST_tz, 
                    global::System.Nullable<int> DST_Threshold, 
                    global::System.Nullable<global::System.DateTime> DST_Initial_Date, 
                    global::System.Nullable<global::System.DateTime> DST_End_Date, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string hostname, 
                    int Original_Corp_Id, 
                    int Original_Region_Id, 
                    int Original_Country_Id) {
            return this.Update(Original_Corp_Id, Original_Region_Id, Original_Country_Id, Continent_Id, Country_Headquarter, Country_Mgr_Id, Directory_Id, Country_Status, GMT_tz, DST_tz, DST_Threshold, DST_Initial_Date, DST_End_Date, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, hostname, Original_Corp_Id, Original_Region_Id, Original_Country_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_GLOBAL_CITYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_GLOBAL_CITYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_GLOBAL_CITY";
            tableMapping.ColumnMappings.Add("Country_Id", "Country_Id");
            tableMapping.ColumnMappings.Add("Domesticreg_Id", "Domesticreg_Id");
            tableMapping.ColumnMappings.Add("State_Prov_Id", "State_Prov_Id");
            tableMapping.ColumnMappings.Add("City_Id", "City_Id");
            tableMapping.ColumnMappings.Add("City_Desc", "City_Desc");
            tableMapping.ColumnMappings.Add("City_Abbrv_Name", "City_Abbrv_Name");
            tableMapping.ColumnMappings.Add("City_Status", "City_Status");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("hostname", "hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_GLOBAL_CITY] WHERE (([Country_Id] = @Original_Country_Id" +
                ") AND ([Domesticreg_Id] = @Original_Domesticreg_Id) AND ([State_Prov_Id] = @Orig" +
                "inal_State_Prov_Id) AND ([City_Id] = @Original_City_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_GLOBAL_CITY] ([Country_Id], [Domesticreg_Id], [State_Prov_Id], [City_Id], [City_Desc], [City_Abbrv_Name], [City_Status], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [hostname]) VALUES (@Country_Id, @Domesticreg_Id, @State_Prov_Id, @City_Id, @City_Desc, @City_Abbrv_Name, @City_Status, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Abbrv_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Abbrv_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_GLOBAL_CITY] SET [Country_Id] = @Country_Id, [Domesticreg_Id] = @Domesticreg_Id, [State_Prov_Id] = @State_Prov_Id, [City_Id] = @City_Id, [City_Desc] = @City_Desc, [City_Abbrv_Name] = @City_Abbrv_Name, [City_Status] = @City_Status, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [hostname] = @hostname WHERE (([Country_Id] = @Original_Country_Id) AND ([Domesticreg_Id] = @Original_Domesticreg_Id) AND ([State_Prov_Id] = @Original_State_Prov_Id) AND ([City_Id] = @Original_City_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Abbrv_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Abbrv_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Domesticreg_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Domesticreg_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_State_Prov_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State_Prov_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Country_Id, Domesticreg_Id, State_Prov_Id, City_Id, City_Desc, City_Abbrv_" +
                "Name, City_Status, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, hostname FR" +
                "OM Global.ST_GLOBAL_CITY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_GLOBAL_CITYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_GLOBAL_CITYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_GLOBAL_CITYDataTable dataTable = new POS_SiteDS.ST_GLOBAL_CITYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_GLOBAL_CITYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_GLOBAL_CITY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Country_Id, int Original_Domesticreg_Id, int Original_State_Prov_Id, int Original_City_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Country_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Domesticreg_Id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_State_Prov_Id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_City_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Country_Id, int Domesticreg_Id, int State_Prov_Id, int City_Id, string City_Desc, string City_Abbrv_Name, bool City_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Country_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Domesticreg_Id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(State_Prov_Id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(City_Id));
            if ((City_Desc == null)) {
                throw new global::System.ArgumentNullException("City_Desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(City_Desc));
            }
            if ((City_Abbrv_Name == null)) {
                throw new global::System.ArgumentNullException("City_Abbrv_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(City_Abbrv_Name));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(City_Status));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Country_Id, 
                    int Domesticreg_Id, 
                    int State_Prov_Id, 
                    int City_Id, 
                    string City_Desc, 
                    string City_Abbrv_Name, 
                    bool City_Status, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string hostname, 
                    int Original_Country_Id, 
                    int Original_Domesticreg_Id, 
                    int Original_State_Prov_Id, 
                    int Original_City_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Country_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Domesticreg_Id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(State_Prov_Id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(City_Id));
            if ((City_Desc == null)) {
                throw new global::System.ArgumentNullException("City_Desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(City_Desc));
            }
            if ((City_Abbrv_Name == null)) {
                throw new global::System.ArgumentNullException("City_Abbrv_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(City_Abbrv_Name));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(City_Status));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(hostname));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Country_Id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Domesticreg_Id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_State_Prov_Id));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_City_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string City_Desc, string City_Abbrv_Name, bool City_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string hostname, int Original_Country_Id, int Original_Domesticreg_Id, int Original_State_Prov_Id, int Original_City_Id) {
            return this.Update(Original_Country_Id, Original_Domesticreg_Id, Original_State_Prov_Id, Original_City_Id, City_Desc, City_Abbrv_Name, City_Status, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, hostname, Original_Country_Id, Original_Domesticreg_Id, Original_State_Prov_Id, Original_City_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_GLOBAL_COUNTRYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_GLOBAL_COUNTRYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_GLOBAL_COUNTRY";
            tableMapping.ColumnMappings.Add("Global_Country_Id", "Global_Country_Id");
            tableMapping.ColumnMappings.Add("Global_Country_Desc", "Global_Country_Desc");
            tableMapping.ColumnMappings.Add("Global_Country_Desc_EN", "Global_Country_Desc_EN");
            tableMapping.ColumnMappings.Add("Global_Country_Status", "Global_Country_Status");
            tableMapping.ColumnMappings.Add("Citizenship", "Citizenship");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("hostname", "hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_GLOBAL_COUNTRY] WHERE (([Global_Country_Id] = @Original_" +
                "Global_Country_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Global_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_GLOBAL_COUNTRY] ([Global_Country_Id], [Global_Country_Desc], [Global_Country_Desc_EN], [Global_Country_Status], [Citizenship], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [hostname]) VALUES (@Global_Country_Id, @Global_Country_Desc, @Global_Country_Desc_EN, @Global_Country_Status, @Citizenship, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Desc_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Desc_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Citizenship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Citizenship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_GLOBAL_COUNTRY] SET [Global_Country_Id] = @Global_Country_Id, [Global_Country_Desc] = @Global_Country_Desc, [Global_Country_Desc_EN] = @Global_Country_Desc_EN, [Global_Country_Status] = @Global_Country_Status, [Citizenship] = @Citizenship, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [hostname] = @hostname WHERE (([Global_Country_Id] = @Original_Global_Country_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Desc_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Desc_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Global_Country_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Citizenship", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Citizenship", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Global_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Global_Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Global_Country_Id, Global_Country_Desc, Global_Country_Desc_EN, Global_Cou" +
                "ntry_Status, Citizenship, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, host" +
                "name FROM Global.ST_GLOBAL_COUNTRY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_GLOBAL_COUNTRYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_GLOBAL_COUNTRYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_GLOBAL_COUNTRYDataTable dataTable = new POS_SiteDS.ST_GLOBAL_COUNTRYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_GLOBAL_COUNTRYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_GLOBAL_COUNTRY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Global_Country_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Global_Country_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Global_Country_Id, string Global_Country_Desc, string Global_Country_Desc_EN, bool Global_Country_Status, string Citizenship, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Global_Country_Id));
            if ((Global_Country_Desc == null)) {
                throw new global::System.ArgumentNullException("Global_Country_Desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Global_Country_Desc));
            }
            if ((Global_Country_Desc_EN == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Global_Country_Desc_EN));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(Global_Country_Status));
            if ((Citizenship == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Citizenship));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Global_Country_Id, string Global_Country_Desc, string Global_Country_Desc_EN, bool Global_Country_Status, string Citizenship, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string hostname, int Original_Global_Country_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Global_Country_Id));
            if ((Global_Country_Desc == null)) {
                throw new global::System.ArgumentNullException("Global_Country_Desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Global_Country_Desc));
            }
            if ((Global_Country_Desc_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Global_Country_Desc_EN));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(Global_Country_Status));
            if ((Citizenship == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Citizenship));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((hostname == null)) {
                throw new global::System.ArgumentNullException("hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(hostname));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Global_Country_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Global_Country_Desc, string Global_Country_Desc_EN, bool Global_Country_Status, string Citizenship, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string hostname, int Original_Global_Country_Id) {
            return this.Update(Original_Global_Country_Id, Global_Country_Desc, Global_Country_Desc_EN, Global_Country_Status, Citizenship, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, hostname, Original_Global_Country_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_VEHICLE_MAKETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_VEHICLE_MAKETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_VEHICLE_MAKE";
            tableMapping.ColumnMappings.Add("Make_Id", "Make_Id");
            tableMapping.ColumnMappings.Add("Make_Desc", "Make_Desc");
            tableMapping.ColumnMappings.Add("Make_Status", "Make_Status");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("Hostname", "Hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_VEHICLE_MAKE] WHERE (([Make_Id] = @Original_Make_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_VEHICLE_MAKE] ([Make_Id], [Make_Desc], [Make_Status], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [Hostname]) VALUES (@Make_Id, @Make_Desc, @Make_Status, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @Hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_VEHICLE_MAKE] SET [Make_Id] = @Make_Id, [Make_Desc] = @Make_Desc, [Make_Status] = @Make_Status, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [Hostname] = @Hostname WHERE (([Make_Id] = @Original_Make_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Make_Id, Make_Desc, Make_Status, Create_Date, Modi_Date, Create_UsrId, Mod" +
                "i_UsrId, Hostname FROM Global.ST_VEHICLE_MAKE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_VEHICLE_MAKEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_VEHICLE_MAKEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_VEHICLE_MAKEDataTable dataTable = new POS_SiteDS.ST_VEHICLE_MAKEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_VEHICLE_MAKEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_VEHICLE_MAKE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Make_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Make_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Make_Id, string Make_Desc, bool Make_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Make_Id));
            if ((Make_Desc == null)) {
                throw new global::System.ArgumentNullException("Make_Desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Make_Desc));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Make_Status));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Make_Id, string Make_Desc, bool Make_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Make_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Make_Id));
            if ((Make_Desc == null)) {
                throw new global::System.ArgumentNullException("Make_Desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Make_Desc));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Make_Status));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Hostname));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Make_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Make_Desc, bool Make_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Make_Id) {
            return this.Update(Original_Make_Id, Make_Desc, Make_Status, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname, Original_Make_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_VEHICLE_MODELTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_VEHICLE_MODELTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_VEHICLE_MODEL";
            tableMapping.ColumnMappings.Add("Make_Id", "Make_Id");
            tableMapping.ColumnMappings.Add("Model_Id", "Model_Id");
            tableMapping.ColumnMappings.Add("Vehicle_Type_Id", "Vehicle_Type_Id");
            tableMapping.ColumnMappings.Add("Model_Desc", "Model_Desc");
            tableMapping.ColumnMappings.Add("Vehicle_Model_status", "Vehicle_Model_status");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("Hostname", "Hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_VEHICLE_MODEL] WHERE (([Make_Id] = @Original_Make_Id) AN" +
                "D ([Model_Id] = @Original_Model_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_VEHICLE_MODEL] ([Make_Id], [Model_Id], [Vehicle_Type_Id], [Model_Desc], [Vehicle_Model_status], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [Hostname]) VALUES (@Make_Id, @Model_Id, @Vehicle_Type_Id, @Model_Desc, @Vehicle_Model_status, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @Hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Model_status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Model_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_VEHICLE_MODEL] SET [Make_Id] = @Make_Id, [Model_Id] = @Model_Id, [Vehicle_Type_Id] = @Vehicle_Type_Id, [Model_Desc] = @Model_Desc, [Vehicle_Model_status] = @Vehicle_Model_status, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [Hostname] = @Hostname WHERE (([Make_Id] = @Original_Make_Id) AND ([Model_Id] = @Original_Model_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Model_status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Model_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Make_Id, Model_Id, Vehicle_Type_Id, Model_Desc, Vehicle_Model_status, Crea" +
                "te_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname FROM Global.ST_VEHICLE_MO" +
                "DEL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_VEHICLE_MODELDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_VEHICLE_MODELDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_VEHICLE_MODELDataTable dataTable = new POS_SiteDS.ST_VEHICLE_MODELDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_VEHICLE_MODELDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_VEHICLE_MODEL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Make_Id, int Original_Model_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Make_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Model_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Make_Id, int Model_Id, int Vehicle_Type_Id, string Model_Desc, bool Vehicle_Model_status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Make_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Model_Id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Vehicle_Type_Id));
            if ((Model_Desc == null)) {
                throw new global::System.ArgumentNullException("Model_Desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Model_Desc));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Vehicle_Model_status));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Make_Id, int Model_Id, int Vehicle_Type_Id, string Model_Desc, bool Vehicle_Model_status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Make_Id, int Original_Model_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Make_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Model_Id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Vehicle_Type_Id));
            if ((Model_Desc == null)) {
                throw new global::System.ArgumentNullException("Model_Desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Model_Desc));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Vehicle_Model_status));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Hostname));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Make_Id));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Model_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Vehicle_Type_Id, string Model_Desc, bool Vehicle_Model_status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Make_Id, int Original_Model_Id) {
            return this.Update(Original_Make_Id, Original_Model_Id, Vehicle_Type_Id, Model_Desc, Vehicle_Model_status, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname, Original_Make_Id, Original_Model_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_VEHICLE_STOREDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_VEHICLE_STOREDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_VEHICLE_STORED";
            tableMapping.ColumnMappings.Add("Stored_Id", "Stored_Id");
            tableMapping.ColumnMappings.Add("Stored_Desc", "Stored_Desc");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("Hostname", "Hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_VEHICLE_STORED] WHERE (([Stored_Id] = @Original_Stored_I" +
                "d))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stored_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stored_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Global].[ST_VEHICLE_STORED] ([Stored_Id], [Stored_Desc], [Create_Dat" +
                "e], [Modi_Date], [Create_UsrId], [Modi_UsrId], [Hostname]) VALUES (@Stored_Id, @" +
                "Stored_Desc, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @Hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stored_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stored_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stored_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stored_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_VEHICLE_STORED] SET [Stored_Id] = @Stored_Id, [Stored_Desc] = @Stored_Desc, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [Hostname] = @Hostname WHERE (([Stored_Id] = @Original_Stored_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stored_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stored_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stored_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stored_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Stored_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stored_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Stored_Id, Stored_Desc, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, " +
                "Hostname FROM Global.ST_VEHICLE_STORED";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_VEHICLE_STOREDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_VEHICLE_STOREDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_VEHICLE_STOREDDataTable dataTable = new POS_SiteDS.ST_VEHICLE_STOREDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_VEHICLE_STOREDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_VEHICLE_STORED");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Stored_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Stored_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Stored_Id, string Stored_Desc, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Stored_Id));
            if ((Stored_Desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Stored_Desc));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Stored_Id, string Stored_Desc, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Stored_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Stored_Id));
            if ((Stored_Desc == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Stored_Desc));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Hostname));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Stored_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Stored_Desc, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Stored_Id) {
            return this.Update(Original_Stored_Id, Stored_Desc, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname, Original_Stored_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_VEHICLE_TYPETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_VEHICLE_TYPETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_VEHICLE_TYPE";
            tableMapping.ColumnMappings.Add("Vehicle_Type_Id", "Vehicle_Type_Id");
            tableMapping.ColumnMappings.Add("Vehicle_Type_Desc", "Vehicle_Type_Desc");
            tableMapping.ColumnMappings.Add("Vehicle_Type_Status", "Vehicle_Type_Status");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("Hostname", "Hostname");
            tableMapping.ColumnMappings.Add("namekey", "namekey");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_VEHICLE_TYPE] WHERE (([Vehicle_Type_Id] = @Original_Vehi" +
                "cle_Type_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_VEHICLE_TYPE] ([Vehicle_Type_Id], [Vehicle_Type_Desc], [Vehicle_Type_Status], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [Hostname], [namekey]) VALUES (@Vehicle_Type_Id, @Vehicle_Type_Desc, @Vehicle_Type_Status, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @Hostname, @namekey)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@namekey", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "namekey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_VEHICLE_TYPE] SET [Vehicle_Type_Id] = @Vehicle_Type_Id, [Vehicle_Type_Desc] = @Vehicle_Type_Desc, [Vehicle_Type_Status] = @Vehicle_Type_Status, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [Hostname] = @Hostname, [namekey] = @namekey WHERE (([Vehicle_Type_Id] = @Original_Vehicle_Type_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@namekey", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "namekey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Vehicle_Type_Id, Vehicle_Type_Desc, Vehicle_Type_Status, Create_Date, Modi" +
                "_Date, Create_UsrId, Modi_UsrId, Hostname, namekey FROM Global.ST_VEHICLE_TYPE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_VEHICLE_TYPEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_VEHICLE_TYPEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_VEHICLE_TYPEDataTable dataTable = new POS_SiteDS.ST_VEHICLE_TYPEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_VEHICLE_TYPEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_VEHICLE_TYPE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Vehicle_Type_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Vehicle_Type_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Vehicle_Type_Id, string Vehicle_Type_Desc, bool Vehicle_Type_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, string namekey) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Vehicle_Type_Id));
            if ((Vehicle_Type_Desc == null)) {
                throw new global::System.ArgumentNullException("Vehicle_Type_Desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Vehicle_Type_Desc));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Vehicle_Type_Status));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Hostname));
            }
            if ((namekey == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(namekey));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Vehicle_Type_Id, string Vehicle_Type_Desc, bool Vehicle_Type_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, string namekey, int Original_Vehicle_Type_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Vehicle_Type_Id));
            if ((Vehicle_Type_Desc == null)) {
                throw new global::System.ArgumentNullException("Vehicle_Type_Desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Vehicle_Type_Desc));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Vehicle_Type_Status));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Hostname));
            }
            if ((namekey == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(namekey));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Vehicle_Type_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Vehicle_Type_Desc, bool Vehicle_Type_Status, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, string namekey, int Original_Vehicle_Type_Id) {
            return this.Update(Original_Vehicle_Type_Id, Vehicle_Type_Desc, Vehicle_Type_Status, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname, namekey, Original_Vehicle_Type_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_VEHICLE_TYPE_PRODUCTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_VEHICLE_TYPE_PRODUCTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_VEHICLE_TYPE_PRODUCT";
            tableMapping.ColumnMappings.Add("Corp_Id", "Corp_Id");
            tableMapping.ColumnMappings.Add("Region_Id", "Region_Id");
            tableMapping.ColumnMappings.Add("Country_Id", "Country_Id");
            tableMapping.ColumnMappings.Add("Bl_Type_Id", "Bl_Type_Id");
            tableMapping.ColumnMappings.Add("Bl_Id", "Bl_Id");
            tableMapping.ColumnMappings.Add("Product_Id", "Product_Id");
            tableMapping.ColumnMappings.Add("Vehicle_Type_Id", "Vehicle_Type_Id");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("Hostname", "Hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Global].[ST_VEHICLE_TYPE_PRODUCT] WHERE (([Corp_Id] = @Original_Corp_Id) AND ([Region_Id] = @Original_Region_Id) AND ([Country_Id] = @Original_Country_Id) AND ([Bl_Type_Id] = @Original_Bl_Type_Id) AND ([Bl_Id] = @Original_Bl_Id) AND ([Product_Id] = @Original_Product_Id) AND ([Vehicle_Type_Id] = @Original_Vehicle_Type_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bl_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Type_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bl_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Product_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Product_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_VEHICLE_TYPE_PRODUCT] ([Corp_Id], [Region_Id], [Country_Id], [Bl_Type_Id], [Bl_Id], [Product_Id], [Vehicle_Type_Id], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [Hostname]) VALUES (@Corp_Id, @Region_Id, @Country_Id, @Bl_Type_Id, @Bl_Id, @Product_Id, @Vehicle_Type_Id, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @Hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bl_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bl_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Product_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_VEHICLE_TYPE_PRODUCT] SET [Corp_Id] = @Corp_Id, [Region_Id] = @Region_Id, [Country_Id] = @Country_Id, [Bl_Type_Id] = @Bl_Type_Id, [Bl_Id] = @Bl_Id, [Product_Id] = @Product_Id, [Vehicle_Type_Id] = @Vehicle_Type_Id, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [Hostname] = @Hostname WHERE (([Corp_Id] = @Original_Corp_Id) AND ([Region_Id] = @Original_Region_Id) AND ([Country_Id] = @Original_Country_Id) AND ([Bl_Type_Id] = @Original_Bl_Type_Id) AND ([Bl_Id] = @Original_Bl_Id) AND ([Product_Id] = @Original_Product_Id) AND ([Vehicle_Type_Id] = @Original_Vehicle_Type_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bl_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bl_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Product_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Product_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Corp_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Corp_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Country_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bl_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Type_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bl_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bl_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Product_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Product_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Corp_Id, Region_Id, Country_Id, Bl_Type_Id, Bl_Id, Product_Id, Vehicle_Typ" +
                "e_Id, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname FROM Global.ST_" +
                "VEHICLE_TYPE_PRODUCT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_VEHICLE_TYPE_PRODUCTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_VEHICLE_TYPE_PRODUCTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_VEHICLE_TYPE_PRODUCTDataTable dataTable = new POS_SiteDS.ST_VEHICLE_TYPE_PRODUCTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_VEHICLE_TYPE_PRODUCTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_VEHICLE_TYPE_PRODUCT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Corp_Id, int Original_Region_Id, int Original_Country_Id, int Original_Bl_Type_Id, int Original_Bl_Id, int Original_Product_Id, int Original_Vehicle_Type_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Corp_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Region_Id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Country_Id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Bl_Type_Id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Bl_Id));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Product_Id));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Vehicle_Type_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Corp_Id, int Region_Id, int Country_Id, int Bl_Type_Id, int Bl_Id, int Product_Id, int Vehicle_Type_Id, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Corp_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Region_Id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Country_Id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Bl_Type_Id));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Bl_Id));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Product_Id));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Vehicle_Type_Id));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Corp_Id, 
                    int Region_Id, 
                    int Country_Id, 
                    int Bl_Type_Id, 
                    int Bl_Id, 
                    int Product_Id, 
                    int Vehicle_Type_Id, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string Hostname, 
                    int Original_Corp_Id, 
                    int Original_Region_Id, 
                    int Original_Country_Id, 
                    int Original_Bl_Type_Id, 
                    int Original_Bl_Id, 
                    int Original_Product_Id, 
                    int Original_Vehicle_Type_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Corp_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Region_Id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Country_Id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Bl_Type_Id));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Bl_Id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Product_Id));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Vehicle_Type_Id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Hostname));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Corp_Id));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Region_Id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Country_Id));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Bl_Type_Id));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Bl_Id));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Product_Id));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Vehicle_Type_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Corp_Id, int Original_Region_Id, int Original_Country_Id, int Original_Bl_Type_Id, int Original_Bl_Id, int Original_Product_Id, int Original_Vehicle_Type_Id) {
            return this.Update(Original_Corp_Id, Original_Region_Id, Original_Country_Id, Original_Bl_Type_Id, Original_Bl_Id, Original_Product_Id, Original_Vehicle_Type_Id, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname, Original_Corp_Id, Original_Region_Id, Original_Country_Id, Original_Bl_Type_Id, Original_Bl_Id, Original_Product_Id, Original_Vehicle_Type_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_VEHICLE_USAGETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_VEHICLE_USAGETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_VEHICLE_USAGE";
            tableMapping.ColumnMappings.Add("Usage_Id", "Usage_Id");
            tableMapping.ColumnMappings.Add("Usage_Desc", "Usage_Desc");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("Hostname", "Hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_VEHICLE_USAGE] WHERE (([Usage_Id] = @Original_Usage_Id))" +
                "";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usage_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Usage_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Global].[ST_VEHICLE_USAGE] ([Usage_Desc], [Create_Date], [Modi_Date]" +
                ", [Create_UsrId], [Modi_UsrId], [Hostname]) VALUES (@Usage_Desc, @Create_Date, @" +
                "Modi_Date, @Create_UsrId, @Modi_UsrId, @Hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usage_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Usage_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Global].[ST_VEHICLE_USAGE] SET [Usage_Desc] = @Usage_Desc, [Create_Date] " +
                "= @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_" +
                "UsrId] = @Modi_UsrId, [Hostname] = @Hostname WHERE (([Usage_Id] = @Original_Usag" +
                "e_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Usage_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Usage_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Usage_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Usage_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Usage_Id, Usage_Desc, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Ho" +
                "stname FROM Global.ST_VEHICLE_USAGE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_VEHICLE_USAGEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_VEHICLE_USAGEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_VEHICLE_USAGEDataTable dataTable = new POS_SiteDS.ST_VEHICLE_USAGEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_VEHICLE_USAGEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_VEHICLE_USAGE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Usage_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Usage_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Usage_Desc, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname) {
            if ((Usage_Desc == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Usage_Desc));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Usage_Desc, System.DateTime Create_Date, global::System.Nullable<global::System.DateTime> Modi_Date, int Create_UsrId, global::System.Nullable<int> Modi_UsrId, string Hostname, int Original_Usage_Id) {
            if ((Usage_Desc == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Usage_Desc));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Hostname));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Usage_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ST_VEHICLE_VERSIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ST_VEHICLE_VERSIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ST_VEHICLE_VERSION";
            tableMapping.ColumnMappings.Add("Make_Id", "Make_Id");
            tableMapping.ColumnMappings.Add("Model_Id", "Model_Id");
            tableMapping.ColumnMappings.Add("Version_Id", "Version_Id");
            tableMapping.ColumnMappings.Add("Vehicle_Type_Id", "Vehicle_Type_Id");
            tableMapping.ColumnMappings.Add("Version_Desc", "Version_Desc");
            tableMapping.ColumnMappings.Add("Model_Year", "Model_Year");
            tableMapping.ColumnMappings.Add("Body_Style", "Body_Style");
            tableMapping.ColumnMappings.Add("Cylinder", "Cylinder");
            tableMapping.ColumnMappings.Add("Engine_Type", "Engine_Type");
            tableMapping.ColumnMappings.Add("Engine_RPM", "Engine_RPM");
            tableMapping.ColumnMappings.Add("Fuel_Int", "Fuel_Int");
            tableMapping.ColumnMappings.Add("Co2_Emissions", "Co2_Emissions");
            tableMapping.ColumnMappings.Add("Top_Speed_Kph", "Top_Speed_Kph");
            tableMapping.ColumnMappings.Add("Drive_Type", "Drive_Type");
            tableMapping.ColumnMappings.Add("Transmission_Type", "Transmission_Type");
            tableMapping.ColumnMappings.Add("Seats", "Seats");
            tableMapping.ColumnMappings.Add("Doors", "Doors");
            tableMapping.ColumnMappings.Add("Weight_Kg", "Weight_Kg");
            tableMapping.ColumnMappings.Add("Sold_In_USA", "Sold_In_USA");
            tableMapping.ColumnMappings.Add("Load_Capacity_Tons", "Load_Capacity_Tons");
            tableMapping.ColumnMappings.Add("Load_Capacity_Pound", "Load_Capacity_Pound");
            tableMapping.ColumnMappings.Add("HP", "HP");
            tableMapping.ColumnMappings.Add("LT_CubicCentimeter", "LT_CubicCentimeter");
            tableMapping.ColumnMappings.Add("Version_Status", "Version_Status");
            tableMapping.ColumnMappings.Add("Valor_Referencia_Dgii", "Valor_Referencia_Dgii");
            tableMapping.ColumnMappings.Add("Create_Date", "Create_Date");
            tableMapping.ColumnMappings.Add("Modi_Date", "Modi_Date");
            tableMapping.ColumnMappings.Add("Create_UsrId", "Create_UsrId");
            tableMapping.ColumnMappings.Add("Modi_UsrId", "Modi_UsrId");
            tableMapping.ColumnMappings.Add("Hostname", "Hostname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Global].[ST_VEHICLE_VERSION] WHERE (([Make_Id] = @Original_Make_Id) " +
                "AND ([Model_Id] = @Original_Model_Id) AND ([Version_Id] = @Original_Version_Id))" +
                "";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Version_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Global].[ST_VEHICLE_VERSION] ([Make_Id], [Model_Id], [Version_Id], [Vehicle_Type_Id], [Version_Desc], [Model_Year], [Body_Style], [Cylinder], [Engine_Type], [Engine_RPM], [Fuel_Int], [Co2_Emissions], [Top_Speed_Kph], [Drive_Type], [Transmission_Type], [Seats], [Doors], [Weight_Kg], [Sold_In_USA], [Load_Capacity_Tons], [Load_Capacity_Pound], [HP], [LT_CubicCentimeter], [Version_Status], [Valor_Referencia_Dgii], [Create_Date], [Modi_Date], [Create_UsrId], [Modi_UsrId], [Hostname]) VALUES (@Make_Id, @Model_Id, @Version_Id, @Vehicle_Type_Id, @Version_Desc, @Model_Year, @Body_Style, @Cylinder, @Engine_Type, @Engine_RPM, @Fuel_Int, @Co2_Emissions, @Top_Speed_Kph, @Drive_Type, @Transmission_Type, @Seats, @Doors, @Weight_Kg, @Sold_In_USA, @Load_Capacity_Tons, @Load_Capacity_Pound, @HP, @LT_CubicCentimeter, @Version_Status, @Valor_Referencia_Dgii, @Create_Date, @Modi_Date, @Create_UsrId, @Modi_UsrId, @Hostname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Body_Style", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Body_Style", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cylinder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cylinder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Engine_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engine_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Engine_RPM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engine_RPM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fuel_Int", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fuel_Int", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Co2_Emissions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Co2_Emissions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Top_Speed_Kph", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Top_Speed_Kph", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drive_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drive_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transmission_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transmission_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Seats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Seats", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Doors", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Doors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight_Kg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight_Kg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sold_In_USA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold_In_USA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Load_Capacity_Tons", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "Load_Capacity_Tons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Load_Capacity_Pound", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "Load_Capacity_Pound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LT_CubicCentimeter", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "LT_CubicCentimeter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valor_Referencia_Dgii", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Valor_Referencia_Dgii", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Global].[ST_VEHICLE_VERSION] SET [Make_Id] = @Make_Id, [Model_Id] = @Model_Id, [Version_Id] = @Version_Id, [Vehicle_Type_Id] = @Vehicle_Type_Id, [Version_Desc] = @Version_Desc, [Model_Year] = @Model_Year, [Body_Style] = @Body_Style, [Cylinder] = @Cylinder, [Engine_Type] = @Engine_Type, [Engine_RPM] = @Engine_RPM, [Fuel_Int] = @Fuel_Int, [Co2_Emissions] = @Co2_Emissions, [Top_Speed_Kph] = @Top_Speed_Kph, [Drive_Type] = @Drive_Type, [Transmission_Type] = @Transmission_Type, [Seats] = @Seats, [Doors] = @Doors, [Weight_Kg] = @Weight_Kg, [Sold_In_USA] = @Sold_In_USA, [Load_Capacity_Tons] = @Load_Capacity_Tons, [Load_Capacity_Pound] = @Load_Capacity_Pound, [HP] = @HP, [LT_CubicCentimeter] = @LT_CubicCentimeter, [Version_Status] = @Version_Status, [Valor_Referencia_Dgii] = @Valor_Referencia_Dgii, [Create_Date] = @Create_Date, [Modi_Date] = @Modi_Date, [Create_UsrId] = @Create_UsrId, [Modi_UsrId] = @Modi_UsrId, [Hostname] = @Hostname WHERE (([Make_Id] = @Original_Make_Id) AND ([Model_Id] = @Original_Model_Id) AND ([Version_Id] = @Original_Version_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_Type_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_Type_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Model_Year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Body_Style", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Body_Style", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cylinder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cylinder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Engine_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engine_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Engine_RPM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Engine_RPM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fuel_Int", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fuel_Int", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Co2_Emissions", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Co2_Emissions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Top_Speed_Kph", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Top_Speed_Kph", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Drive_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Drive_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transmission_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transmission_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Seats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Seats", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Doors", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Doors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight_Kg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight_Kg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sold_In_USA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sold_In_USA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Load_Capacity_Tons", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "Load_Capacity_Tons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Load_Capacity_Pound", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "Load_Capacity_Pound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LT_CubicCentimeter", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 8, 2, "LT_CubicCentimeter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Version_Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valor_Referencia_Dgii", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Valor_Referencia_Dgii", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Create_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Create_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Modi_UsrId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Modi_UsrId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hostname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hostname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Make_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Make_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Model_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Model_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Version_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Version_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Make_Id, Model_Id, Version_Id, Vehicle_Type_Id, Version_Desc, Model_Year, Body_Style, Cylinder, Engine_Type, Engine_RPM, Fuel_Int, Co2_Emissions, Top_Speed_Kph, Drive_Type, Transmission_Type, Seats, Doors, Weight_Kg, Sold_In_USA, Load_Capacity_Tons, Load_Capacity_Pound, HP, LT_CubicCentimeter, Version_Status, Valor_Referencia_Dgii, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname FROM Global.ST_VEHICLE_VERSION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.ST_VEHICLE_VERSIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.ST_VEHICLE_VERSIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.ST_VEHICLE_VERSIONDataTable dataTable = new POS_SiteDS.ST_VEHICLE_VERSIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.ST_VEHICLE_VERSIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "ST_VEHICLE_VERSION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Make_Id, int Original_Model_Id, int Original_Version_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Make_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Model_Id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Version_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Make_Id, 
                    int Model_Id, 
                    int Version_Id, 
                    int Vehicle_Type_Id, 
                    string Version_Desc, 
                    global::System.Nullable<int> Model_Year, 
                    string Body_Style, 
                    int Cylinder, 
                    string Engine_Type, 
                    string Engine_RPM, 
                    int Fuel_Int, 
                    string Co2_Emissions, 
                    string Top_Speed_Kph, 
                    string Drive_Type, 
                    string Transmission_Type, 
                    int Seats, 
                    string Doors, 
                    global::System.Nullable<int> Weight_Kg, 
                    global::System.Nullable<bool> Sold_In_USA, 
                    global::System.Nullable<decimal> Load_Capacity_Tons, 
                    global::System.Nullable<decimal> Load_Capacity_Pound, 
                    global::System.Nullable<int> HP, 
                    global::System.Nullable<decimal> LT_CubicCentimeter, 
                    bool Version_Status, 
                    global::System.Nullable<decimal> Valor_Referencia_Dgii, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string Hostname) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Make_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Model_Id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Version_Id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Vehicle_Type_Id));
            if ((Version_Desc == null)) {
                throw new global::System.ArgumentNullException("Version_Desc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Version_Desc));
            }
            if ((Model_Year.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Model_Year.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Body_Style == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Body_Style));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Cylinder));
            if ((Engine_Type == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Engine_Type));
            }
            if ((Engine_RPM == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Engine_RPM));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Fuel_Int));
            if ((Co2_Emissions == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Co2_Emissions));
            }
            if ((Top_Speed_Kph == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Top_Speed_Kph));
            }
            if ((Drive_Type == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Drive_Type));
            }
            if ((Transmission_Type == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Transmission_Type));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Seats));
            if ((Doors == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Doors));
            }
            if ((Weight_Kg.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Weight_Kg.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Sold_In_USA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(Sold_In_USA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Load_Capacity_Tons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(Load_Capacity_Tons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Load_Capacity_Pound.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(Load_Capacity_Pound.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((HP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(HP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LT_CubicCentimeter.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(LT_CubicCentimeter.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(Version_Status));
            if ((Valor_Referencia_Dgii.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(Valor_Referencia_Dgii.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Hostname));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Make_Id, 
                    int Model_Id, 
                    int Version_Id, 
                    int Vehicle_Type_Id, 
                    string Version_Desc, 
                    global::System.Nullable<int> Model_Year, 
                    string Body_Style, 
                    int Cylinder, 
                    string Engine_Type, 
                    string Engine_RPM, 
                    int Fuel_Int, 
                    string Co2_Emissions, 
                    string Top_Speed_Kph, 
                    string Drive_Type, 
                    string Transmission_Type, 
                    int Seats, 
                    string Doors, 
                    global::System.Nullable<int> Weight_Kg, 
                    global::System.Nullable<bool> Sold_In_USA, 
                    global::System.Nullable<decimal> Load_Capacity_Tons, 
                    global::System.Nullable<decimal> Load_Capacity_Pound, 
                    global::System.Nullable<int> HP, 
                    global::System.Nullable<decimal> LT_CubicCentimeter, 
                    bool Version_Status, 
                    global::System.Nullable<decimal> Valor_Referencia_Dgii, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string Hostname, 
                    int Original_Make_Id, 
                    int Original_Model_Id, 
                    int Original_Version_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Make_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Model_Id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Version_Id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Vehicle_Type_Id));
            if ((Version_Desc == null)) {
                throw new global::System.ArgumentNullException("Version_Desc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Version_Desc));
            }
            if ((Model_Year.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Model_Year.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Body_Style == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Body_Style));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Cylinder));
            if ((Engine_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Engine_Type));
            }
            if ((Engine_RPM == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Engine_RPM));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Fuel_Int));
            if ((Co2_Emissions == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Co2_Emissions));
            }
            if ((Top_Speed_Kph == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Top_Speed_Kph));
            }
            if ((Drive_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Drive_Type));
            }
            if ((Transmission_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Transmission_Type));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Seats));
            if ((Doors == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Doors));
            }
            if ((Weight_Kg.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Weight_Kg.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Sold_In_USA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Sold_In_USA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Load_Capacity_Tons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Load_Capacity_Tons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Load_Capacity_Pound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Load_Capacity_Pound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((HP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(HP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LT_CubicCentimeter.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(LT_CubicCentimeter.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Version_Status));
            if ((Valor_Referencia_Dgii.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Valor_Referencia_Dgii.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Create_Date));
            if ((Modi_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Modi_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Create_UsrId));
            if ((Modi_UsrId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Modi_UsrId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Hostname == null)) {
                throw new global::System.ArgumentNullException("Hostname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Hostname));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_Make_Id));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_Model_Id));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_Version_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Vehicle_Type_Id, 
                    string Version_Desc, 
                    global::System.Nullable<int> Model_Year, 
                    string Body_Style, 
                    int Cylinder, 
                    string Engine_Type, 
                    string Engine_RPM, 
                    int Fuel_Int, 
                    string Co2_Emissions, 
                    string Top_Speed_Kph, 
                    string Drive_Type, 
                    string Transmission_Type, 
                    int Seats, 
                    string Doors, 
                    global::System.Nullable<int> Weight_Kg, 
                    global::System.Nullable<bool> Sold_In_USA, 
                    global::System.Nullable<decimal> Load_Capacity_Tons, 
                    global::System.Nullable<decimal> Load_Capacity_Pound, 
                    global::System.Nullable<int> HP, 
                    global::System.Nullable<decimal> LT_CubicCentimeter, 
                    bool Version_Status, 
                    global::System.Nullable<decimal> Valor_Referencia_Dgii, 
                    System.DateTime Create_Date, 
                    global::System.Nullable<global::System.DateTime> Modi_Date, 
                    int Create_UsrId, 
                    global::System.Nullable<int> Modi_UsrId, 
                    string Hostname, 
                    int Original_Make_Id, 
                    int Original_Model_Id, 
                    int Original_Version_Id) {
            return this.Update(Original_Make_Id, Original_Model_Id, Original_Version_Id, Vehicle_Type_Id, Version_Desc, Model_Year, Body_Style, Cylinder, Engine_Type, Engine_RPM, Fuel_Int, Co2_Emissions, Top_Speed_Kph, Drive_Type, Transmission_Type, Seats, Doors, Weight_Kg, Sold_In_USA, Load_Capacity_Tons, Load_Capacity_Pound, HP, LT_CubicCentimeter, Version_Status, Valor_Referencia_Dgii, Create_Date, Modi_Date, Create_UsrId, Modi_UsrId, Hostname, Original_Make_Id, Original_Model_Id, Original_Version_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TERM_TYPESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TERM_TYPESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TERM_TYPES";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("TimesPanInMonths", "TimesPanInMonths");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [POS].[TERM_TYPES] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [POS].[TERM_TYPES] ([Name], [TimesPanInMonths]) VALUES (@Name, @Times" +
                "PanInMonths)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimesPanInMonths", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesPanInMonths", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [POS].[TERM_TYPES] SET [Name] = @Name, [TimesPanInMonths] = @TimesPanInMon" +
                "ths WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimesPanInMonths", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimesPanInMonths", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Name, TimesPanInMonths FROM POS.TERM_TYPES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.TERM_TYPESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.TERM_TYPESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.TERM_TYPESDataTable dataTable = new POS_SiteDS.TERM_TYPESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.TERM_TYPESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "TERM_TYPES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Name, global::System.Nullable<int> TimesPanInMonths) {
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((TimesPanInMonths.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(TimesPanInMonths.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, global::System.Nullable<int> TimesPanInMonths, int Original_Id) {
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((TimesPanInMonths.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(TimesPanInMonths.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VEHICLE_PRODUCTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VEHICLE_PRODUCTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VEHICLE_PRODUCT";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("MakeId", "MakeId");
            tableMapping.ColumnMappings.Add("ModelId", "ModelId");
            tableMapping.ColumnMappings.Add("VersionId", "VersionId");
            tableMapping.ColumnMappings.Add("QuotationId", "QuotationId");
            tableMapping.ColumnMappings.Add("DriverId", "DriverId");
            tableMapping.ColumnMappings.Add("UsageId", "UsageId");
            tableMapping.ColumnMappings.Add("StoredId", "StoredId");
            tableMapping.ColumnMappings.Add("Chassis", "Chassis");
            tableMapping.ColumnMappings.Add("Plate", "Plate");
            tableMapping.ColumnMappings.Add("Color", "Color");
            tableMapping.ColumnMappings.Add("VehiclePrice", "VehiclePrice");
            tableMapping.ColumnMappings.Add("EnsuredAmount", "EnsuredAmount");
            tableMapping.ColumnMappings.Add("PercentageToEnsure", "PercentageToEnsure");
            tableMapping.ColumnMappings.Add("OthersPropertyLimits", "OthersPropertyLimits");
            tableMapping.ColumnMappings.Add("OnePersonDeathLimits", "OnePersonDeathLimits");
            tableMapping.ColumnMappings.Add("AnotherPersonDeathLimits", "AnotherPersonDeathLimits");
            tableMapping.ColumnMappings.Add("PassengerDeathLimits", "PassengerDeathLimits");
            tableMapping.ColumnMappings.Add("AnotherPassengerDeathLimits", "AnotherPassengerDeathLimits");
            tableMapping.ColumnMappings.Add("BailLimits", "BailLimits");
            tableMapping.ColumnMappings.Add("DriverRiskLimits", "DriverRiskLimits");
            tableMapping.ColumnMappings.Add("CollisionRolloverLimits", "CollisionRolloverLimits");
            tableMapping.ColumnMappings.Add("FireTheftLimits", "FireTheftLimits");
            tableMapping.ColumnMappings.Add("ComprehensiveRiskLimits", "ComprehensiveRiskLimits");
            tableMapping.ColumnMappings.Add("GlassBreakageLimits", "GlassBreakageLimits");
            tableMapping.ColumnMappings.Add("SpecialEquipmentLimits", "SpecialEquipmentLimits");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [POS].[VEHICLE_PRODUCT] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [POS].[VEHICLE_PRODUCT] ([MakeId], [ModelId], [VersionId], [QuotationId], [DriverId], [UsageId], [StoredId], [Chassis], [Plate], [Color], [VehiclePrice], [EnsuredAmount], [PercentageToEnsure], [OthersPropertyLimits], [OnePersonDeathLimits], [AnotherPersonDeathLimits], [PassengerDeathLimits], [AnotherPassengerDeathLimits], [BailLimits], [DriverRiskLimits], [CollisionRolloverLimits], [FireTheftLimits], [ComprehensiveRiskLimits], [GlassBreakageLimits], [SpecialEquipmentLimits]) VALUES (@MakeId, @ModelId, @VersionId, @QuotationId, @DriverId, @UsageId, @StoredId, @Chassis, @Plate, @Color, @VehiclePrice, @EnsuredAmount, @PercentageToEnsure, @OthersPropertyLimits, @OnePersonDeathLimits, @AnotherPersonDeathLimits, @PassengerDeathLimits, @AnotherPassengerDeathLimits, @BailLimits, @DriverRiskLimits, @CollisionRolloverLimits, @FireTheftLimits, @ComprehensiveRiskLimits, @GlassBreakageLimits, @SpecialEquipmentLimits)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MakeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MakeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModelId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModelId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VersionId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VersionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsageId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UsageId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StoredId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StoredId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chassis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chassis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehiclePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VehiclePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnsuredAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EnsuredAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageToEnsure", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "PercentageToEnsure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OthersPropertyLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OthersPropertyLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnePersonDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnePersonDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPersonDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPersonDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassengerDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPassengerDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPassengerDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BailLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BailLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverRiskLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverRiskLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CollisionRolloverLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CollisionRolloverLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FireTheftLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FireTheftLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComprehensiveRiskLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComprehensiveRiskLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlassBreakageLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlassBreakageLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialEquipmentLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialEquipmentLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [POS].[VEHICLE_PRODUCT] SET [MakeId] = @MakeId, [ModelId] = @ModelId, [VersionId] = @VersionId, [QuotationId] = @QuotationId, [DriverId] = @DriverId, [UsageId] = @UsageId, [StoredId] = @StoredId, [Chassis] = @Chassis, [Plate] = @Plate, [Color] = @Color, [VehiclePrice] = @VehiclePrice, [EnsuredAmount] = @EnsuredAmount, [PercentageToEnsure] = @PercentageToEnsure, [OthersPropertyLimits] = @OthersPropertyLimits, [OnePersonDeathLimits] = @OnePersonDeathLimits, [AnotherPersonDeathLimits] = @AnotherPersonDeathLimits, [PassengerDeathLimits] = @PassengerDeathLimits, [AnotherPassengerDeathLimits] = @AnotherPassengerDeathLimits, [BailLimits] = @BailLimits, [DriverRiskLimits] = @DriverRiskLimits, [CollisionRolloverLimits] = @CollisionRolloverLimits, [FireTheftLimits] = @FireTheftLimits, [ComprehensiveRiskLimits] = @ComprehensiveRiskLimits, [GlassBreakageLimits] = @GlassBreakageLimits, [SpecialEquipmentLimits] = @SpecialEquipmentLimits WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MakeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MakeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModelId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModelId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VersionId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VersionId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UsageId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UsageId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StoredId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StoredId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Chassis", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Chassis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Color", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehiclePrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VehiclePrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnsuredAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EnsuredAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PercentageToEnsure", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "PercentageToEnsure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OthersPropertyLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OthersPropertyLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnePersonDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnePersonDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPersonDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPersonDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassengerDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnotherPassengerDeathLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnotherPassengerDeathLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BailLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BailLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverRiskLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverRiskLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CollisionRolloverLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CollisionRolloverLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FireTheftLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FireTheftLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComprehensiveRiskLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ComprehensiveRiskLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GlassBreakageLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GlassBreakageLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialEquipmentLimits", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialEquipmentLimits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PosModel"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, MakeId, ModelId, VersionId, QuotationId, DriverId, UsageId, StoredId, Chassis, Plate, Color, VehiclePrice, EnsuredAmount, PercentageToEnsure, OthersPropertyLimits, OnePersonDeathLimits, AnotherPersonDeathLimits, PassengerDeathLimits, AnotherPassengerDeathLimits, BailLimits, DriverRiskLimits, CollisionRolloverLimits, FireTheftLimits, ComprehensiveRiskLimits, GlassBreakageLimits, SpecialEquipmentLimits FROM POS.VEHICLE_PRODUCT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(POS_SiteDS.VEHICLE_PRODUCTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual POS_SiteDS.VEHICLE_PRODUCTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            POS_SiteDS.VEHICLE_PRODUCTDataTable dataTable = new POS_SiteDS.VEHICLE_PRODUCTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS.VEHICLE_PRODUCTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(POS_SiteDS dataSet) {
            return this.Adapter.Update(dataSet, "VEHICLE_PRODUCT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int MakeId, 
                    int ModelId, 
                    int VersionId, 
                    int QuotationId, 
                    int DriverId, 
                    int UsageId, 
                    int StoredId, 
                    string Chassis, 
                    string Plate, 
                    string Color, 
                    decimal VehiclePrice, 
                    decimal EnsuredAmount, 
                    global::System.Nullable<decimal> PercentageToEnsure, 
                    string OthersPropertyLimits, 
                    string OnePersonDeathLimits, 
                    string AnotherPersonDeathLimits, 
                    string PassengerDeathLimits, 
                    string AnotherPassengerDeathLimits, 
                    string BailLimits, 
                    string DriverRiskLimits, 
                    string CollisionRolloverLimits, 
                    string FireTheftLimits, 
                    string ComprehensiveRiskLimits, 
                    string GlassBreakageLimits, 
                    string SpecialEquipmentLimits) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(MakeId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ModelId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(VersionId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(QuotationId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(DriverId));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(UsageId));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(StoredId));
            if ((Chassis == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Chassis));
            }
            if ((Plate == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Plate));
            }
            if ((Color == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Color));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(VehiclePrice));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(EnsuredAmount));
            if ((PercentageToEnsure.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(PercentageToEnsure.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OthersPropertyLimits == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(OthersPropertyLimits));
            }
            if ((OnePersonDeathLimits == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(OnePersonDeathLimits));
            }
            if ((AnotherPersonDeathLimits == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(AnotherPersonDeathLimits));
            }
            if ((PassengerDeathLimits == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PassengerDeathLimits));
            }
            if ((AnotherPassengerDeathLimits == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(AnotherPassengerDeathLimits));
            }
            if ((BailLimits == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(BailLimits));
            }
            if ((DriverRiskLimits == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(DriverRiskLimits));
            }
            if ((CollisionRolloverLimits == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(CollisionRolloverLimits));
            }
            if ((FireTheftLimits == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(FireTheftLimits));
            }
            if ((ComprehensiveRiskLimits == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ComprehensiveRiskLimits));
            }
            if ((GlassBreakageLimits == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(GlassBreakageLimits));
            }
            if ((SpecialEquipmentLimits == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(SpecialEquipmentLimits));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int MakeId, 
                    int ModelId, 
                    int VersionId, 
                    int QuotationId, 
                    int DriverId, 
                    int UsageId, 
                    int StoredId, 
                    string Chassis, 
                    string Plate, 
                    string Color, 
                    decimal VehiclePrice, 
                    decimal EnsuredAmount, 
                    global::System.Nullable<decimal> PercentageToEnsure, 
                    string OthersPropertyLimits, 
                    string OnePersonDeathLimits, 
                    string AnotherPersonDeathLimits, 
                    string PassengerDeathLimits, 
                    string AnotherPassengerDeathLimits, 
                    string BailLimits, 
                    string DriverRiskLimits, 
                    string CollisionRolloverLimits, 
                    string FireTheftLimits, 
                    string ComprehensiveRiskLimits, 
                    string GlassBreakageLimits, 
                    string SpecialEquipmentLimits, 
                    int Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(MakeId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ModelId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(VersionId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(QuotationId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(DriverId));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(UsageId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(StoredId));
            if ((Chassis == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Chassis));
            }
            if ((Plate == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Plate));
            }
            if ((Color == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Color));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(VehiclePrice));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(EnsuredAmount));
            if ((PercentageToEnsure.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(PercentageToEnsure.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((OthersPropertyLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(OthersPropertyLimits));
            }
            if ((OnePersonDeathLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(OnePersonDeathLimits));
            }
            if ((AnotherPersonDeathLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(AnotherPersonDeathLimits));
            }
            if ((PassengerDeathLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PassengerDeathLimits));
            }
            if ((AnotherPassengerDeathLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(AnotherPassengerDeathLimits));
            }
            if ((BailLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(BailLimits));
            }
            if ((DriverRiskLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(DriverRiskLimits));
            }
            if ((CollisionRolloverLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(CollisionRolloverLimits));
            }
            if ((FireTheftLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(FireTheftLimits));
            }
            if ((ComprehensiveRiskLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ComprehensiveRiskLimits));
            }
            if ((GlassBreakageLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(GlassBreakageLimits));
            }
            if ((SpecialEquipmentLimits == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(SpecialEquipmentLimits));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private @__MigrationHistoryTableAdapter ___MigrationHistoryTableAdapter;
        
        private ADDITIONAL_PRODUCTSTableAdapter _aDDITIONAL_PRODUCTSTableAdapter;
        
        private DRIVERSTableAdapter _dRIVERSTableAdapter;
        
        private PRODUCT_LIMITSTableAdapter _pRODUCT_LIMITSTableAdapter;
        
        private QUOTATIONTableAdapter _qUOTATIONTableAdapter;
        
        private ST_CITYTableAdapter _sT_CITYTableAdapter;
        
        private ST_COUNTRYTableAdapter _sT_COUNTRYTableAdapter;
        
        private ST_GLOBAL_CITYTableAdapter _sT_GLOBAL_CITYTableAdapter;
        
        private ST_GLOBAL_COUNTRYTableAdapter _sT_GLOBAL_COUNTRYTableAdapter;
        
        private ST_VEHICLE_MAKETableAdapter _sT_VEHICLE_MAKETableAdapter;
        
        private ST_VEHICLE_MODELTableAdapter _sT_VEHICLE_MODELTableAdapter;
        
        private ST_VEHICLE_STOREDTableAdapter _sT_VEHICLE_STOREDTableAdapter;
        
        private ST_VEHICLE_TYPETableAdapter _sT_VEHICLE_TYPETableAdapter;
        
        private ST_VEHICLE_TYPE_PRODUCTTableAdapter _sT_VEHICLE_TYPE_PRODUCTTableAdapter;
        
        private ST_VEHICLE_USAGETableAdapter _sT_VEHICLE_USAGETableAdapter;
        
        private ST_VEHICLE_VERSIONTableAdapter _sT_VEHICLE_VERSIONTableAdapter;
        
        private TERM_TYPESTableAdapter _tERM_TYPESTableAdapter;
        
        private VEHICLE_PRODUCTTableAdapter _vEHICLE_PRODUCTTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public @__MigrationHistoryTableAdapter @__MigrationHistoryTableAdapter {
            get {
                return this.___MigrationHistoryTableAdapter;
            }
            set {
                this.___MigrationHistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ADDITIONAL_PRODUCTSTableAdapter ADDITIONAL_PRODUCTSTableAdapter {
            get {
                return this._aDDITIONAL_PRODUCTSTableAdapter;
            }
            set {
                this._aDDITIONAL_PRODUCTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DRIVERSTableAdapter DRIVERSTableAdapter {
            get {
                return this._dRIVERSTableAdapter;
            }
            set {
                this._dRIVERSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PRODUCT_LIMITSTableAdapter PRODUCT_LIMITSTableAdapter {
            get {
                return this._pRODUCT_LIMITSTableAdapter;
            }
            set {
                this._pRODUCT_LIMITSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public QUOTATIONTableAdapter QUOTATIONTableAdapter {
            get {
                return this._qUOTATIONTableAdapter;
            }
            set {
                this._qUOTATIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_CITYTableAdapter ST_CITYTableAdapter {
            get {
                return this._sT_CITYTableAdapter;
            }
            set {
                this._sT_CITYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_COUNTRYTableAdapter ST_COUNTRYTableAdapter {
            get {
                return this._sT_COUNTRYTableAdapter;
            }
            set {
                this._sT_COUNTRYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_GLOBAL_CITYTableAdapter ST_GLOBAL_CITYTableAdapter {
            get {
                return this._sT_GLOBAL_CITYTableAdapter;
            }
            set {
                this._sT_GLOBAL_CITYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_GLOBAL_COUNTRYTableAdapter ST_GLOBAL_COUNTRYTableAdapter {
            get {
                return this._sT_GLOBAL_COUNTRYTableAdapter;
            }
            set {
                this._sT_GLOBAL_COUNTRYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_VEHICLE_MAKETableAdapter ST_VEHICLE_MAKETableAdapter {
            get {
                return this._sT_VEHICLE_MAKETableAdapter;
            }
            set {
                this._sT_VEHICLE_MAKETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_VEHICLE_MODELTableAdapter ST_VEHICLE_MODELTableAdapter {
            get {
                return this._sT_VEHICLE_MODELTableAdapter;
            }
            set {
                this._sT_VEHICLE_MODELTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_VEHICLE_STOREDTableAdapter ST_VEHICLE_STOREDTableAdapter {
            get {
                return this._sT_VEHICLE_STOREDTableAdapter;
            }
            set {
                this._sT_VEHICLE_STOREDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_VEHICLE_TYPETableAdapter ST_VEHICLE_TYPETableAdapter {
            get {
                return this._sT_VEHICLE_TYPETableAdapter;
            }
            set {
                this._sT_VEHICLE_TYPETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_VEHICLE_TYPE_PRODUCTTableAdapter ST_VEHICLE_TYPE_PRODUCTTableAdapter {
            get {
                return this._sT_VEHICLE_TYPE_PRODUCTTableAdapter;
            }
            set {
                this._sT_VEHICLE_TYPE_PRODUCTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_VEHICLE_USAGETableAdapter ST_VEHICLE_USAGETableAdapter {
            get {
                return this._sT_VEHICLE_USAGETableAdapter;
            }
            set {
                this._sT_VEHICLE_USAGETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ST_VEHICLE_VERSIONTableAdapter ST_VEHICLE_VERSIONTableAdapter {
            get {
                return this._sT_VEHICLE_VERSIONTableAdapter;
            }
            set {
                this._sT_VEHICLE_VERSIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TERM_TYPESTableAdapter TERM_TYPESTableAdapter {
            get {
                return this._tERM_TYPESTableAdapter;
            }
            set {
                this._tERM_TYPESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public VEHICLE_PRODUCTTableAdapter VEHICLE_PRODUCTTableAdapter {
            get {
                return this._vEHICLE_PRODUCTTableAdapter;
            }
            set {
                this._vEHICLE_PRODUCTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this.___MigrationHistoryTableAdapter != null) 
                            && (this.___MigrationHistoryTableAdapter.Connection != null))) {
                    return this.___MigrationHistoryTableAdapter.Connection;
                }
                if (((this._aDDITIONAL_PRODUCTSTableAdapter != null) 
                            && (this._aDDITIONAL_PRODUCTSTableAdapter.Connection != null))) {
                    return this._aDDITIONAL_PRODUCTSTableAdapter.Connection;
                }
                if (((this._dRIVERSTableAdapter != null) 
                            && (this._dRIVERSTableAdapter.Connection != null))) {
                    return this._dRIVERSTableAdapter.Connection;
                }
                if (((this._pRODUCT_LIMITSTableAdapter != null) 
                            && (this._pRODUCT_LIMITSTableAdapter.Connection != null))) {
                    return this._pRODUCT_LIMITSTableAdapter.Connection;
                }
                if (((this._qUOTATIONTableAdapter != null) 
                            && (this._qUOTATIONTableAdapter.Connection != null))) {
                    return this._qUOTATIONTableAdapter.Connection;
                }
                if (((this._sT_CITYTableAdapter != null) 
                            && (this._sT_CITYTableAdapter.Connection != null))) {
                    return this._sT_CITYTableAdapter.Connection;
                }
                if (((this._sT_COUNTRYTableAdapter != null) 
                            && (this._sT_COUNTRYTableAdapter.Connection != null))) {
                    return this._sT_COUNTRYTableAdapter.Connection;
                }
                if (((this._sT_GLOBAL_CITYTableAdapter != null) 
                            && (this._sT_GLOBAL_CITYTableAdapter.Connection != null))) {
                    return this._sT_GLOBAL_CITYTableAdapter.Connection;
                }
                if (((this._sT_GLOBAL_COUNTRYTableAdapter != null) 
                            && (this._sT_GLOBAL_COUNTRYTableAdapter.Connection != null))) {
                    return this._sT_GLOBAL_COUNTRYTableAdapter.Connection;
                }
                if (((this._sT_VEHICLE_MAKETableAdapter != null) 
                            && (this._sT_VEHICLE_MAKETableAdapter.Connection != null))) {
                    return this._sT_VEHICLE_MAKETableAdapter.Connection;
                }
                if (((this._sT_VEHICLE_MODELTableAdapter != null) 
                            && (this._sT_VEHICLE_MODELTableAdapter.Connection != null))) {
                    return this._sT_VEHICLE_MODELTableAdapter.Connection;
                }
                if (((this._sT_VEHICLE_STOREDTableAdapter != null) 
                            && (this._sT_VEHICLE_STOREDTableAdapter.Connection != null))) {
                    return this._sT_VEHICLE_STOREDTableAdapter.Connection;
                }
                if (((this._sT_VEHICLE_TYPETableAdapter != null) 
                            && (this._sT_VEHICLE_TYPETableAdapter.Connection != null))) {
                    return this._sT_VEHICLE_TYPETableAdapter.Connection;
                }
                if (((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null) 
                            && (this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Connection != null))) {
                    return this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Connection;
                }
                if (((this._sT_VEHICLE_USAGETableAdapter != null) 
                            && (this._sT_VEHICLE_USAGETableAdapter.Connection != null))) {
                    return this._sT_VEHICLE_USAGETableAdapter.Connection;
                }
                if (((this._sT_VEHICLE_VERSIONTableAdapter != null) 
                            && (this._sT_VEHICLE_VERSIONTableAdapter.Connection != null))) {
                    return this._sT_VEHICLE_VERSIONTableAdapter.Connection;
                }
                if (((this._tERM_TYPESTableAdapter != null) 
                            && (this._tERM_TYPESTableAdapter.Connection != null))) {
                    return this._tERM_TYPESTableAdapter.Connection;
                }
                if (((this._vEHICLE_PRODUCTTableAdapter != null) 
                            && (this._vEHICLE_PRODUCTTableAdapter.Connection != null))) {
                    return this._vEHICLE_PRODUCTTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this.___MigrationHistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aDDITIONAL_PRODUCTSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dRIVERSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pRODUCT_LIMITSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._qUOTATIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_CITYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_COUNTRYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_GLOBAL_CITYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_GLOBAL_COUNTRYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_VEHICLE_MAKETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_VEHICLE_MODELTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_VEHICLE_STOREDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_VEHICLE_TYPETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_VEHICLE_USAGETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sT_VEHICLE_VERSIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tERM_TYPESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vEHICLE_PRODUCTTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(POS_SiteDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sT_VEHICLE_TYPETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_VEHICLE_TYPE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_VEHICLE_TYPETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tERM_TYPESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TERM_TYPES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tERM_TYPESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_VEHICLE_MAKETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_VEHICLE_MAKE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_VEHICLE_MAKETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_GLOBAL_COUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_GLOBAL_COUNTRY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_GLOBAL_COUNTRYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._qUOTATIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.QUOTATION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._qUOTATIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_GLOBAL_CITYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_GLOBAL_CITY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_GLOBAL_CITYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_VEHICLE_MODELTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_VEHICLE_MODEL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_VEHICLE_MODELTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_VEHICLE_VERSIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_VEHICLE_VERSION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_VEHICLE_VERSIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dRIVERSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DRIVERS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dRIVERSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_VEHICLE_USAGETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_VEHICLE_USAGE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_VEHICLE_USAGETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_VEHICLE_STOREDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_VEHICLE_STORED.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_VEHICLE_STOREDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vEHICLE_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VEHICLE_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vEHICLE_PRODUCTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pRODUCT_LIMITSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PRODUCT_LIMITS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pRODUCT_LIMITSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_CITYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_CITY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_CITYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_VEHICLE_TYPE_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aDDITIONAL_PRODUCTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ADDITIONAL_PRODUCTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aDDITIONAL_PRODUCTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sT_COUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ST_COUNTRY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sT_COUNTRYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this.___MigrationHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.@__MigrationHistory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this.___MigrationHistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(POS_SiteDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sT_VEHICLE_TYPETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_VEHICLE_TYPE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_VEHICLE_TYPETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tERM_TYPESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TERM_TYPES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tERM_TYPESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_VEHICLE_MAKETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_VEHICLE_MAKE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_VEHICLE_MAKETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_GLOBAL_COUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_GLOBAL_COUNTRY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_GLOBAL_COUNTRYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._qUOTATIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.QUOTATION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._qUOTATIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_GLOBAL_CITYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_GLOBAL_CITY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_GLOBAL_CITYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_VEHICLE_MODELTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_VEHICLE_MODEL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_VEHICLE_MODELTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_VEHICLE_VERSIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_VEHICLE_VERSION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_VEHICLE_VERSIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dRIVERSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DRIVERS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dRIVERSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_VEHICLE_USAGETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_VEHICLE_USAGE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_VEHICLE_USAGETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_VEHICLE_STOREDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_VEHICLE_STORED.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_VEHICLE_STOREDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vEHICLE_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VEHICLE_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vEHICLE_PRODUCTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pRODUCT_LIMITSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PRODUCT_LIMITS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pRODUCT_LIMITSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_CITYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_CITY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_CITYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_VEHICLE_TYPE_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aDDITIONAL_PRODUCTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ADDITIONAL_PRODUCTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aDDITIONAL_PRODUCTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sT_COUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ST_COUNTRY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sT_COUNTRYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this.___MigrationHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.@__MigrationHistory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this.___MigrationHistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(POS_SiteDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this.___MigrationHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.@__MigrationHistory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this.___MigrationHistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_COUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_COUNTRY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_COUNTRYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aDDITIONAL_PRODUCTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ADDITIONAL_PRODUCTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aDDITIONAL_PRODUCTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_VEHICLE_TYPE_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_CITYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_CITY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_CITYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pRODUCT_LIMITSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PRODUCT_LIMITS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pRODUCT_LIMITSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vEHICLE_PRODUCTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VEHICLE_PRODUCT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vEHICLE_PRODUCTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_VEHICLE_STOREDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_VEHICLE_STORED.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_VEHICLE_STOREDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_VEHICLE_USAGETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_VEHICLE_USAGE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_VEHICLE_USAGETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dRIVERSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DRIVERS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dRIVERSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_VEHICLE_VERSIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_VEHICLE_VERSION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_VEHICLE_VERSIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_VEHICLE_MODELTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_VEHICLE_MODEL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_VEHICLE_MODELTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_GLOBAL_CITYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_GLOBAL_CITY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_GLOBAL_CITYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._qUOTATIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.QUOTATION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._qUOTATIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_GLOBAL_COUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_GLOBAL_COUNTRY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_GLOBAL_COUNTRYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_VEHICLE_MAKETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_VEHICLE_MAKE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_VEHICLE_MAKETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tERM_TYPESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TERM_TYPES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tERM_TYPESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sT_VEHICLE_TYPETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ST_VEHICLE_TYPE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sT_VEHICLE_TYPETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(POS_SiteDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this.___MigrationHistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this.___MigrationHistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aDDITIONAL_PRODUCTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aDDITIONAL_PRODUCTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dRIVERSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dRIVERSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pRODUCT_LIMITSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pRODUCT_LIMITSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._qUOTATIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._qUOTATIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_CITYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_CITYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_COUNTRYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_COUNTRYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_GLOBAL_CITYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_GLOBAL_CITYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_GLOBAL_COUNTRYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_GLOBAL_COUNTRYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_VEHICLE_MAKETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_VEHICLE_MAKETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_VEHICLE_MODELTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_VEHICLE_MODELTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_VEHICLE_STOREDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_VEHICLE_STOREDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_VEHICLE_TYPETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_VEHICLE_TYPETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_VEHICLE_USAGETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_VEHICLE_USAGETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sT_VEHICLE_VERSIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sT_VEHICLE_VERSIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tERM_TYPESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tERM_TYPESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vEHICLE_PRODUCTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vEHICLE_PRODUCTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this.___MigrationHistoryTableAdapter != null)) {
                    revertConnections.Add(this.___MigrationHistoryTableAdapter, this.___MigrationHistoryTableAdapter.Connection);
                    this.___MigrationHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this.___MigrationHistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this.___MigrationHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this.___MigrationHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this.___MigrationHistoryTableAdapter.Adapter);
                    }
                }
                if ((this._aDDITIONAL_PRODUCTSTableAdapter != null)) {
                    revertConnections.Add(this._aDDITIONAL_PRODUCTSTableAdapter, this._aDDITIONAL_PRODUCTSTableAdapter.Connection);
                    this._aDDITIONAL_PRODUCTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aDDITIONAL_PRODUCTSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aDDITIONAL_PRODUCTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aDDITIONAL_PRODUCTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aDDITIONAL_PRODUCTSTableAdapter.Adapter);
                    }
                }
                if ((this._dRIVERSTableAdapter != null)) {
                    revertConnections.Add(this._dRIVERSTableAdapter, this._dRIVERSTableAdapter.Connection);
                    this._dRIVERSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dRIVERSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dRIVERSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dRIVERSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dRIVERSTableAdapter.Adapter);
                    }
                }
                if ((this._pRODUCT_LIMITSTableAdapter != null)) {
                    revertConnections.Add(this._pRODUCT_LIMITSTableAdapter, this._pRODUCT_LIMITSTableAdapter.Connection);
                    this._pRODUCT_LIMITSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pRODUCT_LIMITSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pRODUCT_LIMITSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pRODUCT_LIMITSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pRODUCT_LIMITSTableAdapter.Adapter);
                    }
                }
                if ((this._qUOTATIONTableAdapter != null)) {
                    revertConnections.Add(this._qUOTATIONTableAdapter, this._qUOTATIONTableAdapter.Connection);
                    this._qUOTATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._qUOTATIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._qUOTATIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._qUOTATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._qUOTATIONTableAdapter.Adapter);
                    }
                }
                if ((this._sT_CITYTableAdapter != null)) {
                    revertConnections.Add(this._sT_CITYTableAdapter, this._sT_CITYTableAdapter.Connection);
                    this._sT_CITYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_CITYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_CITYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_CITYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_CITYTableAdapter.Adapter);
                    }
                }
                if ((this._sT_COUNTRYTableAdapter != null)) {
                    revertConnections.Add(this._sT_COUNTRYTableAdapter, this._sT_COUNTRYTableAdapter.Connection);
                    this._sT_COUNTRYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_COUNTRYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_COUNTRYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_COUNTRYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_COUNTRYTableAdapter.Adapter);
                    }
                }
                if ((this._sT_GLOBAL_CITYTableAdapter != null)) {
                    revertConnections.Add(this._sT_GLOBAL_CITYTableAdapter, this._sT_GLOBAL_CITYTableAdapter.Connection);
                    this._sT_GLOBAL_CITYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_GLOBAL_CITYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_GLOBAL_CITYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_GLOBAL_CITYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_GLOBAL_CITYTableAdapter.Adapter);
                    }
                }
                if ((this._sT_GLOBAL_COUNTRYTableAdapter != null)) {
                    revertConnections.Add(this._sT_GLOBAL_COUNTRYTableAdapter, this._sT_GLOBAL_COUNTRYTableAdapter.Connection);
                    this._sT_GLOBAL_COUNTRYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_GLOBAL_COUNTRYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_GLOBAL_COUNTRYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_GLOBAL_COUNTRYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_GLOBAL_COUNTRYTableAdapter.Adapter);
                    }
                }
                if ((this._sT_VEHICLE_MAKETableAdapter != null)) {
                    revertConnections.Add(this._sT_VEHICLE_MAKETableAdapter, this._sT_VEHICLE_MAKETableAdapter.Connection);
                    this._sT_VEHICLE_MAKETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_VEHICLE_MAKETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_VEHICLE_MAKETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_VEHICLE_MAKETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_VEHICLE_MAKETableAdapter.Adapter);
                    }
                }
                if ((this._sT_VEHICLE_MODELTableAdapter != null)) {
                    revertConnections.Add(this._sT_VEHICLE_MODELTableAdapter, this._sT_VEHICLE_MODELTableAdapter.Connection);
                    this._sT_VEHICLE_MODELTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_VEHICLE_MODELTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_VEHICLE_MODELTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_VEHICLE_MODELTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_VEHICLE_MODELTableAdapter.Adapter);
                    }
                }
                if ((this._sT_VEHICLE_STOREDTableAdapter != null)) {
                    revertConnections.Add(this._sT_VEHICLE_STOREDTableAdapter, this._sT_VEHICLE_STOREDTableAdapter.Connection);
                    this._sT_VEHICLE_STOREDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_VEHICLE_STOREDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_VEHICLE_STOREDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_VEHICLE_STOREDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_VEHICLE_STOREDTableAdapter.Adapter);
                    }
                }
                if ((this._sT_VEHICLE_TYPETableAdapter != null)) {
                    revertConnections.Add(this._sT_VEHICLE_TYPETableAdapter, this._sT_VEHICLE_TYPETableAdapter.Connection);
                    this._sT_VEHICLE_TYPETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_VEHICLE_TYPETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_VEHICLE_TYPETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_VEHICLE_TYPETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_VEHICLE_TYPETableAdapter.Adapter);
                    }
                }
                if ((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null)) {
                    revertConnections.Add(this._sT_VEHICLE_TYPE_PRODUCTTableAdapter, this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Connection);
                    this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Adapter);
                    }
                }
                if ((this._sT_VEHICLE_USAGETableAdapter != null)) {
                    revertConnections.Add(this._sT_VEHICLE_USAGETableAdapter, this._sT_VEHICLE_USAGETableAdapter.Connection);
                    this._sT_VEHICLE_USAGETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_VEHICLE_USAGETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_VEHICLE_USAGETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_VEHICLE_USAGETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_VEHICLE_USAGETableAdapter.Adapter);
                    }
                }
                if ((this._sT_VEHICLE_VERSIONTableAdapter != null)) {
                    revertConnections.Add(this._sT_VEHICLE_VERSIONTableAdapter, this._sT_VEHICLE_VERSIONTableAdapter.Connection);
                    this._sT_VEHICLE_VERSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sT_VEHICLE_VERSIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sT_VEHICLE_VERSIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sT_VEHICLE_VERSIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sT_VEHICLE_VERSIONTableAdapter.Adapter);
                    }
                }
                if ((this._tERM_TYPESTableAdapter != null)) {
                    revertConnections.Add(this._tERM_TYPESTableAdapter, this._tERM_TYPESTableAdapter.Connection);
                    this._tERM_TYPESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tERM_TYPESTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tERM_TYPESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tERM_TYPESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tERM_TYPESTableAdapter.Adapter);
                    }
                }
                if ((this._vEHICLE_PRODUCTTableAdapter != null)) {
                    revertConnections.Add(this._vEHICLE_PRODUCTTableAdapter, this._vEHICLE_PRODUCTTableAdapter.Connection);
                    this._vEHICLE_PRODUCTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vEHICLE_PRODUCTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vEHICLE_PRODUCTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vEHICLE_PRODUCTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vEHICLE_PRODUCTTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this.___MigrationHistoryTableAdapter != null)) {
                    this.___MigrationHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this.___MigrationHistoryTableAdapter]));
                    this.___MigrationHistoryTableAdapter.Transaction = null;
                }
                if ((this._aDDITIONAL_PRODUCTSTableAdapter != null)) {
                    this._aDDITIONAL_PRODUCTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aDDITIONAL_PRODUCTSTableAdapter]));
                    this._aDDITIONAL_PRODUCTSTableAdapter.Transaction = null;
                }
                if ((this._dRIVERSTableAdapter != null)) {
                    this._dRIVERSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dRIVERSTableAdapter]));
                    this._dRIVERSTableAdapter.Transaction = null;
                }
                if ((this._pRODUCT_LIMITSTableAdapter != null)) {
                    this._pRODUCT_LIMITSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pRODUCT_LIMITSTableAdapter]));
                    this._pRODUCT_LIMITSTableAdapter.Transaction = null;
                }
                if ((this._qUOTATIONTableAdapter != null)) {
                    this._qUOTATIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._qUOTATIONTableAdapter]));
                    this._qUOTATIONTableAdapter.Transaction = null;
                }
                if ((this._sT_CITYTableAdapter != null)) {
                    this._sT_CITYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_CITYTableAdapter]));
                    this._sT_CITYTableAdapter.Transaction = null;
                }
                if ((this._sT_COUNTRYTableAdapter != null)) {
                    this._sT_COUNTRYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_COUNTRYTableAdapter]));
                    this._sT_COUNTRYTableAdapter.Transaction = null;
                }
                if ((this._sT_GLOBAL_CITYTableAdapter != null)) {
                    this._sT_GLOBAL_CITYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_GLOBAL_CITYTableAdapter]));
                    this._sT_GLOBAL_CITYTableAdapter.Transaction = null;
                }
                if ((this._sT_GLOBAL_COUNTRYTableAdapter != null)) {
                    this._sT_GLOBAL_COUNTRYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_GLOBAL_COUNTRYTableAdapter]));
                    this._sT_GLOBAL_COUNTRYTableAdapter.Transaction = null;
                }
                if ((this._sT_VEHICLE_MAKETableAdapter != null)) {
                    this._sT_VEHICLE_MAKETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_VEHICLE_MAKETableAdapter]));
                    this._sT_VEHICLE_MAKETableAdapter.Transaction = null;
                }
                if ((this._sT_VEHICLE_MODELTableAdapter != null)) {
                    this._sT_VEHICLE_MODELTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_VEHICLE_MODELTableAdapter]));
                    this._sT_VEHICLE_MODELTableAdapter.Transaction = null;
                }
                if ((this._sT_VEHICLE_STOREDTableAdapter != null)) {
                    this._sT_VEHICLE_STOREDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_VEHICLE_STOREDTableAdapter]));
                    this._sT_VEHICLE_STOREDTableAdapter.Transaction = null;
                }
                if ((this._sT_VEHICLE_TYPETableAdapter != null)) {
                    this._sT_VEHICLE_TYPETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_VEHICLE_TYPETableAdapter]));
                    this._sT_VEHICLE_TYPETableAdapter.Transaction = null;
                }
                if ((this._sT_VEHICLE_TYPE_PRODUCTTableAdapter != null)) {
                    this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_VEHICLE_TYPE_PRODUCTTableAdapter]));
                    this._sT_VEHICLE_TYPE_PRODUCTTableAdapter.Transaction = null;
                }
                if ((this._sT_VEHICLE_USAGETableAdapter != null)) {
                    this._sT_VEHICLE_USAGETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_VEHICLE_USAGETableAdapter]));
                    this._sT_VEHICLE_USAGETableAdapter.Transaction = null;
                }
                if ((this._sT_VEHICLE_VERSIONTableAdapter != null)) {
                    this._sT_VEHICLE_VERSIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sT_VEHICLE_VERSIONTableAdapter]));
                    this._sT_VEHICLE_VERSIONTableAdapter.Transaction = null;
                }
                if ((this._tERM_TYPESTableAdapter != null)) {
                    this._tERM_TYPESTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tERM_TYPESTableAdapter]));
                    this._tERM_TYPESTableAdapter.Transaction = null;
                }
                if ((this._vEHICLE_PRODUCTTableAdapter != null)) {
                    this._vEHICLE_PRODUCTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vEHICLE_PRODUCTTableAdapter]));
                    this._vEHICLE_PRODUCTTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591