<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v6I9P/zNwJcxAAAAAElFTkSuQmCC
</value>
  </data>
</root>