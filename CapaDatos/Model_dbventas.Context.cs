//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbventasEntities : DbContext
    {
        public dbventasEntities()
            : base("name=dbventasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<articulo> articulo { get; set; }
        public virtual DbSet<categoria> categoria { get; set; }
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<detalle_ingreso> detalle_ingreso { get; set; }
        public virtual DbSet<detalle_venta> detalle_venta { get; set; }
        public virtual DbSet<ingreso> ingreso { get; set; }
        public virtual DbSet<presentacion> presentacion { get; set; }
        public virtual DbSet<proveedor> proveedor { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<trabajador> trabajador { get; set; }
        public virtual DbSet<venta> venta { get; set; }
        public virtual DbSet<ma_ana> ma_ana { get; set; }
        public virtual DbSet<VW_CLIENTES_LOAD> VW_CLIENTES_LOAD { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_GET_CLIENTES_BUSCAR_Result> SP_GET_CLIENTES_BUSCAR(string codigoCliente, string identificacion, string nombre_Completo, string telefono)
        {
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombre_CompletoParameter = nombre_Completo != null ?
                new ObjectParameter("Nombre_Completo", nombre_Completo) :
                new ObjectParameter("Nombre_Completo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLIENTES_BUSCAR_Result>("SP_GET_CLIENTES_BUSCAR", codigoClienteParameter, identificacionParameter, nombre_CompletoParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<SP_GET_CLIENTES_LOAD_Result> SP_GET_CLIENTES_LOAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLIENTES_LOAD_Result>("SP_GET_CLIENTES_LOAD");
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_SET_CLIENTE_INSERT_UPDATE(Nullable<int> idcliente, string nombre, string apellidos, string sexo, Nullable<System.DateTime> fecha_nacimiento, string tipo_documento, string num_documento, string direccion, string telefono, string email, Nullable<bool> status, Nullable<System.DateTime> fechaAdiciona, Nullable<System.DateTime> fechaModifica, string usuarioAdiciona, string usuarioModifica)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(System.DateTime));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(string));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var fechaAdicionaParameter = fechaAdiciona.HasValue ?
                new ObjectParameter("FechaAdiciona", fechaAdiciona) :
                new ObjectParameter("FechaAdiciona", typeof(System.DateTime));
    
            var fechaModificaParameter = fechaModifica.HasValue ?
                new ObjectParameter("FechaModifica", fechaModifica) :
                new ObjectParameter("FechaModifica", typeof(System.DateTime));
    
            var usuarioAdicionaParameter = usuarioAdiciona != null ?
                new ObjectParameter("UsuarioAdiciona", usuarioAdiciona) :
                new ObjectParameter("UsuarioAdiciona", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica != null ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_CLIENTE_INSERT_UPDATE", idclienteParameter, nombreParameter, apellidosParameter, sexoParameter, fecha_nacimientoParameter, tipo_documentoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, statusParameter, fechaAdicionaParameter, fechaModificaParameter, usuarioAdicionaParameter, usuarioModificaParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spbuscar_articulo_nombre_Result> spbuscar_articulo_nombre(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_articulo_nombre_Result>("spbuscar_articulo_nombre", textobuscarParameter);
        }
    
        public virtual ObjectResult<spbuscar_categoria_Result> spbuscar_categoria(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_categoria_Result>("spbuscar_categoria", textobuscarParameter);
        }
    
        public virtual ObjectResult<spbuscar_presentacion_Nombre_Result> spbuscar_presentacion_Nombre(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_presentacion_Nombre_Result>("spbuscar_presentacion_Nombre", textobuscarParameter);
        }
    
        public virtual ObjectResult<spbuscar_proveedor_num_documento_Result> spbuscar_proveedor_num_documento(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_proveedor_num_documento_Result>("spbuscar_proveedor_num_documento", textobuscarParameter);
        }
    
        public virtual ObjectResult<spbuscar_proveedor_razon_social_Result> spbuscar_proveedor_razon_social(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spbuscar_proveedor_razon_social_Result>("spbuscar_proveedor_razon_social", textobuscarParameter);
        }
    
        public virtual int speditar_articulo(Nullable<int> idarticulo, string codigo, string nombre, string descripcion, byte[] imagen, Nullable<int> idcategoria, Nullable<int> idpresentacion)
        {
            var idarticuloParameter = idarticulo.HasValue ?
                new ObjectParameter("idarticulo", idarticulo) :
                new ObjectParameter("idarticulo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            var idpresentacionParameter = idpresentacion.HasValue ?
                new ObjectParameter("idpresentacion", idpresentacion) :
                new ObjectParameter("idpresentacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speditar_articulo", idarticuloParameter, codigoParameter, nombreParameter, descripcionParameter, imagenParameter, idcategoriaParameter, idpresentacionParameter);
        }
    
        public virtual int speditar_categoria(Nullable<int> idcategoria, string nombre, string descripcion)
        {
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speditar_categoria", idcategoriaParameter, nombreParameter, descripcionParameter);
        }
    
        public virtual int speditar_presentacion(Nullable<int> idpresentacion, string nombre, string descripcion)
        {
            var idpresentacionParameter = idpresentacion.HasValue ?
                new ObjectParameter("idpresentacion", idpresentacion) :
                new ObjectParameter("idpresentacion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speditar_presentacion", idpresentacionParameter, nombreParameter, descripcionParameter);
        }
    
        public virtual int speditar_proveedor(Nullable<int> idproveedor, string razon_social, string sector_comercial, string tipo_documento, string num_documento, string direccion, string telefono, string email, string url)
        {
            var idproveedorParameter = idproveedor.HasValue ?
                new ObjectParameter("idproveedor", idproveedor) :
                new ObjectParameter("idproveedor", typeof(int));
    
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var sector_comercialParameter = sector_comercial != null ?
                new ObjectParameter("sector_comercial", sector_comercial) :
                new ObjectParameter("sector_comercial", typeof(string));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(string));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speditar_proveedor", idproveedorParameter, razon_socialParameter, sector_comercialParameter, tipo_documentoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, urlParameter);
        }
    
        public virtual int speliminar_categoria(Nullable<int> idcategoria)
        {
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speliminar_categoria", idcategoriaParameter);
        }
    
        public virtual int speliminar_presentacion(Nullable<int> idpresentacion)
        {
            var idpresentacionParameter = idpresentacion.HasValue ?
                new ObjectParameter("idpresentacion", idpresentacion) :
                new ObjectParameter("idpresentacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speliminar_presentacion", idpresentacionParameter);
        }
    
        public virtual int speliminar_proveedor(Nullable<int> idproveedor)
        {
            var idproveedorParameter = idproveedor.HasValue ?
                new ObjectParameter("idproveedor", idproveedor) :
                new ObjectParameter("idproveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("speliminar_proveedor", idproveedorParameter);
        }
    
        public virtual int spinsertar_articulo(ObjectParameter idarticulo, string codigo, string nombre, string descripcion, byte[] imagen, Nullable<int> idcategoria, Nullable<int> idpresentacion)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            var idpresentacionParameter = idpresentacion.HasValue ?
                new ObjectParameter("idpresentacion", idpresentacion) :
                new ObjectParameter("idpresentacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spinsertar_articulo", idarticulo, codigoParameter, nombreParameter, descripcionParameter, imagenParameter, idcategoriaParameter, idpresentacionParameter);
        }
    
        public virtual int spinsertar_categoria(ObjectParameter idcategoria, string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spinsertar_categoria", idcategoria, nombreParameter, descripcionParameter);
        }
    
        public virtual int spinsertar_presentacion(ObjectParameter idpresentacion, string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spinsertar_presentacion", idpresentacion, nombreParameter, descripcionParameter);
        }
    
        public virtual int spinsertar_proveedor(ObjectParameter idproveedor, string razon_social, string sector_comercial, string tipo_documento, string num_documento, string direccion, string telefono, string email, string url)
        {
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var sector_comercialParameter = sector_comercial != null ?
                new ObjectParameter("sector_comercial", sector_comercial) :
                new ObjectParameter("sector_comercial", typeof(string));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(string));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spinsertar_proveedor", idproveedor, razon_socialParameter, sector_comercialParameter, tipo_documentoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, urlParameter);
        }
    
        public virtual ObjectResult<spmostrar_articulo_Result> spmostrar_articulo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_articulo_Result>("spmostrar_articulo");
        }
    
        public virtual ObjectResult<spmostrar_categoria_Result> spmostrar_categoria()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_categoria_Result>("spmostrar_categoria");
        }
    
        public virtual ObjectResult<spmostrar_presentacion_Result> spmostrar_presentacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_presentacion_Result>("spmostrar_presentacion");
        }
    
        public virtual ObjectResult<spmostrar_proveedor_Result> spmostrar_proveedor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmostrar_proveedor_Result>("spmostrar_proveedor");
        }
    }
}
