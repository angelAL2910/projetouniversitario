//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SellerManagementData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SellersManagementEntities : DbContext
    {
        public SellersManagementEntities()
            : base("name=SellersManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SP_FILL_DROPDOWN_Result> SP_FILL_DROPDOWN(string dropDownType)
        {
            var dropDownTypeParameter = dropDownType != null ?
                new ObjectParameter("DropDownType", dropDownType) :
                new ObjectParameter("DropDownType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FILL_DROPDOWN_Result>("SP_FILL_DROPDOWN", dropDownTypeParameter);
        }
    
        public virtual ObjectResult<SP_GET_MANAGEMENT_RESULTS_Result> SP_GET_MANAGEMENT_RESULTS(Nullable<int> managementResultId)
        {
            var managementResultIdParameter = managementResultId.HasValue ?
                new ObjectParameter("ManagementResultId", managementResultId) :
                new ObjectParameter("ManagementResultId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_MANAGEMENT_RESULTS_Result>("SP_GET_MANAGEMENT_RESULTS", managementResultIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_MANAGEMENT_TYPES_Result> SP_GET_MANAGEMENT_TYPES(Nullable<int> managementTypeId)
        {
            var managementTypeIdParameter = managementTypeId.HasValue ?
                new ObjectParameter("ManagementTypeId", managementTypeId) :
                new ObjectParameter("ManagementTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_MANAGEMENT_TYPES_Result>("SP_GET_MANAGEMENT_TYPES", managementTypeIdParameter);
        }
    
        public virtual ObjectResult<SP_SET_MANAGEMENT_Result> SP_SET_MANAGEMENT(Nullable<int> managementId, Nullable<int> managementSupervisorCode, Nullable<int> managementSellerCode, Nullable<int> managementTypeId, Nullable<int> managementResultsId, string comment, string suggestedImprovement, Nullable<int> createUserId)
        {
            var managementIdParameter = managementId.HasValue ?
                new ObjectParameter("ManagementId", managementId) :
                new ObjectParameter("ManagementId", typeof(int));
    
            var managementSupervisorCodeParameter = managementSupervisorCode.HasValue ?
                new ObjectParameter("ManagementSupervisorCode", managementSupervisorCode) :
                new ObjectParameter("ManagementSupervisorCode", typeof(int));
    
            var managementSellerCodeParameter = managementSellerCode.HasValue ?
                new ObjectParameter("ManagementSellerCode", managementSellerCode) :
                new ObjectParameter("ManagementSellerCode", typeof(int));
    
            var managementTypeIdParameter = managementTypeId.HasValue ?
                new ObjectParameter("ManagementTypeId", managementTypeId) :
                new ObjectParameter("ManagementTypeId", typeof(int));
    
            var managementResultsIdParameter = managementResultsId.HasValue ?
                new ObjectParameter("ManagementResultsId", managementResultsId) :
                new ObjectParameter("ManagementResultsId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var suggestedImprovementParameter = suggestedImprovement != null ?
                new ObjectParameter("SuggestedImprovement", suggestedImprovement) :
                new ObjectParameter("SuggestedImprovement", typeof(string));
    
            var createUserIdParameter = createUserId.HasValue ?
                new ObjectParameter("CreateUserId", createUserId) :
                new ObjectParameter("CreateUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SET_MANAGEMENT_Result>("SP_SET_MANAGEMENT", managementIdParameter, managementSupervisorCodeParameter, managementSellerCodeParameter, managementTypeIdParameter, managementResultsIdParameter, commentParameter, suggestedImprovementParameter, createUserIdParameter);
        }
    
        public virtual ObjectResult<SP_GET_MANAGEMENT_Result> SP_GET_MANAGEMENT(Nullable<int> managementId, Nullable<int> managementSupervisorCode, Nullable<int> managementSellerCode)
        {
            var managementIdParameter = managementId.HasValue ?
                new ObjectParameter("ManagementId", managementId) :
                new ObjectParameter("ManagementId", typeof(int));
    
            var managementSupervisorCodeParameter = managementSupervisorCode.HasValue ?
                new ObjectParameter("ManagementSupervisorCode", managementSupervisorCode) :
                new ObjectParameter("ManagementSupervisorCode", typeof(int));
    
            var managementSellerCodeParameter = managementSellerCode.HasValue ?
                new ObjectParameter("ManagementSellerCode", managementSellerCode) :
                new ObjectParameter("ManagementSellerCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_MANAGEMENT_Result>("SP_GET_MANAGEMENT", managementIdParameter, managementSupervisorCodeParameter, managementSellerCodeParameter);
        }
    }
}
